"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["295"],{1941:function(e,n,t){t.r(n),t.d(n,{default:()=>d});var r=t(1549),i=t(6603);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"html",children:["HTML",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Dieses Tutorial hilft Ihnen dabei, eine HTML SSR-Anwendung mit Gez von Grund auf zu erstellen. Wir werden anhand eines vollst\xe4ndigen Beispiels zeigen, wie Sie mit dem Gez-Framework eine serverseitig gerenderte Anwendung erstellen k\xf6nnen."}),"\n",(0,r.jsxs)(n.h2,{id:"projektstruktur",children:["Projektstruktur",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projektstruktur",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Zun\xe4chst lassen Sie uns die grundlegende Struktur des Projekts verstehen:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # Projektkonfigurationsdatei, definiert Abh\xe4ngigkeiten und Skriptbefehle\n├── tsconfig.json        # TypeScript-Konfigurationsdatei, setzt Compiler-Optionen\n└── src                  # Quellcode-Verzeichnis\n    ├── app.ts           # Hauptanwendungskomponente, definiert Seitenstruktur und Interaktionslogik\n    ├── create-app.ts    # Anwendungsinstanz-Erstellungsfabrik, verantwortlich f\xfcr die Initialisierung der Anwendung\n    ├── entry.client.ts  # Client-Einstiegspunktdatei, verarbeitet das Rendering im Browser\n    ├── entry.node.ts    # Node.js-Server-Einstiegspunktdatei, verantwortlich f\xfcr die Entwicklungsumgebungskonfiguration und Serverstart\n    └── entry.server.ts  # Server-Einstiegspunktdatei, verarbeitet das SSR-Rendering\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"projektkonfiguration",children:["Projektkonfiguration",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projektkonfiguration",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die ",(0,r.jsx)(n.code,{children:"package.json"}),"-Datei, um Projektabh\xe4ngigkeiten und Skripte zu konfigurieren:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Nachdem Sie die ",(0,r.jsx)(n.code,{children:"package.json"}),"-Datei erstellt haben, m\xfcssen Sie die Projektabh\xe4ngigkeiten installieren. Sie k\xf6nnen einen der folgenden Befehle verwenden:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# oder\nyarn install\n# oder\nnpm install\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dadurch werden alle erforderlichen Abh\xe4ngigkeiten installiert, einschlie\xdflich TypeScript und SSR-bezogene Abh\xe4ngigkeiten."}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die ",(0,r.jsx)(n.code,{children:"tsconfig.json"}),"-Datei, um die TypeScript-Compiler-Optionen zu konfigurieren:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"quellcode-struktur",children:["Quellcode-Struktur",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#quellcode-struktur",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die Hauptanwendungskomponente ",(0,r.jsx)(n.code,{children:"src/app.ts"}),", um die Seitenstruktur und Interaktionslogik zu implementieren:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file Beispielkomponente\n * @description Zeigt eine Seiten\xfcberschrift mit automatisch aktualisierter Uhrzeit, um die grundlegenden Funktionen des Gez-Frameworks zu demonstrieren\n */\n\nexport default class App {\n    /**\n     * Aktuelle Zeit im ISO-Format\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * Erstellt eine Anwendungsinstanz\n     * @param {SsrContext} [ssrContext] - Serverseitiger Kontext, enth\xe4lt eine Sammlung von Import-Metadaten\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // Keine zus\xe4tzliche Initialisierung im Konstruktor erforderlich\n    }\n\n    /**\n     * Rendert den Seiteninhalt\n     * @returns {string} Gibt die HTML-Struktur der Seite zur\xfcck\n     */\n    public render(): string {\n        // Sicherstellen, dass Import-Metadaten im Serverkontext korrekt gesammelt werden\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">Gez Schnellstart</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * Client-Initialisierung\n     * @throws {Error} Wirft einen Fehler, wenn das Zeitanzeigeelement nicht gefunden wird\n     */\n    public onClient(): void {\n        // Zeitanzeigeelement abrufen\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('Zeitanzeigeelement nicht gefunden');\n        }\n\n        // Timer einstellen, um die Zeit jede Sekunde zu aktualisieren\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * Server-Initialisierung\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * Serverseitiger Kontext\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * Sammlung von Import-Metadaten\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die Datei ",(0,r.jsx)(n.code,{children:"src/create-app.ts"}),", die f\xfcr die Erstellung der Anwendungsinstanz verantwortlich ist:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Anwendungsinstanz-Erstellung\n * @description Verantwortlich f\xfcr die Erstellung und Konfiguration der Anwendungsinstanz\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die Client-Einstiegspunktdatei ",(0,r.jsx)(n.code,{children:"src/entry.client.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file Client-Einstiegspunktdatei\n * @description Verantwortlich f\xfcr die Client-Interaktionslogik und dynamische Aktualisierung\n */\n\nimport { createApp } from './create-app';\n\n// Anwendungsinstanz erstellen und initialisieren\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die Datei ",(0,r.jsx)(n.code,{children:"entry.node.ts"}),", um die Entwicklungsumgebung und den Serverstart zu konfigurieren:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js-Server-Einstiegspunktdatei\n * @description Verantwortlich f\xfcr die Entwicklungsumgebungskonfiguration und den Serverstart, bietet eine SSR-Laufzeitumgebung\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * Konfiguriert den Anwendungsersteller f\xfcr die Entwicklungsumgebung\n     * @description Erstellt und konfiguriert eine Rspack-Anwendungsinstanz f\xfcr die Entwicklungsumgebung, unterst\xfctzt HMR und Live-Vorschau\n     * @param gez Gez-Framework-Instanz, bietet Kernfunktionen und Konfigurationsschnittstellen\n     * @returns Gibt die konfigurierte Rspack-Anwendungsinstanz zur\xfcck, unterst\xfctzt HMR und Live-Vorschau\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // Hier k\xf6nnen Sie die Rspack-Kompilierungskonfiguration anpassen\n                }\n            })\n        );\n    },\n\n    /**\n     * Konfiguriert und startet den HTTP-Server\n     * @description Erstellt eine HTTP-Serverinstanz, integriert Gez-Middleware und verarbeitet SSR-Anfragen\n     * @param gez Gez-Framework-Instanz, bietet Middleware und Rendering-Funktionen\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Gez-Middleware zur Anfrageverarbeitung verwenden\n            gez.middleware(req, res, async () => {\n                // Serverseitiges Rendering durchf\xfchren\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('Server gestartet: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Diese Datei ist der Einstiegspunkt f\xfcr die Entwicklungsumgebungskonfiguration und den Serverstart und enth\xe4lt zwei Kernfunktionen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"devApp"}),"-Funktion: Verantwortlich f\xfcr die Erstellung und Konfiguration der Rspack-Anwendungsinstanz f\xfcr die Entwicklungsumgebung, unterst\xfctzt Hot Module Replacement (HMR) und Live-Vorschau."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server"}),"-Funktion: Verantwortlich f\xfcr die Erstellung und Konfiguration des HTTP-Servers, integriert Gez-Middleware zur Verarbeitung von SSR-Anfragen."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Erstellen Sie die Server-Rendering-Einstiegspunktdatei ",(0,r.jsx)(n.code,{children:"src/entry.server.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file Server-Rendering-Einstiegspunktdatei\n * @description Verantwortlich f\xfcr den Server-Rendering-Prozess, die HTML-Generierung und die Ressourceneinbindung\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// Kapselt die Logik zur Generierung des Seiteninhalts\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // Serverseitigen Rendering-Kontext in die Anwendungsinstanz einf\xfcgen\n    app.ssrContext = ssrContext;\n    // Serverseitige Initialisierung durchf\xfchren\n    app.onServer();\n\n    // Seiteninhalt generieren\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // Anwendungsinstanz erstellen, gibt ein Objekt mit der app-Instanz zur\xfcck\n    const { app } = createApp();\n    // renderToString verwenden, um den Seiteninhalt zu generieren\n    const html = renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // Abh\xe4ngigkeitssammlung abschlie\xdfen, um sicherzustellen, dass alle notwendigen Ressourcen geladen werden\n    await rc.commit();\n\n    // Vollst\xe4ndige HTML-Struktur generieren\n    rc.html = `<!DOCTYPE html>\n<html lang=\"de\">\n<head>\n    ${rc.preload()}\n    <title>Gez Schnellstart</title>\n    ${rc.css()}\n</head>\n<body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"projekt-ausf\\xfchren",children:["Projekt ausf\xfchren",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projekt-ausf\\xfchren",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Nachdem Sie die oben genannten Dateien konfiguriert haben, k\xf6nnen Sie das Projekt mit den folgenden Befehlen ausf\xfchren:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Entwicklungsmodus:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Projekt erstellen:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Produktionsumgebung ausf\xfchren:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Jetzt haben Sie erfolgreich eine HTML SSR-Anwendung mit Gez erstellt! Besuchen Sie ",(0,r.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"}),", um das Ergebnis zu sehen."]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}let d=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["de%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"Projektstruktur",id:"projektstruktur",depth:2},{text:"Projektkonfiguration",id:"projektkonfiguration",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"Quellcode-Struktur",id:"quellcode-struktur",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"Projekt ausf\xfchren",id:"projekt-ausf\xfchren",depth:2}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"Gez Framework HTML SSR Anwendungsbeispiel",description:"Erstellen Sie eine HTML SSR-Anwendung mit Gez von Grund auf. Dieses Beispiel zeigt die grundlegende Verwendung des Frameworks, einschlie\xdflich Projektinitialisierung, HTML-Konfiguration und Einstiegspunktdateien.",head:[["meta",{property:"keywords",content:"Gez, HTML, SSR-Anwendung, TypeScript-Konfiguration, Projektinitialisierung, Serverseitiges Rendering, Client-Interaktion"}]]}}}}]);