"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7190"],{3395:function(e,n,i){i.r(n),i.d(n,{default:()=>l});var r=i(1549),s=i(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",ol:"ol",code:"code",pre:"pre",div:"div"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"rspack",children:["Rspack",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rspack",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Gez basiert auf dem ",(0,r.jsx)(n.a,{href:"https://rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"}),"-Build-System und nutzt dessen Hochleistungs-Build-F\xe4higkeiten voll aus. Dieses Dokument beschreibt die Rolle und die Kernfunktionen von Rspack im Gez-Framework."]}),"\n",(0,r.jsxs)(n.h2,{id:"funktionen",children:["Funktionen",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#funktionen",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Rspack ist das zentrale Build-System des Gez-Frameworks und bietet die folgenden Schl\xfcsselfunktionen:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hochleistungs-Build"}),": Eine in Rust implementierte Build-Engine, die eine extrem schnelle Kompilierungsleistung bietet und die Build-Geschwindigkeit gro\xdfer Projekte erheblich verbessert."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimierte Entwicklungserfahrung"}),": Unterst\xfctzung f\xfcr moderne Entwicklungsfunktionen wie Hot Module Replacement (HMR) und inkrementelle Kompilierung, die eine fl\xfcssige Entwicklungserfahrung bieten."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-Umgebungs-Build"}),": Einheitliche Build-Konfigurationen f\xfcr Client-, Server- und Node.js-Umgebungen, die den Entwicklungsprozess f\xfcr mehrere Plattformen vereinfachen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ressourcenoptimierung"}),": Integrierte F\xe4higkeiten zur Ressourcenverarbeitung und -optimierung, einschlie\xdflich Code-Splitting, Tree Shaking und Ressourcenkompression."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"anwendungs-build",children:["Anwendungs-Build",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#anwendungs-build",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Das Rspack-Build-System von Gez ist modular aufgebaut und umfasst die folgenden Kernmodule:"}),"\n",(0,r.jsxs)(n.h3,{id:"gezrspack",children:["@gez/rspack",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Das grundlegende Build-Modul, das die folgenden Kernf\xe4higkeiten bietet:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Einheitliche Build-Konfiguration"}),": Standardisierte Verwaltung von Build-Konfigurationen mit Unterst\xfctzung f\xfcr Multi-Umgebungs-Konfigurationen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ressourcenverarbeitung"}),": Integrierte F\xe4higkeiten zur Verarbeitung von TypeScript, CSS, Bildern und anderen Ressourcen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build-Optimierung"}),": Funktionen wie Code-Splitting und Tree Shaking zur Leistungsoptimierung."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entwicklungsserver"}),": Integration eines Hochleistungs-Entwicklungsservers mit HMR-Unterst\xfctzung."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"gezrspack-vue",children:["@gez/rspack-vue",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack-vue",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Das spezialisierte Build-Modul f\xfcr das Vue-Framework, das Folgendes bietet:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vue-Komponenten-Kompilierung"}),": Effiziente Kompilierung von Vue 2/3-Komponenten."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSR-Optimierung"}),": Spezifische Optimierungen f\xfcr Server-Side-Rendering-Szenarien."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Entwicklungsverbesserungen"}),": Spezielle Funktionserweiterungen f\xfcr die Vue-Entwicklungsumgebung."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"build-prozess",children:["Build-Prozess",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#build-prozess",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Der Build-Prozess von Gez gliedert sich in die folgenden Phasen:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Konfigurationsinitialisierung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Laden der Projektkonfiguration"}),"\n",(0,r.jsx)(n.li,{children:"Zusammenf\xfchren von Standard- und Benutzerkonfigurationen"}),"\n",(0,r.jsx)(n.li,{children:"Anpassung der Konfiguration basierend auf Umgebungsvariablen"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ressourcenkompilierung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Analyse der Quellcode-Abh\xe4ngigkeiten"}),"\n",(0,r.jsx)(n.li,{children:"Transformation verschiedener Ressourcen (TypeScript, CSS usw.)"}),"\n",(0,r.jsx)(n.li,{children:"Verarbeitung von Modulimporten und -exporten"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Optimierungsverarbeitung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Durchf\xfchrung von Code-Splitting"}),"\n",(0,r.jsx)(n.li,{children:"Anwendung von Tree Shaking"}),"\n",(0,r.jsx)(n.li,{children:"Kompression von Code und Ressourcen"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ausgabegenerierung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Erzeugung der Zieldateien"}),"\n",(0,r.jsx)(n.li,{children:"Ausgabe von Ressourcen-Mappings"}),"\n",(0,r.jsx)(n.li,{children:"Generierung von Build-Berichten"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"best-practices",children:["Best Practices",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#best-practices",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"optimierung-der-entwicklungsumgebung",children:["Optimierung der Entwicklungsumgebung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#optimierung-der-entwicklungsumgebung",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inkrementelle Kompilierungskonfiguration"}),": Angemessene Konfiguration der ",(0,r.jsx)(n.code,{children:"cache"}),"-Option, um die Build-Geschwindigkeit durch Caching zu erh\xf6hen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HMR-Optimierung"}),": Gezielte Konfiguration des HMR-Bereichs, um unn\xf6tige Modulaktualisierungen zu vermeiden."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ressourcenverarbeitungsoptimierung"}),": Verwendung geeigneter Loader-Konfigurationen, um wiederholte Verarbeitung zu vermeiden."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"optimierung-der-produktionsumgebung",children:["Optimierung der Produktionsumgebung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#optimierung-der-produktionsumgebung",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code-Splitting-Strategie"}),": Angemessene Konfiguration von ",(0,r.jsx)(n.code,{children:"splitChunks"}),", um das Laden von Ressourcen zu optimieren."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ressourcenkompression"}),": Aktivierung geeigneter Kompressionskonfigurationen, um ein Gleichgewicht zwischen Build-Zeit und Artefaktgr\xf6\xdfe zu erreichen."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cache-Optimierung"}),": Nutzung von Content-Hashing und Langzeit-Caching-Strategien, um die Ladeleistung zu verbessern."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"konfigurationsbeispiel",children:["Konfigurationsbeispiel",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#konfigurationsbeispiel",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                // Benutzerdefinierte Build-Konfiguration\n                config({ config }) {\n                    // Hier k\xf6nnen benutzerdefinierte Rspack-Konfigurationen hinzugef\xfcgt werden\n                }\n            })\n        );\n    },\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["Weitere detaillierte API-Beschreibungen und Konfigurationsoptionen finden Sie in der ",(0,r.jsx)(n.a,{href:"/api/app/rspack.html",children:"Rspack API-Dokumentation"}),".\n"]})})]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["de%2Fguide%2Fessentials%2Frspack.md"]={toc:[{text:"Funktionen",id:"funktionen",depth:2},{text:"Anwendungs-Build",id:"anwendungs-build",depth:2},{text:"@gez/rspack",id:"gezrspack",depth:3},{text:"@gez/rspack-vue",id:"gezrspack-vue",depth:3},{text:"Build-Prozess",id:"build-prozess",depth:2},{text:"Best Practices",id:"best-practices",depth:2},{text:"Optimierung der Entwicklungsumgebung",id:"optimierung-der-entwicklungsumgebung",depth:3},{text:"Optimierung der Produktionsumgebung",id:"optimierung-der-produktionsumgebung",depth:3},{text:"Konfigurationsbeispiel",id:"konfigurationsbeispiel",depth:2}],title:"Rspack",headingTitle:"Rspack",frontmatter:{titleSuffix:"Gez Framework Hochleistungs-Build-Engine",description:"Eine detaillierte Analyse des Rspack-Build-Systems im Gez-Framework, einschlie\xdflich Hochleistungs-Kompilierung, Multi-Umgebungs-Builds, Ressourcenoptimierung und anderen Kernfunktionen, die Entwicklern helfen, effiziente und zuverl\xe4ssige moderne Webanwendungen zu erstellen.",head:[["meta",{property:"keywords",content:"Gez, Rspack, Build-System, Hochleistungs-Kompilierung, Hot Module Replacement, Multi-Umgebungs-Build, Tree Shaking, Code-Splitting, SSR, Ressourcenoptimierung, Entwicklungseffizienz, Build-Tool"}]]}}}}]);