"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8943"],{8768:function(i,e,n){n.r(e),n.d(e,{default:()=>t});var r=n(1549),o=n(6603);function a(i){let e=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",code:"code",h2:"h2",h3:"h3",pre:"pre",div:"div",ol:"ol"},(0,o.ah)(),i.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"alias-di-percorso",children:["Alias di percorso",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#alias-di-percorso",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"L'alias di percorso (Path Alias) \xe8 un meccanismo di mappatura dei percorsi di importazione dei moduli che consente agli sviluppatori di utilizzare identificatori brevi e semantici al posto dei percorsi completi dei moduli. In Gez, il meccanismo degli alias di percorso offre i seguenti vantaggi:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Semplificazione dei percorsi di importazione"}),": Utilizza alias semantici al posto di percorsi relativi lunghi, migliorando la leggibilit\xe0 del codice"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Evitare annidamenti profondi"}),": Elimina le difficolt\xe0 di manutenzione causate da riferimenti a directory multilivello (ad esempio ",(0,r.jsx)(e.code,{children:"../../../../"}),")"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Sicurezza dei tipi"}),": Integrazione completa con il sistema di tipi di TypeScript, fornendo completamento del codice e controllo dei tipi"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Ottimizzazione della risoluzione dei moduli"}),": Migliora le prestazioni di risoluzione dei moduli attraverso mappature predefinite dei percorsi"]}),"\n"]}),"\n",(0,r.jsxs)(e.h2,{id:"meccanismo-degli-alias-predefiniti",children:["Meccanismo degli alias predefiniti",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#meccanismo-degli-alias-predefiniti",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Gez utilizza un meccanismo automatico di alias basato sul nome del servizio (Service Name), un design che privilegia le convenzioni rispetto alla configurazione, con le seguenti caratteristiche:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Configurazione automatica"}),": Genera automaticamente alias basati sul campo ",(0,r.jsx)(e.code,{children:"name"})," in ",(0,r.jsx)(e.code,{children:"package.json"}),", senza necessit\xe0 di configurazione manuale"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Uniformit\xe0 delle convenzioni"}),": Garantisce che tutti i moduli del servizio seguano una nomenclatura e un riferimento coerenti"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Supporto dei tipi"}),": In combinazione con il comando ",(0,r.jsx)(e.code,{children:"npm run build:dts"}),", genera automaticamente file di dichiarazione dei tipi, consentendo la deduzione dei tipi tra servizi"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Prevedibilit\xe0"}),": Consente di dedurre il percorso di riferimento del modulo dal nome del servizio, riducendo i costi di manutenzione"]}),"\n"]}),"\n",(0,r.jsxs)(e.h2,{id:"configurazione",children:["Configurazione",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#configurazione",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"configurazione-di-packagejson",children:["Configurazione di package.json",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#configurazione-di-packagejson",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:["In ",(0,r.jsx)(e.code,{children:"package.json"}),", il nome del servizio viene definito tramite il campo ",(0,r.jsx)(e.code,{children:"name"}),", che funger\xe0 da prefisso predefinito per l'alias del servizio:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name"\n}\n'})}),"\n",(0,r.jsxs)(e.h3,{id:"configurazione-di-tsconfigjson",children:["Configurazione di tsconfig.json",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#configurazione-di-tsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:["Affinch\xe9 TypeScript possa risolvere correttamente i percorsi degli alias, \xe8 necessario configurare la mappatura ",(0,r.jsx)(e.code,{children:"paths"})," in ",(0,r.jsx)(e.code,{children:"tsconfig.json"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "paths": {\n            "your-app-name/src/*": [\n                "./src/*"\n            ],\n            "your-app-name/*": [\n                "./*"\n            ]\n        }\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.h2,{id:"esempi-di-utilizzo",children:["Esempi di utilizzo",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#esempi-di-utilizzo",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"importazione-di-moduli-interni-al-servizio",children:["Importazione di moduli interni al servizio",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#importazione-di-moduli-interni-al-servizio",children:"#"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Utilizzo di un alias per l'importazione\nimport { MyComponent } from 'your-app-name/src/components';\n\n// Importazione equivalente con percorso relativo\nimport { MyComponent } from '../components';\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"importazione-di-moduli-da-altri-servizi",children:["Importazione di moduli da altri servizi",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#importazione-di-moduli-da-altri-servizi",children:"#"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Importazione di un componente da un altro servizio\nimport { SharedComponent } from 'other-service/src/components';\n\n// Importazione di funzioni di utilit\xe0 da un altro servizio\nimport { utils } from 'other-service/src/utils';\n"})}),"\n",(0,r.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,r.jsx)(e.div,{className:"rspress-directive-title",children:"Best practice"}),(0,r.jsxs)(e.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Preferire l'uso di percorsi con alias rispetto ai percorsi relativi"}),"\n",(0,r.jsx)(e.li,{children:"Mantenere i percorsi con alias semantici e coerenti"}),"\n",(0,r.jsx)(e.li,{children:"Evitare l'uso di troppi livelli di directory nei percorsi con alias"}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Importazione di componenti\nimport { Button } from 'your-app-name/src/components';\nimport { Layout } from 'your-app-name/src/components/layout';\n\n// Importazione di funzioni di utilit\xe0\nimport { formatDate } from 'your-app-name/src/utils';\nimport { request } from 'your-app-name/src/utils/request';\n\n// Importazione di definizioni di tipi\nimport type { UserInfo } from 'your-app-name/src/types';\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"importazione-tra-servizi",children:["Importazione tra servizi",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#importazione-tra-servizi",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Dopo aver configurato il collegamento dei moduli (Module Link), \xe8 possibile importare moduli da altri servizi nello stesso modo:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"// Importazione di un componente da un servizio remoto\nimport { Header } from 'remote-service/src/components';\n\n// Importazione di funzioni di utilit\xe0 da un servizio remoto\nimport { logger } from 'remote-service/src/utils';\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"alias-personalizzati",children:["Alias personalizzati",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#alias-personalizzati",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Per pacchetti di terze parti o scenari speciali, \xe8 possibile definire alias personalizzati tramite il file di configurazione di Gez:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"export default {\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createApp(gez, (buildContext) => {\n                buildContext.config.resolve = {\n                    ...buildContext.config.resolve,\n                    alias: {\n                        ...buildContext.config.resolve?.alias,\n                        // Configurazione di una versione specifica di Vue per la build\n                        'vue$': 'vue/dist/vue.esm.js',\n                        // Configurazione di alias brevi per directory comuni\n                        '@': './src',\n                        '@components': './src/components'\n                    }\n                }\n            })\n        );\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsxs)(e.div,{className:"rspress-directive warning",children:[(0,r.jsx)(e.div,{className:"rspress-directive-title",children:"Avvertenze"}),(0,r.jsxs)(e.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Per i moduli di business, si consiglia di utilizzare sempre il meccanismo degli alias predefiniti per mantenere la coerenza del progetto"}),"\n",(0,r.jsx)(e.li,{children:"Gli alias personalizzati sono principalmente utilizzati per gestire esigenze speciali di pacchetti di terze parti o per ottimizzare l'esperienza di sviluppo"}),"\n",(0,r.jsx)(e.li,{children:"L'uso eccessivo di alias personalizzati potrebbe compromettere la manutenibilit\xe0 del codice e l'ottimizzazione della build"}),"\n"]}),"\n"]})]})]})}function s(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,o.ah)(),i.components);return e?(0,r.jsx)(e,{...i,children:(0,r.jsx)(a,{...i})}):a(i)}let t=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["it%2Fguide%2Fessentials%2Falias.md"]={toc:[{text:"Meccanismo degli alias predefiniti",id:"meccanismo-degli-alias-predefiniti",depth:2},{text:"Configurazione",id:"configurazione",depth:2},{text:"Configurazione di package.json",id:"configurazione-di-packagejson",depth:3},{text:"Configurazione di tsconfig.json",id:"configurazione-di-tsconfigjson",depth:3},{text:"Esempi di utilizzo",id:"esempi-di-utilizzo",depth:2},{text:"Importazione di moduli interni al servizio",id:"importazione-di-moduli-interni-al-servizio",depth:3},{text:"Importazione di moduli da altri servizi",id:"importazione-di-moduli-da-altri-servizi",depth:3},{text:"Importazione tra servizi",id:"importazione-tra-servizi",depth:3},{text:"Alias personalizzati",id:"alias-personalizzati",depth:3}],title:"Alias di percorso",headingTitle:"Alias di percorso",frontmatter:{titleSuffix:"Guida alla mappatura dei percorsi di importazione dei moduli del framework Gez",description:"Descrizione dettagliata del meccanismo degli alias di percorso nel framework Gez, inclusi la semplificazione dei percorsi di importazione, l'evitare annidamenti profondi, la sicurezza dei tipi e l'ottimizzazione della risoluzione dei moduli, per aiutare gli sviluppatori a migliorare la manutenibilit\xe0 del codice.",head:[["meta",{property:"keywords",content:"Gez, Alias di percorso, Path Alias, TypeScript, Importazione di moduli, Mappatura dei percorsi, Manutenibilit\xe0 del codice"}]]}}}}]);