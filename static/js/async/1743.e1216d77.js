"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1743"],{4174:function(e,i,n){n.r(i),n.d(i,{default:()=>o});var r=n(1549),t=n(6603);function a(e){let i=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",pre:"pre"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.h1,{id:"rendering-lato-client",children:["Rendering lato client",(0,r.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#rendering-lato-client",children:"#"})]}),"\n",(0,r.jsxs)(i.p,{children:["Il rendering lato client (Client-Side Rendering, CSR) \xe8 una tecnica di rendering delle pagine eseguita direttamente nel browser. In Gez, quando non \xe8 possibile distribuire un'istanza del server Node.js, \xe8 possibile generare un file ",(0,r.jsx)(i.code,{children:"index.html"})," statico durante la fase di costruzione, implementando cos\xec un rendering puramente lato client."]}),"\n",(0,r.jsxs)(i.h2,{id:"casi-duso",children:["Casi d'uso",(0,r.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#casi-duso",children:"#"})]}),"\n",(0,r.jsx)(i.p,{children:"Si consiglia di utilizzare il rendering lato client nei seguenti scenari:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Ambienti di hosting statico"}),": come GitHub Pages, CDN e altri servizi di hosting che non supportano il rendering lato server"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Applicazioni semplici"}),": piccole applicazioni che non richiedono tempi di caricamento rapidi per la prima schermata o un'ottimizzazione SEO avanzata"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Ambienti di sviluppo"}),": per visualizzare e debuggare rapidamente l'applicazione durante la fase di sviluppo"]}),"\n"]}),"\n",(0,r.jsxs)(i.h2,{id:"configurazione",children:["Configurazione",(0,r.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#configurazione",children:"#"})]}),"\n",(0,r.jsxs)(i.h3,{id:"configurazione-del-template-html",children:["Configurazione del template HTML",(0,r.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#configurazione-del-template-html",children:"#"})]}),"\n",(0,r.jsx)(i.p,{children:"In modalit\xe0 di rendering lato client, \xe8 necessario configurare un template HTML generico. Questo template funger\xe0 da contenitore per l'applicazione, includendo i riferimenti alle risorse necessarie e il punto di montaggio."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"import type { RenderContext } from '@gez/core';\n\nexport default async (rc: RenderContext) => {\n    // Invia la raccolta delle dipendenze\n    await rc.commit();\n    \n    // Configura il template HTML\n    rc.html = `\n<!DOCTYPE html>\n<html>\n<head>\n    ${rc.preload()}           // Precarica le risorse\n    <title>Gez</title>\n    ${rc.css()}               // Inietta gli stili\n</head>\n<body>\n    <div id=\"app\"></div>\n    ${rc.importmap()}         // Mappa delle importazioni\n    ${rc.moduleEntry()}       // Modulo di ingresso\n    ${rc.modulePreload()}     // Precarga dei moduli\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,r.jsxs)(i.h3,{id:"generazione-di-html-statico",children:["Generazione di HTML statico",(0,r.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#generazione-di-html-statico",children:"#"})]}),"\n",(0,r.jsxs)(i.p,{children:["Per utilizzare il rendering lato client in un ambiente di produzione, \xe8 necessario generare un file HTML statico durante la fase di costruzione. Gez fornisce una funzione hook ",(0,r.jsx)(i.code,{children:"postBuild"})," per implementare questa funzionalit\xe0:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async postBuild(gez) {\n        // Genera il file HTML statico\n        const rc = await gez.render();\n        // Scrive il file HTML\n        gez.writeSync(\n            gez.resolvePath('dist/client', 'index.html'),\n            rc.html\n        );\n    }\n} satisfies GezOptions;\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,t.ah)(),e.components);return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}let o=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["it%2Fguide%2Fessentials%2Fcsr.md"]={toc:[{text:"Casi d'uso",id:"casi-duso",depth:2},{text:"Configurazione",id:"configurazione",depth:2},{text:"Configurazione del template HTML",id:"configurazione-del-template-html",depth:3},{text:"Generazione di HTML statico",id:"generazione-di-html-statico",depth:3}],title:"Rendering lato client",headingTitle:"Rendering lato client",frontmatter:{titleSuffix:"Guida all'implementazione del rendering lato client con il framework Gez",description:"Una guida dettagliata sul meccanismo di rendering lato client del framework Gez, inclusa la costruzione statica, le strategie di distribuzione e le migliori pratiche, per aiutare gli sviluppatori a implementare un rendering front-end efficiente in ambienti senza server.",head:[["meta",{property:"keywords",content:"Gez, Rendering lato client, CSR, Costruzione statica, Rendering front-end, Distribuzione senza server, Ottimizzazione delle prestazioni"}]]}}}}]);