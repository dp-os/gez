"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8595"],{6569:function(n,e,s){s.r(e),s.d(e,{default:()=>l});var i=s(1549),r=s(6603);function c(n){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre",h3:"h3",h4:"h4"},(0,r.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"packconfig",children:["PackConfig",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"PackConfig"})," 是軟體包打包配置介面，用於將服務的建置產物打包成標準的 npm .tgz 格式軟體包。"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"標準化"}),"：使用 npm 標準的 .tgz 打包格式"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"完整性"}),"：包含模組的原始碼、類型宣告和設定檔等所有必要檔案"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"相容性"}),"：與 npm 生態系統完全相容，支援標準的套件管理工作流程"]}),"\n"]}),"\n",(0,i.jsxs)(e.h2,{id:"類型定義",children:["類型定義",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#類型定義",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"interface PackConfig {\n    enable?: boolean;\n    outputs?: string | string[] | boolean;\n    packageJson?: (gez: Gez, pkg: Record<string, any>) => Promise<Record<string, any>>;\n    onBefore?: (gez: Gez, pkg: Record<string, any>) => Promise<void>;\n    onAfter?: (gez: Gez, pkg: Record<string, any>, file: Buffer) => Promise<void>;\n}\n"})}),"\n",(0,i.jsxs)(e.h3,{id:"packconfig-1",children:["PackConfig",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig-1",children:"#"})]}),"\n",(0,i.jsxs)(e.h4,{id:"enable",children:["enable",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#enable",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"是否啟用打包功能。啟用後會將建置產物打包成標準的 npm .tgz 格式軟體包。"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["類型：",(0,i.jsx)(e.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(e.li,{children:["預設值：",(0,i.jsx)(e.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsxs)(e.h4,{id:"outputs",children:["outputs",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#outputs",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"指定輸出的軟體包檔案路徑。支援以下配置方式："}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"string"}),": 單一輸出路徑，如 'dist/versions/my-app.tgz'"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"string[]"}),": 多個輸出路徑，用於同時產生多個版本"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"boolean"}),": true 時使用預設路徑 'dist/client/versions/latest.tgz'"]}),"\n"]}),"\n",(0,i.jsxs)(e.h4,{id:"packagejson",children:["packageJson",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"自訂 package.json 內容的回呼函式。在打包前呼叫，用於自訂 package.json 的內容。"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["參數：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," - Gez 實例"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: any"})," - 原始的 package.json 內容"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["回傳值：",(0,i.jsx)(e.code,{children:"Promise<any>"})," - 修改後的 package.json 內容"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"常見用途："}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"修改套件名稱和版本號"}),"\n",(0,i.jsx)(e.li,{children:"新增或更新相依項目"}),"\n",(0,i.jsx)(e.li,{children:"新增自訂欄位"}),"\n",(0,i.jsx)(e.li,{children:"配置發佈相關資訊"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"範例："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"packageJson: async (gez, pkg) => {\n  // 設定套件資訊\n  pkg.name = 'my-app';\n  pkg.version = '1.0.0';\n  pkg.description = '我的應用';\n\n  // 新增相依項目\n  pkg.dependencies = {\n    'vue': '^3.0.0',\n    'express': '^4.17.1'\n  };\n\n  // 新增發佈配置\n  pkg.publishConfig = {\n    registry: 'https://registry.example.com'\n  };\n\n  return pkg;\n}\n"})}),"\n",(0,i.jsxs)(e.h4,{id:"onbefore",children:["onBefore",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#onbefore",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"打包前的準備工作回呼函式。"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["參數：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," - Gez 實例"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: Record<string, any>"})," - package.json 內容"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["回傳值：",(0,i.jsx)(e.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"常見用途："}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"新增額外的檔案（README、LICENSE 等）"}),"\n",(0,i.jsx)(e.li,{children:"執行測試或建置驗證"}),"\n",(0,i.jsx)(e.li,{children:"產生文件或元資料"}),"\n",(0,i.jsx)(e.li,{children:"清理暫存檔案"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"範例："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"onBefore: async (gez, pkg) => {\n  // 新增文件\n  await fs.writeFile('dist/README.md', '# My App');\n  await fs.writeFile('dist/LICENSE', 'MIT License');\n\n  // 執行測試\n  await runTests();\n\n  // 產生文件\n  await generateDocs();\n\n  // 清理暫存檔案\n  await cleanupTempFiles();\n}\n"})}),"\n",(0,i.jsxs)(e.h4,{id:"onafter",children:["onAfter",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#onafter",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"打包完成後的處理回呼函式。在 .tgz 檔案產生後呼叫，用於處理打包產物。"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["參數：","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," - Gez 實例"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: Record<string, any>"})," - package.json 內容"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"file: Buffer"})," - 打包後的檔案內容"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["回傳值：",(0,i.jsx)(e.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"常見用途："}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"發佈到 npm 倉庫（公開或私有）"}),"\n",(0,i.jsx)(e.li,{children:"上傳到靜態資源伺服器"}),"\n",(0,i.jsx)(e.li,{children:"執行版本管理"}),"\n",(0,i.jsx)(e.li,{children:"觸發 CI/CD 流程"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"範例："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"onAfter: async (gez, pkg, file) => {\n  // 發佈到 npm 私有倉庫\n  await publishToRegistry(file, {\n    registry: 'https://registry.example.com'\n  });\n\n  // 上傳到靜態資源伺服器\n  await uploadToServer(file, 'https://assets.example.com/packages');\n\n  // 建立版本標籤\n  await createGitTag(pkg.version);\n\n  // 觸發部署流程\n  await triggerDeploy(pkg.version);\n}\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"使用範例",children:["使用範例",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#使用範例",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n  modules: {\n    // 配置需要匯出的模組\n    exports: [\n      'root:src/components/button.vue',\n      'root:src/utils/format.ts',\n      'npm:vue',\n      'npm:vue-router'\n    ]\n  },\n  // 打包配置\n  pack: {\n    // 啟用打包功能\n    enable: true,\n\n    // 同時輸出多個版本\n    outputs: [\n      'dist/versions/latest.tgz',\n      'dist/versions/1.0.0.tgz'\n    ],\n\n    // 自訂 package.json\n    packageJson: async (gez, pkg) => {\n      pkg.version = '1.0.0';\n      return pkg;\n    },\n\n    // 打包前準備\n    onBefore: async (gez, pkg) => {\n      // 新增必要檔案\n      await fs.writeFile('dist/README.md', '# Your App\\n\\n模組匯出說明...');\n      // 執行類型檢查\n      await runTypeCheck();\n    },\n\n    // 打包後處理\n    onAfter: async (gez, pkg, file) => {\n      // 發佈到私有 npm 鏡像源\n      await publishToRegistry(file, {\n        registry: 'https://npm.your-registry.com/'\n      });\n      // 或部署到靜態伺服器\n      await uploadToServer(file, 'https://static.example.com/packages');\n    }\n  }\n} satisfies GezOptions;\n"})})]})}function a(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}let l=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh-TW%2Fapi%2Fcore%2Fpack-config.md"]={toc:[{text:"類型定義",id:"類型定義",depth:2},{text:"PackConfig",id:"packconfig-1",depth:3},{text:"enable",id:"enable",depth:4},{text:"outputs",id:"outputs",depth:4},{text:"packageJson",id:"packagejson",depth:4},{text:"onBefore",id:"onbefore",depth:4},{text:"onAfter",id:"onafter",depth:4},{text:"使用範例",id:"使用範例",depth:2}],title:"PackConfig",headingTitle:"PackConfig",frontmatter:{titleSuffix:"Gez 框架打包配置 API 參考",description:"詳細介紹 Gez 框架的 PackConfig 配置介面，包括軟體包打包規則、輸出配置和生命週期鉤子，幫助開發者實現標準化的建置流程。",head:[["meta",{property:"keywords",content:"Gez, PackConfig, 軟體包打包, 建置配置, 生命週期鉤子, 打包配置, Web 應用框架"}]]}}}}]);