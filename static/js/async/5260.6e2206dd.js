"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5260"],{7788:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var r=s(1549),i=s(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",div:"div",ul:"ul",li:"li",strong:"strong"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"표준-규범",children:["표준 규범",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#표준-규범",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez는 현대적인 SSR 프레임워크로, 표준화된 프로젝트 구조와 경로 해석 메커니즘을 채택하여 개발 및 프로덕션 환경에서의 일관성과 유지보수성을 보장합니다."}),"\n",(0,r.jsxs)(n.h2,{id:"프로젝트-구조-규범",children:["프로젝트 구조 규범",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#프로젝트-구조-규범",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"표준-디렉토리-구조",children:["표준 디렉토리 구조",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#표준-디렉토리-구조",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"root\n│─ dist                  # 컴파일 출력 디렉토리\n│  ├─ package.json       # 컴파일 출력 후의 패키지 설정\n│  ├─ server             # 서버 측 컴파일 출력\n│  │  └─ manifest.json   # 컴파일 매니페스트 출력, importmap 생성에 사용\n│  ├─ node               # Node 서버 프로그램 컴파일 출력\n│  ├─ client             # 클라이언트 측 컴파일 출력\n│  │  ├─ versions        # 버전 저장 디렉토리\n│  │  │  └─ latest.tgz   # dist 디렉토리를 아카이브하여 외부에 패키지 배포 제공\n│  │  └─ manifest.json   # 컴파일 매니페스트 출력, importmap 생성에 사용\n│  └─ src                # tsc로 생성된 파일 유형\n├─ src\n│  ├─ entry.server.ts    # 서버 애플리케이션 진입점\n│  ├─ entry.client.ts    # 클라이언트 애플리케이션 진입점\n│  └─ entry.node.ts      # Node 서버 애플리케이션 진입점\n├─ tsconfig.json         # TypeScript 설정\n└─ package.json          # 패키지 설정\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"확장 지식"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gez.name"}),"은 ",(0,r.jsx)(n.code,{children:"package.json"}),"의 ",(0,r.jsx)(n.code,{children:"name"})," 필드에서 유래"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dist/package.json"}),"은 루트 디렉토리의 ",(0,r.jsx)(n.code,{children:"package.json"}),"에서 유래"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"packs.enable"}),"을 ",(0,r.jsx)(n.code,{children:"true"}),"로 설정할 경우에만 ",(0,r.jsx)(n.code,{children:"dist"})," 디렉토리를 아카이브"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.h2,{id:"진입-파일-규범",children:["진입 파일 규범",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#진입-파일-규범",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"클라이언트 진입 파일은 다음을 담당합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"애플리케이션 초기화"}),": 클라이언트 애플리케이션의 기본 설정 구성"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"라우팅 관리"}),": 클라이언트 라우팅 및 네비게이션 처리"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"상태 관리"}),": 클라이언트 상태 저장 및 업데이트 구현"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"상호작용 처리"}),": 사용자 이벤트 및 인터페이스 상호작용 관리"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"서버 진입 파일은 다음을 담당합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"서버 측 렌더링"}),": SSR 렌더링 프로세스 실행"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTML 생성"}),": 초기 페이지 구조 구축"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"데이터 프리페치"}),": 서버 측 데이터 가져오기 처리"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"상태 주입"}),": 서버 상태를 클라이언트에 전달"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SEO 최적화"}),": 페이지의 검색 엔진 최적화 보장"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Node.js 서버 진입 파일은 다음을 담당합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"서버 설정"}),": HTTP 서버 매개변수 설정"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"라우팅 처리"}),": 서버 측 라우팅 규칙 관리"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"미들웨어 통합"}),": 서버 미들웨어 설정"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"환경 관리"}),": 환경 변수 및 설정 처리"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"요청 응답"}),": HTTP 요청 및 응답 처리"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"설정-파일-규범",children:["설정 파일 규범",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#설정-파일-규범",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name",\n    "type": "module",\n    "scripts": {\n        "dev": "gez dev",\n        "build": "npm run build:dts && npm run build:ssr",\n        "build:ssr": "gez build",\n        "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src",\n        "preview": "gez preview",\n        "start": "NODE_ENV=production node dist/index.js"\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "allowJs": false,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "importHelpers": false,\n        "declaration": true,\n        "sourceMap": true,\n        "strict": true,\n        "noImplicitAny": false,\n        "noImplicitReturns": false,\n        "noFallthroughCasesInSwitch": true,\n        "noUnusedLocals": false,\n        "noUnusedParameters": false,\n        "moduleResolution": "node",\n        "esModuleInterop": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "forceConsistentCasingInFileNames": true,\n        "noEmit": true\n    },\n    "include": [\n        "src",\n        "**.ts"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["ko%2Fguide%2Fessentials%2Fstd.md"]={toc:[{text:"프로젝트 구조 규범",id:"프로젝트-구조-규범",depth:2},{text:"표준 디렉토리 구조",id:"표준-디렉토리-구조",depth:3},{text:"진입 파일 규범",id:"진입-파일-규범",depth:2},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"설정 파일 규범",id:"설정-파일-규범",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3}],title:"표준 규범",headingTitle:"표준 규범",frontmatter:{titleSuffix:"Gez 프레임워크 프로젝트 구조 및 규범 가이드",description:"Gez 프레임워크의 표준 프로젝트 구조, 진입 파일 규범 및 설정 파일 규범을 상세히 설명하여 개발자가 표준화되고 유지보수 가능한 SSR 애플리케이션을 구축할 수 있도록 돕습니다.",head:[["meta",{property:"keywords",content:"Gez, 프로젝트 구조, 진입 파일, 설정 규범, SSR 프레임워크, TypeScript, 프로젝트 규범, 개발 표준"}]]}}}}]);