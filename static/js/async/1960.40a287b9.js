"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1960"],{6955:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var t=r(1549),s=r(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"vue3",children:["Vue3",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vue3",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"यह ट्यूटोरियल आपको Gez पर आधारित Vue3 SSR एप्लिकेशन को शुरू से बनाने में मदद करेगा। हम एक पूर्ण उदाहरण के माध्यम से Gez फ्रेमवर्क का उपयोग करके सर्वर-साइड रेंडरिंग एप्लिकेशन बनाने का तरीका दिखाएंगे।"}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-संरचना",children:["प्रोजेक्ट संरचना",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-संरचना",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"सबसे पहले, प्रोजेक्ट की बेसिक संरचना को समझते हैं:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # प्रोजेक्ट कॉन्फ़िगरेशन फ़ाइल, डिपेंडेंसी और स्क्रिप्ट कमांड को परिभाषित करती है\n├── tsconfig.json        # TypeScript कॉन्फ़िगरेशन फ़ाइल, कंपाइल विकल्प सेट करती है\n└── src                  # सोर्स कोड डायरेक्टरी\n    ├── app.vue          # मुख्य एप्लिकेशन कंपोनेंट, पेज संरचना और इंटरैक्शन लॉजिक को परिभाषित करता है\n    ├── create-app.ts    # Vue इंस्टेंस क्रिएशन फैक्टरी, एप्लिकेशन इनिशियलाइज़ेशन के लिए जिम्मेदार\n    ├── entry.client.ts  # क्लाइंट-साइड एंट्री फ़ाइल, ब्राउज़र-साइड रेंडरिंग को हैंडल करती है\n    ├── entry.node.ts    # Node.js सर्वर एंट्री फ़ाइल, डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार\n    └── entry.server.ts  # सर्वर-साइड एंट्री फ़ाइल, SSR रेंडरिंग लॉजिक को हैंडल करती है\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-कॉन्फ़िगरेशन",children:["प्रोजेक्ट कॉन्फ़िगरेशन",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-कॉन्फ़िगरेशन",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाएं, प्रोजेक्ट डिपेंडेंसी और स्क्रिप्ट को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-vue3",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "vue-tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack-vue": "*",\n    "@types/node": "22.8.6",\n    "@vue/server-renderer": "^3.5.13",\n    "typescript": "^5.7.3",\n    "vue": "^3.5.13",\n    "vue-tsc": "^2.1.6"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाने के बाद, प्रोजेक्ट डिपेंडेंसी को इंस्टॉल करने की आवश्यकता है। आप निम्नलिखित किसी भी कमांड का उपयोग करके इंस्टॉल कर सकते हैं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# या\nyarn install\n# या\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"यह सभी आवश्यक डिपेंडेंसी पैकेज को इंस्टॉल करेगा, जिसमें Vue3, TypeScript और SSR से संबंधित डिपेंडेंसी शामिल हैं।"}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tsconfig.json"})," फ़ाइल बनाएं, TypeScript कंपाइल विकल्प को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-vue3/src/*": ["./src/*"],\n            "ssr-demo-vue3/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"सोर्स-कोड-संरचना",children:["सोर्स कोड संरचना",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#सोर्स-कोड-संरचना",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"appvue",children:["app.vue",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appvue",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["मुख्य एप्लिकेशन कंपोनेंट ",(0,t.jsx)(n.code,{children:"src/app.vue"})," बनाएं, Vue3 के कंपोज़ेबल API का उपयोग करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",meta:'title="src/app.vue"',children:'<template>\n    <div>\n        <h1><a href="https://www.jsesm.com/guide/frameworks/vue3.html" target="_blank">Gez क्विक स्टार्ट</a></h1>\n        <time :datetime="time">{{ time }}</time>\n    </div>\n</template>\n\n<script setup lang="ts">\n/**\n * @file उदाहरण कंपोनेंट\n * @description Gez फ्रेमवर्क की बेसिक फंक्शनलिटी को डेमोस्ट्रेट करने के लिए ऑटो-अपडेटिंग टाइम के साथ पेज टाइटल दिखाता है\n */\n\nimport { onMounted, onUnmounted, ref } from \'vue\';\n\n// वर्तमान समय, हर सेकंड अपडेट होता है\nconst time = ref(new Date().toISOString());\nlet timer: NodeJS.Timeout;\n\nonMounted(() => {\n    timer = setInterval(() => {\n        time.value = new Date().toISOString();\n    }, 1000);\n});\n\nonUnmounted(() => {\n    clearInterval(timer);\n});\n<\/script>\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"src/create-app.ts"})," फ़ाइल बनाएं, Vue एप्लिकेशन इंस्टेंस बनाने के लिए जिम्मेदार:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Vue इंस्टेंस क्रिएशन\n * @description Vue एप्लिकेशन इंस्टेंस को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार\n */\n\nimport { createSSRApp } from 'vue';\nimport App from './app.vue';\n\nexport function createApp() {\n    const app = createSSRApp(App);\n    return {\n        app\n    };\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["क्लाइंट-साइड एंट्री फ़ाइल ",(0,t.jsx)(n.code,{children:"src/entry.client.ts"})," बनाएं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file क्लाइंट-साइड एंट्री फ़ाइल\n * @description क्लाइंट-साइड इंटरैक्शन लॉजिक और डायनामिक अपडेट को हैंडल करती है\n */\n\nimport { createApp } from './create-app';\n\n// Vue इंस्टेंस बनाएं\nconst { app } = createApp();\n\n// Vue इंस्टेंस को माउंट करें\napp.mount('#app');\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"entry.node.ts"})," फ़ाइल बनाएं, डेवलपमेंट एनवायरनमेंट और सर्वर स्टार्टअप को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js सर्वर एंट्री फ़ाइल\n * @description डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार, SSR रनटाइम एनवायरनमेंट प्रदान करता है\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * डेवलपमेंट एनवायरनमेंट के लिए एप्लिकेशन क्रिएटर को कॉन्फ़िगर करें\n     * @description Rspack एप्लिकेशन इंस्टेंस को बनाने और कॉन्फ़िगर करने के लिए, डेवलपमेंट एनवायरनमेंट के लिए बिल्ड और हॉट अपडेट को सपोर्ट करता है\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, कोर फंक्शनलिटी और कॉन्फ़िगरेशन इंटरफेस प्रदान करता है\n     * @returns कॉन्फ़िगर किया गया Rspack एप्लिकेशन इंस्टेंस, HMR और रियल-टाइम प्रीव्यू को सपोर्ट करता है\n     */\n    async devApp(gez) {\n        return import('@gez/rspack-vue').then((m) =>\n            m.createRspackVue3App(gez, {\n                config(context) {\n                    // यहां Rspack कंपाइल कॉन्फ़िगरेशन को कस्टमाइज़ करें\n                }\n            })\n        );\n    },\n\n    /**\n     * HTTP सर्वर को कॉन्फ़िगर और स्टार्ट करें\n     * @description HTTP सर्वर इंस्टेंस बनाएं, Gez मिडलवेयर को इंटीग्रेट करें, SSR रिक्वेस्ट को हैंडल करें\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, मिडलवेयर और रेंडरिंग फंक्शनलिटी प्रदान करता है\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Gez मिडलवेयर का उपयोग करके रिक्वेस्ट को हैंडल करें\n            gez.middleware(req, res, async () => {\n                // सर्वर-साइड रेंडरिंग को एक्ज़ीक्यूट करें\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('सर्वर स्टार्ट: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,t.jsx)(n.p,{children:"यह फ़ाइल डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए एंट्री फ़ाइल है, जिसमें दो मुख्य फंक्शनलिटी शामिल हैं:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"devApp"})," फ़ंक्शन: डेवलपमेंट एनवायरनमेंट के लिए Rspack एप्लिकेशन इंस्टेंस को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, जो हॉट अपडेट और रियल-टाइम प्रीव्यू को सपोर्ट करता है। यहां ",(0,t.jsx)(n.code,{children:"createRspackVue3App"})," का उपयोग करके Vue3 के लिए विशेष Rspack एप्लिकेशन इंस्टेंस बनाया जाता है।"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server"})," फ़ंक्शन: HTTP सर्वर को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, जो Gez मिडलवेयर को इंटीग्रेट करके SSR रिक्वेस्ट को हैंडल करता है।"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["सर्वर-साइड रेंडरिंग एंट्री फ़ाइल ",(0,t.jsx)(n.code,{children:"src/entry.server.ts"})," बनाएं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file सर्वर-साइड रेंडरिंग एंट्री फ़ाइल\n * @description सर्वर-साइड रेंडरिंग प्रोसेस, HTML जनरेशन और रिसोर्स इंजेक्शन के लिए जिम्मेदार\n */\n\nimport type { RenderContext } from '@gez/core';\nimport { renderToString } from '@vue/server-renderer';\nimport { createApp } from './create-app';\n\nexport default async (rc: RenderContext) => {\n    // Vue एप्लिकेशन इंस्टेंस बनाएं\n    const { app } = createApp();\n\n    // Vue के renderToString का उपयोग करके पेज कंटेंट जनरेट करें\n    const html = await renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // डिपेंडेंसी कलेक्शन को कमिट करें, सभी आवश्यक रिसोर्स को लोड करने की पुष्टि करें\n    await rc.commit();\n\n    // पूर्ण HTML संरचना जनरेट करें\n    rc.html = `<!DOCTYPE html>\n<html lang=\"hi-IN\">\n<head>\n    ${rc.preload()}\n    <title>Gez क्विक स्टार्ट</title>\n    ${rc.css()}\n</head>\n<body>\n    <div id=\"app\">${html}</div>\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-को-रन-करें",children:["प्रोजेक्ट को रन करें",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-को-रन-करें",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"उपरोक्त फ़ाइल कॉन्फ़िगरेशन को पूरा करने के बाद, आप निम्नलिखित कमांड का उपयोग करके प्रोजेक्ट को रन कर सकते हैं:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"डेवलपमेंट मोड:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"प्रोजेक्ट बिल्ड करें:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"प्रोडक्शन एनवायरनमेंट में रन करें:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["अब, आपने Gez पर आधारित Vue3 SSR एप्लिकेशन को सफलतापूर्वक बना लिया है! ",(0,t.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," पर विज़िट करके परिणाम देख सकते हैं।"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["hi%2Fguide%2Fframeworks%2Fvue3.md"]={toc:[{text:"प्रोजेक्ट संरचना",id:"प्रोजेक्ट-संरचना",depth:2},{text:"प्रोजेक्ट कॉन्फ़िगरेशन",id:"प्रोजेक्ट-कॉन्फ़िगरेशन",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"सोर्स कोड संरचना",id:"सोर्स-कोड-संरचना",depth:2},{text:"app.vue",id:"appvue",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"प्रोजेक्ट को रन करें",id:"प्रोजेक्ट-को-रन-करें",depth:2}],title:"Vue3",headingTitle:"Vue3",frontmatter:{titleSuffix:"Gez फ्रेमवर्क Vue3 SSR एप्लिकेशन उदाहरण",description:"Gez पर आधारित Vue3 SSR एप्लिकेशन को शुरू से बनाने का तरीका, प्रोजेक्ट इनिशियलाइज़ेशन, Vue3 कॉन्फ़िगरेशन और एंट्री फ़ाइल सेटअप सहित फ्रेमवर्क के बेसिक उपयोग को उदाहरण के माध्यम से दिखाया गया है।",head:[["meta",{property:"keywords",content:"Gez, Vue3, SSR एप्लिकेशन, TypeScript कॉन्फ़िगरेशन, प्रोजेक्ट इनिशियलाइज़ेशन, सर्वर-साइड रेंडरिंग, क्लाइंट-साइड इंटरैक्शन, कंपोज़ेबल API"}]]}}}}]);