"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7757"],{923:function(n,e,s){s.r(e),s.d(e,{default:()=>h});var r=s(1549),i=s(6603);function d(n){let e=Object.assign({h1:"h1",a:"a",p:"p",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong",ol:"ol",h2:"h2",code:"code",pre:"pre"},(0,i.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h1,{id:"モジュールリンク",children:["モジュールリンク",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#モジュールリンク",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"Gez フレームワークは、サービス間のコード共有と依存関係を管理するための完全なモジュールリンクメカニズムを提供します。このメカニズムは ESM（ECMAScript Module）仕様に基づいて実装されており、ソースコードレベルのモジュールエクスポートとインポート、および完全な依存関係管理機能をサポートしています。"}),"\n",(0,r.jsxs)(e.h3,{id:"コアコンセプト",children:["コアコンセプト",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#コアコンセプト",children:"#"})]}),"\n",(0,r.jsxs)(e.h4,{id:"モジュールエクスポート",children:["モジュールエクスポート",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#モジュールエクスポート",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"モジュールエクスポートは、サービス内の特定のコードユニット（コンポーネント、ユーティリティ関数など）を ESM 形式で外部に公開するプロセスです。以下の2種類のエクスポートタイプをサポートします："}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"ソースコードエクスポート"}),"：プロジェクト内のソースコードファイルを直接エクスポート"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"依存関係エクスポート"}),"：プロジェクトで使用するサードパーティの依存パッケージをエクスポート"]}),"\n"]}),"\n",(0,r.jsxs)(e.h4,{id:"モジュールインポート",children:["モジュールインポート",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#モジュールインポート",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"モジュールインポートは、他のサービスがエクスポートしたコードユニットをサービス内で参照するプロセスです。以下の複数のインストール方法をサポートします："}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"ソースコードインストール"}),"：開発環境に適しており、リアルタイムの変更とホットリロードをサポート"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"パッケージインストール"}),"：本番環境に適しており、ビルド成果物を直接使用"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"プリロードメカニズム",children:["プリロードメカニズム",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#プリロードメカニズム",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"サービスのパフォーマンスを最適化するため、Gez はインテリジェントなモジュールプリロードメカニズムを実装しています："}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"依存関係分析"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"ビルド時にコンポーネント間の依存関係を分析"}),"\n",(0,r.jsx)(e.li,{children:"クリティカルパス上のコアモジュールを識別"}),"\n",(0,r.jsx)(e.li,{children:"モジュールのロード優先順位を決定"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"ロード戦略"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"即時ロード"}),"：クリティカルパス上のコアモジュール"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"遅延ロード"}),"：非クリティカルな機能モジュール"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"オンデマンドロード"}),"：条件付きレンダリングのモジュール"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"リソース最適化"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"インテリジェントなコード分割戦略"}),"\n",(0,r.jsx)(e.li,{children:"モジュールレベルのキャッシュ管理"}),"\n",(0,r.jsx)(e.li,{children:"オンデマンドでのコンパイルとバンドル"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h2,{id:"モジュールエクスポート-1",children:["モジュールエクスポート",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#モジュールエクスポート-1",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"設定説明",children:["設定説明",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#設定説明",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"entry.node.ts"})," でエクスポートするモジュールを設定します："]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    modules: {\n        exports: [\n            // ソースコードファイルをエクスポート\n            'root:src/components/button.vue',  // Vue コンポーネント\n            'root:src/utils/format.ts',        // ユーティリティ関数\n            // サードパーティの依存関係をエクスポート\n            'npm:vue',                         // Vue フレームワーク\n            'npm:vue-router'                   // Vue Router\n        ]\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(e.p,{children:"エクスポート設定は以下の2種類をサポートします："}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"root:*"}),"：ソースコードファイルをエクスポート、パスはプロジェクトルートディレクトリからの相対パス"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"npm:*"}),"：サードパーティの依存関係をエクスポート、パッケージ名を直接指定"]}),"\n"]}),"\n",(0,r.jsxs)(e.h2,{id:"モジュールインポート-1",children:["モジュールインポート",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#モジュールインポート-1",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"設定説明-1",children:["設定説明",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#設定説明-1",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"entry.node.ts"})," でインポートするモジュールを設定します："]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    modules: {\n        // インポート設定\n        imports: {\n            // ソースコードインストール：ビルド成果物ディレクトリを指定\n            'ssr-remote': 'root:./node_modules/ssr-remote/dist',\n            // パッケージインストール：パッケージディレクトリを指定\n            'other-remote': 'root:./node_modules/other-remote'\n        },\n        // 外部依存関係設定\n        externals: {\n            // リモートモジュール内の依存関係を使用\n            'vue': 'ssr-remote/npm/vue',\n            'vue-router': 'ssr-remote/npm/vue-router'\n        }\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(e.p,{children:"設定項目の説明："}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"imports"}),"：リモートモジュールのローカルパスを設定"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"ソースコードインストール：ビルド成果物ディレクトリ（dist）を指定"}),"\n",(0,r.jsx)(e.li,{children:"パッケージインストール：パッケージディレクトリを直接指定"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"externals"}),"：外部依存関係を設定"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"リモートモジュール内の依存関係を共有"}),"\n",(0,r.jsx)(e.li,{children:"同じ依存関係の重複バンドルを回避"}),"\n",(0,r.jsx)(e.li,{children:"複数のモジュール間での依存関係共有をサポート"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"インストール方法",children:["インストール方法",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#インストール方法",children:"#"})]}),"\n",(0,r.jsxs)(e.h4,{id:"ソースコードインストール",children:["ソースコードインストール",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#ソースコードインストール",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"開発環境に適しており、リアルタイムの変更とホットリロードをサポートします。"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Workspace 方式"}),"\nMonorepo プロジェクトでの使用を推奨："]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="package.json"',children:'{\n    "devDependencies": {\n        "ssr-remote": "workspace:*"\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Link 方式"}),"\nローカル開発デバッグに使用："]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="package.json"',children:'{\n    "devDependencies": {\n        "ssr-remote": "link:../ssr-remote"\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.h4,{id:"パッケージインストール",children:["パッケージインストール",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#パッケージインストール",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"本番環境に適しており、ビルド成果物を直接使用します。"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"NPM Registry"}),"\nnpm registry 経由でインストール："]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="package.json"',children:'{\n    "dependencies": {\n        "ssr-remote": "^1.0.0"\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"静的サーバー"}),"\nHTTP/HTTPS プロトコル経由でインストール："]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="package.json"',children:'{\n    "dependencies": {\n        "ssr-remote": "https://cdn.example.com/ssr-remote/1.0.0.tgz"\n    }\n}\n'})}),"\n",(0,r.jsxs)(e.h2,{id:"パッケージビルド",children:["パッケージビルド",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#パッケージビルド",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"設定説明-2",children:["設定説明",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#設定説明-2",children:"#"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"entry.node.ts"})," でビルドオプションを設定します："]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    // モジュールエクスポート設定\n    modules: {\n        exports: [\n            'root:src/components/button.vue',\n            'root:src/utils/format.ts',\n            'npm:vue'\n        ]\n    },\n    // ビルド設定\n    pack: {\n        // ビルドを有効化\n        enable: true,\n\n        // 出力設定\n        outputs: [\n            'dist/client/versions/latest.tgz',\n            'dist/client/versions/1.0.0.tgz'\n        ],\n\n        // カスタム package.json\n        packageJson: async (gez, pkg) => {\n            pkg.version = '1.0.0';\n            return pkg;\n        },\n\n        // ビルド前処理\n        onBefore: async (gez, pkg) => {\n            // 型宣言を生成\n            // テストケースを実行\n            // ドキュメントを更新など\n        },\n\n        // ビルド後処理\n        onAfter: async (gez, pkg, file) => {\n            // CDN にアップロード\n            // npm レポジトリに公開\n            // テスト環境にデプロイなど\n        }\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"ビルド成果物",children:["ビルド成果物",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#ビルド成果物",children:"#"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"your-app-name.tgz\n├── package.json        # パッケージ情報\n├── index.js            # 本番環境エントリーポイント\n├── server/             # サーバーサイドリソース\n│   └── manifest.json   # サーバーサイドリソースマッピング\n├── node/               # Node.js ランタイム\n└── client/             # クライアントサイドリソース\n    └── manifest.json   # クライアントサイドリソースマッピング\n"})}),"\n",(0,r.jsxs)(e.h3,{id:"リリースプロセス",children:["リリースプロセス",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#リリースプロセス",children:"#"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# 1. 本番バージョンをビルド\ngez build\n\n# 2. npm に公開\nnpm publish dist/versions/your-app-name.tgz\n"})}),"\n",(0,r.jsxs)(e.h2,{id:"ベストプラクティス",children:["ベストプラクティス",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#ベストプラクティス",children:"#"})]}),"\n",(0,r.jsxs)(e.h3,{id:"開発環境設定",children:["開発環境設定",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#開発環境設定",children:"#"})]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"依存関係管理"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Workspace または Link 方式で依存関係をインストール"}),"\n",(0,r.jsx)(e.li,{children:"依存関係のバージョンを統一管理"}),"\n",(0,r.jsx)(e.li,{children:"同じ依存関係の重複インストールを回避"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"開発体験"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"ホットリロード機能を有効化"}),"\n",(0,r.jsx)(e.li,{children:"適切なプリロード戦略を設定"}),"\n",(0,r.jsx)(e.li,{children:"ビルド速度を最適化"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"本番環境設定",children:["本番環境設定",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#本番環境設定",children:"#"})]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"デプロイ戦略"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"NPM Registry または静的サーバーを使用"}),"\n",(0,r.jsx)(e.li,{children:"ビルド成果物の完全性を確保"}),"\n",(0,r.jsx)(e.li,{children:"グレーリリースメカニズムを実施"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"パフォーマンス最適化"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"リソースプリロードを適切に設定"}),"\n",(0,r.jsx)(e.li,{children:"モジュールロード順序を最適化"}),"\n",(0,r.jsx)(e.li,{children:"効果的なキャッシュ戦略を実施"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.h3,{id:"バージョン管理",children:["バージョン管理",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#バージョン管理",children:"#"})]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"バージョン規約"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"セマンティックバージョニングに従う"}),"\n",(0,r.jsx)(e.li,{children:"詳細な更新履歴を維持"}),"\n",(0,r.jsx)(e.li,{children:"バージョン互換性テストを実施"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"依存関係更新"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"依存パッケージを適時更新"}),"\n",(0,r.jsx)(e.li,{children:"定期的にセキュリティ監査を実施"}),"\n",(0,r.jsx)(e.li,{children:"依存関係のバージョン一貫性を維持"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"\n"})})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["ja%2Fguide%2Fessentials%2Fmodule-link.md"]={toc:[{text:"コアコンセプト",id:"コアコンセプト",depth:3},{text:"モジュールエクスポート",id:"モジュールエクスポート",depth:4},{text:"モジュールインポート",id:"モジュールインポート",depth:4},{text:"プリロードメカニズム",id:"プリロードメカニズム",depth:3},{text:"モジュールエクスポート",id:"モジュールエクスポート-1",depth:2},{text:"設定説明",id:"設定説明",depth:3},{text:"モジュールインポート",id:"モジュールインポート-1",depth:2},{text:"設定説明",id:"設定説明-1",depth:3},{text:"インストール方法",id:"インストール方法",depth:3},{text:"ソースコードインストール",id:"ソースコードインストール",depth:4},{text:"パッケージインストール",id:"パッケージインストール",depth:4},{text:"パッケージビルド",id:"パッケージビルド",depth:2},{text:"設定説明",id:"設定説明-2",depth:3},{text:"ビルド成果物",id:"ビルド成果物",depth:3},{text:"リリースプロセス",id:"リリースプロセス",depth:3},{text:"ベストプラクティス",id:"ベストプラクティス",depth:2},{text:"開発環境設定",id:"開発環境設定",depth:3},{text:"本番環境設定",id:"本番環境設定",depth:3},{text:"バージョン管理",id:"バージョン管理",depth:3}],title:"モジュールリンク",headingTitle:"モジュールリンク",frontmatter:{titleSuffix:"Gez フレームワークのサービス間コード共有メカニズム",description:"Gez フレームワークのモジュールリンクメカニズムについて詳しく説明します。サービス間のコード共有、依存関係管理、ESM 仕様の実装などを含み、開発者が効率的なマイクロフロントエンドアプリケーションを構築するのに役立ちます。",head:[["meta",{property:"keywords",content:"Gez, モジュールリンク, Module Link, ESM, コード共有, 依存関係管理, マイクロフロントエンド"}]]}}}}]);