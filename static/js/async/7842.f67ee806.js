"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7842"],{510:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var t=r(1549),s=r(6603);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",pre:"pre"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"客戶端渲染",children:["客戶端渲染",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#客戶端渲染",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["客戶端渲染（Client-Side Rendering，CSR）是一種在瀏覽器端執行頁面渲染的技術方案。在 Gez 中，當你的應用無法部署 Node.js 伺服器實例時，可以選擇在建置階段生成靜態的 ",(0,t.jsx)(n.code,{children:"index.html"})," 文件，實現純客戶端渲染。"]}),"\n",(0,t.jsxs)(n.h2,{id:"使用場景",children:["使用場景",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用場景",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"以下場景推薦使用客戶端渲染："}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"靜態託管環境"}),"：如 GitHub Pages、CDN 等不支援伺服器端渲染的託管服務"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"簡單應用"}),"：對首屏載入速度和 SEO 要求不高的小型應用"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"開發環境"}),"：在開發階段快速預覽和除錯應用"]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"配置說明",children:["配置說明",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#配置說明",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"html-模板配置",children:["HTML 模板配置",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html-模板配置",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"在客戶端渲染模式下，你需要配置一個通用的 HTML 模板。這個模板將作為應用的容器，包含必要的資源引用和掛載點。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"import type { RenderContext } from '@gez/core';\n\nexport default async (rc: RenderContext) => {\n    // 提交依賴收集\n    await rc.commit();\n    \n    // 配置 HTML 模板\n    rc.html = `\n<!DOCTYPE html>\n<html>\n<head>\n    ${rc.preload()}           // 預載資源\n    <title>Gez</title>\n    ${rc.css()}               // 注入樣式\n</head>\n<body>\n    <div id=\"app\"></div>\n    ${rc.importmap()}         // 導入映射\n    ${rc.moduleEntry()}       // 入口模組\n    ${rc.modulePreload()}     // 模組預載\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"靜態-html-生成",children:["靜態 HTML 生成",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#靜態-html-生成",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["要在生產環境中使用客戶端渲染，需要在建置階段生成靜態的 HTML 文件。Gez 提供了 ",(0,t.jsx)(n.code,{children:"postBuild"})," 鉤子函數來實現這一功能："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async postBuild(gez) {\n        // 生成靜態 HTML 文件\n        const rc = await gez.render();\n        // 寫入 HTML 文件\n        gez.writeSync(\n            gez.resolvePath('dist/client', 'index.html'),\n            rc.html\n        );\n    }\n} satisfies GezOptions;\n"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}let h=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["zh-TW%2Fguide%2Fessentials%2Fcsr.md"]={toc:[{text:"使用場景",id:"使用場景",depth:2},{text:"配置說明",id:"配置說明",depth:2},{text:"HTML 模板配置",id:"html-模板配置",depth:3},{text:"靜態 HTML 生成",id:"靜態-html-生成",depth:3}],title:"客戶端渲染",headingTitle:"客戶端渲染",frontmatter:{titleSuffix:"Gez 框架客戶端渲染實作指南",description:"詳細介紹 Gez 框架的客戶端渲染機制，包括靜態建置、部署策略和最佳實踐，幫助開發者在無伺服器環境下實現高效的前端渲染。",head:[["meta",{property:"keywords",content:"Gez, 客戶端渲染, CSR, 靜態建置, 前端渲染, 無伺服器部署, 效能優化"}]]}}}}]);