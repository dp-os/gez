"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7173"],{8634:function(e,n,a){a.r(n),a.d(n,{default:()=>d});var i=a(1549),s=a(6603);function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",ol:"ol"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"de-la-compartici\\xf3n-de-componentes-a-la-modularizaci\\xf3n-nativa-el-camino-evolutivo-del-framework-de-microfrontends-gez",children:["De la compartici\xf3n de componentes a la modularizaci\xf3n nativa: El camino evolutivo del framework de microfrontends Gez",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#de-la-compartici\\xf3n-de-componentes-a-la-modularizaci\\xf3n-nativa-el-camino-evolutivo-del-framework-de-microfrontends-gez",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"contexto-del-proyecto",children:["Contexto del proyecto",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#contexto-del-proyecto",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"En los \xfaltimos a\xf1os, las arquitecturas de microfrontends han estado buscando un camino correcto. Sin embargo, lo que hemos visto son diversas soluciones t\xe9cnicas complejas que utilizan capas de envoltura y aislamiento artificial para simular un mundo ideal de microfrontends. Estas soluciones han tra\xeddo una carga pesada en t\xe9rminos de rendimiento, haciendo que el desarrollo simple se vuelva complejo y que los flujos est\xe1ndar se vuelvan oscuros."}),"\n",(0,i.jsxs)(n.h3,{id:"limitaciones-de-las-soluciones-tradicionales",children:["Limitaciones de las soluciones tradicionales",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#limitaciones-de-las-soluciones-tradicionales",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"En la pr\xe1ctica de las arquitecturas de microfrontends, hemos experimentado profundamente las numerosas limitaciones de las soluciones tradicionales:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"P\xe9rdida de rendimiento"}),": Inyecci\xf3n de dependencias en tiempo de ejecuci\xf3n, proxies de sandbox de JS, cada operaci\xf3n consume un rendimiento valioso."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aislamiento fr\xe1gil"}),": Entornos de sandbox creados artificialmente, que nunca pueden alcanzar las capacidades de aislamiento nativas del navegador."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complejidad de construcci\xf3n"}),": Para manejar las relaciones de dependencia, se tuvo que modificar las herramientas de construcci\xf3n, haciendo que los proyectos simples sean dif\xedciles de mantener."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reglas personalizadas"}),": Estrategias de implementaci\xf3n especiales, procesamiento en tiempo de ejecuci\xf3n, cada paso se desv\xeda de los flujos est\xe1ndar de desarrollo moderno."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Limitaciones del ecosistema"}),": Acoplamiento de frameworks, APIs personalizadas, lo que obliga a la selecci\xf3n t\xe9cnica a estar vinculada a un ecosistema espec\xedfico."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Estos problemas fueron especialmente evidentes en un proyecto empresarial en 2019. En ese momento, un gran producto se dividi\xf3 en m\xe1s de diez subsistemas de negocio independientes, que necesitaban compartir un conjunto de componentes b\xe1sicos y de negocio. La soluci\xf3n inicial de compartici\xf3n de componentes basada en paquetes npm revel\xf3 serios problemas de eficiencia de mantenimiento: cuando se actualizaban los componentes compartidos, todos los subsistemas que depend\xedan de ellos ten\xedan que pasar por un proceso completo de construcci\xf3n e implementaci\xf3n."}),"\n",(0,i.jsxs)(n.h2,{id:"evoluci\\xf3n-t\\xe9cnica",children:["Evoluci\xf3n t\xe9cnica",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#evoluci\\xf3n-t\\xe9cnica",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"v10-exploraci\\xf3n-de-componentes-remotos",children:["v1.0: Exploraci\xf3n de componentes remotos",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#v10-exploraci\\xf3n-de-componentes-remotos",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Para resolver el problema de eficiencia en la compartici\xf3n de componentes, Gez v1.0 introdujo el mecanismo de componentes RemoteView basado en el protocolo HTTP. Esta soluci\xf3n implement\xf3 el ensamblaje din\xe1mico de c\xf3digo entre servicios en tiempo de ejecuci\xf3n, resolviendo con \xe9xito el problema de las largas cadenas de dependencias de construcci\xf3n. Sin embargo, debido a la falta de un mecanismo estandarizado de comunicaci\xf3n en tiempo de ejecuci\xf3n, la sincronizaci\xf3n de estado y la transferencia de eventos entre servicios a\xfan presentaban cuellos de botella en t\xe9rminos de eficiencia."}),"\n",(0,i.jsxs)(n.h3,{id:"v20-intento-de-federaci\\xf3n-de-m\\xf3dulos",children:["v2.0: Intento de Federaci\xf3n de M\xf3dulos",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#v20-intento-de-federaci\\xf3n-de-m\\xf3dulos",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["En la versi\xf3n v2.0, adoptamos la tecnolog\xeda de ",(0,i.jsx)(n.a,{href:"https://webpack.js.org/concepts/module-federation/",target:"_blank",rel:"noopener noreferrer",children:"Federaci\xf3n de M\xf3dulos (Module Federation)"})," de ",(0,i.jsx)(n.a,{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer",children:"Webpack 5.0"}),". Esta tecnolog\xeda, a trav\xe9s de un mecanismo unificado de carga de m\xf3dulos y contenedores en tiempo de ejecuci\xf3n, mejor\xf3 significativamente la eficiencia de colaboraci\xf3n entre servicios. Sin embargo, en la pr\xe1ctica a gran escala, el mecanismo cerrado de implementaci\xf3n de la Federaci\xf3n de M\xf3dulos present\xf3 nuevos desaf\xedos: era dif\xedcil lograr una gesti\xf3n precisa de versiones de dependencias, especialmente al unificar dependencias compartidas entre m\xfaltiples servicios, donde frecuentemente se encontraban conflictos de versiones y excepciones en tiempo de ejecuci\xf3n."]}),"\n",(0,i.jsxs)(n.h2,{id:"abrazando-la-nueva-era-de-esm",children:["Abrazando la nueva era de ESM",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#abrazando-la-nueva-era-de-esm",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Al planificar la versi\xf3n v3.0, observamos profundamente las tendencias de desarrollo del ecosistema frontend y descubrimos que los avances en las capacidades nativas del navegador ofrec\xedan nuevas posibilidades para las arquitecturas de microfrontends:"}),"\n",(0,i.jsxs)(n.h3,{id:"sistema-de-m\\xf3dulos-estandarizado",children:["Sistema de m\xf3dulos estandarizado",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#sistema-de-m\\xf3dulos-estandarizado",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Con el soporte completo de los principales navegadores para ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer",children:"ES Modules"})," y la madurez de la especificaci\xf3n ",(0,i.jsx)(n.a,{href:"https://github.com/WICG/import-maps",target:"_blank",rel:"noopener noreferrer",children:"Import Maps"}),", el desarrollo frontend ha entrado en una verdadera era de modularizaci\xf3n. Seg\xfan las estad\xedsticas de ",(0,i.jsx)(n.a,{href:"https://caniuse.com/?search=importmap",target:"_blank",rel:"noopener noreferrer",children:"Can I Use"}),", el soporte nativo de ESM en los principales navegadores (Chrome >= 89, Edge >= 89, Firefox >= 108, Safari >= 16.4) ha alcanzado el 93.5%, lo que nos proporciona las siguientes ventajas:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gesti\xf3n de dependencias estandarizada"}),": Import Maps ofrece la capacidad de resolver dependencias de m\xf3dulos a nivel del navegador, sin necesidad de inyecci\xf3n compleja en tiempo de ejecuci\xf3n."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimizaci\xf3n de carga de recursos"}),": El mecanismo de cach\xe9 de m\xf3dulos nativo del navegador mejora significativamente la eficiencia de carga de recursos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simplificaci\xf3n del flujo de construcci\xf3n"}),": El modo de desarrollo basado en ESM hace que los flujos de construcci\xf3n en entornos de desarrollo y producci\xf3n sean m\xe1s consistentes."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Adem\xe1s, con el soporte de modo de compatibilidad (Chrome >= 87, Edge >= 88, Firefox >= 78, Safari >= 14), podemos aumentar la cobertura de navegadores al 96.81%, lo que nos permite mantener un alto rendimiento sin sacrificar el soporte para navegadores antiguos."}),"\n",(0,i.jsxs)(n.h3,{id:"avances-en-rendimiento-y-aislamiento",children:["Avances en rendimiento y aislamiento",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#avances-en-rendimiento-y-aislamiento",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"El sistema de m\xf3dulos nativo no solo trae estandarizaci\xf3n, sino tambi\xe9n mejoras significativas en rendimiento y aislamiento:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cero sobrecarga en tiempo de ejecuci\xf3n"}),": Se eliminan los proxies de sandbox de JavaScript y la inyecci\xf3n en tiempo de ejecuci\xf3n de las soluciones tradicionales de microfrontends."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mecanismo de aislamiento confiable"}),": El \xe1mbito estricto de los m\xf3dulos ESM proporciona naturalmente la capacidad de aislamiento m\xe1s confiable."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gesti\xf3n precisa de dependencias"}),": El an\xe1lisis est\xe1tico de importaciones hace que las relaciones de dependencia sean m\xe1s claras y el control de versiones m\xe1s preciso."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"selecci\\xf3n-de-herramientas-de-construcci\\xf3n",children:["Selecci\xf3n de herramientas de construcci\xf3n",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#selecci\\xf3n-de-herramientas-de-construcci\\xf3n",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"En la implementaci\xf3n de la soluci\xf3n t\xe9cnica, la selecci\xf3n de herramientas de construcci\xf3n fue un punto de decisi\xf3n clave. Despu\xe9s de casi un a\xf1o de investigaci\xf3n y pr\xe1ctica t\xe9cnica, nuestra elecci\xf3n evolucion\xf3 de la siguiente manera:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Exploraci\xf3n de Vite"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ventaja: Servidor de desarrollo basado en ESM, proporcionando una experiencia de desarrollo extrema."}),"\n",(0,i.jsx)(n.li,{children:"Desaf\xedo: Las diferencias en la construcci\xf3n entre entornos de desarrollo y producci\xf3n introdujeron cierta incertidumbre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Establecimiento de ",(0,i.jsx)(n.a,{href:"https://www.rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"})]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ventaja de rendimiento: Compilaci\xf3n de alto rendimiento basada en ",(0,i.jsx)(n.a,{href:"https://www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer",children:"Rust"}),", mejorando significativamente la velocidad de construcci\xf3n."]}),"\n",(0,i.jsx)(n.li,{children:"Soporte del ecosistema: Alta compatibilidad con el ecosistema de Webpack, reduciendo los costos de migraci\xf3n."}),"\n",(0,i.jsx)(n.li,{children:"Soporte de ESM: A trav\xe9s de la pr\xe1ctica del proyecto Rslib, se valid\xf3 su fiabilidad en la construcci\xf3n basada en ESM."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Esta decisi\xf3n nos permiti\xf3 mantener la experiencia de desarrollo mientras obten\xedamos un soporte m\xe1s estable para el entorno de producci\xf3n. Bas\xe1ndonos en la combinaci\xf3n de ESM y Rspack, finalmente construimos una soluci\xf3n de microfrontends de alto rendimiento y baja intrusividad."}),"\n",(0,i.jsxs)(n.h2,{id:"perspectivas-futuras",children:["Perspectivas futuras",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#perspectivas-futuras",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"En el plan de desarrollo futuro, el framework Gez se centrar\xe1 en las siguientes tres direcciones:"}),"\n",(0,i.jsxs)(n.h3,{id:"optimizaci\\xf3n-profunda-de-import-maps",children:["Optimizaci\xf3n profunda de Import Maps",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#optimizaci\\xf3n-profunda-de-import-maps",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Gesti\xf3n din\xe1mica de dependencias"}),": Implementar la programaci\xf3n inteligente de versiones de dependencias en tiempo de ejecuci\xf3n, resolviendo conflictos de dependencias entre m\xfaltiples aplicaciones."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Estrategias de precarga"}),": Precarga inteligente basada en an\xe1lisis de rutas, mejorando la eficiencia de carga de recursos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optimizaci\xf3n de construcci\xf3n"}),": Generaci\xf3n autom\xe1tica de configuraciones \xf3ptimas de Import Maps, reduciendo los costos de configuraci\xf3n manual para los desarrolladores."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"soluci\\xf3n-de-enrutamiento-independiente-del-framework",children:["Soluci\xf3n de enrutamiento independiente del framework",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#soluci\\xf3n-de-enrutamiento-independiente-del-framework",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Abstracci\xf3n unificada de enrutamiento"}),": Dise\xf1ar una interfaz de enrutamiento independiente del framework, compatible con Vue, React y otros frameworks principales."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enrutamiento de microaplicaciones"}),": Implementar la interconexi\xf3n de rutas entre aplicaciones, manteniendo la consistencia entre la URL y el estado de la aplicaci\xf3n."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Middleware de enrutamiento"}),": Proporcionar un mecanismo de middleware extensible, soportando control de permisos, transiciones de p\xe1gina, etc."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"mejores-pr\\xe1cticas-de-comunicaci\\xf3n-entre-frameworks",children:["Mejores pr\xe1cticas de comunicaci\xf3n entre frameworks",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#mejores-pr\\xe1cticas-de-comunicaci\\xf3n-entre-frameworks",children:"#"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aplicaci\xf3n de ejemplo"}),": Proporcionar un ejemplo completo de comunicaci\xf3n entre frameworks, cubriendo Vue, React, Preact y otros frameworks principales."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sincronizaci\xf3n de estado"}),": Soluci\xf3n ligera de compartici\xf3n de estado basada en ESM."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bus de eventos"}),": Mecanismo estandarizado de comunicaci\xf3n de eventos, soportando comunicaci\xf3n desacoplada entre aplicaciones."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Con estas optimizaciones y extensiones, esperamos que Gez se convierta en una soluci\xf3n de microfrontends m\xe1s completa y f\xe1cil de usar, proporcionando a los desarrolladores una mejor experiencia de desarrollo y una mayor eficiencia."})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}let d=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["es%2Fblog%2Fbirth-of-gez.md"]={toc:[{text:"Contexto del proyecto",id:"contexto-del-proyecto",depth:2},{text:"Limitaciones de las soluciones tradicionales",id:"limitaciones-de-las-soluciones-tradicionales",depth:3},{text:"Evoluci\xf3n t\xe9cnica",id:"evoluci\xf3n-t\xe9cnica",depth:2},{text:"v1.0: Exploraci\xf3n de componentes remotos",id:"v10-exploraci\xf3n-de-componentes-remotos",depth:3},{text:"v2.0: Intento de Federaci\xf3n de M\xf3dulos",id:"v20-intento-de-federaci\xf3n-de-m\xf3dulos",depth:3},{text:"Abrazando la nueva era de ESM",id:"abrazando-la-nueva-era-de-esm",depth:2},{text:"Sistema de m\xf3dulos estandarizado",id:"sistema-de-m\xf3dulos-estandarizado",depth:3},{text:"Avances en rendimiento y aislamiento",id:"avances-en-rendimiento-y-aislamiento",depth:3},{text:"Selecci\xf3n de herramientas de construcci\xf3n",id:"selecci\xf3n-de-herramientas-de-construcci\xf3n",depth:3},{text:"Perspectivas futuras",id:"perspectivas-futuras",depth:2},{text:"Optimizaci\xf3n profunda de Import Maps",id:"optimizaci\xf3n-profunda-de-import-maps",depth:3},{text:"Soluci\xf3n de enrutamiento independiente del framework",id:"soluci\xf3n-de-enrutamiento-independiente-del-framework",depth:3},{text:"Mejores pr\xe1cticas de comunicaci\xf3n entre frameworks",id:"mejores-pr\xe1cticas-de-comunicaci\xf3n-entre-frameworks",depth:3}],title:"De la compartici\xf3n de componentes a la modularizaci\xf3n nativa: El camino evolutivo del framework de microfrontends Gez",headingTitle:"De la compartici\xf3n de componentes a la modularizaci\xf3n nativa: El camino evolutivo del framework de microfrontends Gez",frontmatter:{titleSuffix:"De los desaf\xedos de los microfrontends a la innovaci\xf3n con ESM: El camino evolutivo del framework Gez",description:"Explora en profundidad la evoluci\xf3n del framework Gez desde los desaf\xedos de las arquitecturas tradicionales de microfrontends hasta los avances innovadores basados en ESM, compartiendo experiencias pr\xe1cticas en optimizaci\xf3n de rendimiento, gesti\xf3n de dependencias y selecci\xf3n de herramientas de construcci\xf3n.",head:[["meta",{property:"keywords",content:"Gez, framework de microfrontends, ESM, Import Maps, Rspack, Federaci\xf3n de M\xf3dulos, gesti\xf3n de dependencias, optimizaci\xf3n de rendimiento, evoluci\xf3n t\xe9cnica, renderizado en el servidor"}]],sidebar:!1}}}}]);