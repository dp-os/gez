"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["2796"],{6450:function(e,n,i){i.r(n),i.d(n,{default:()=>a});var r=i(1549),t=i(6603);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",div:"div",ul:"ul",li:"li",strong:"strong"},(0,t.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"standardrichtlinien",children:["Standardrichtlinien",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#standardrichtlinien",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez ist ein modernes SSR-Framework (Server-Side Rendering), das eine standardisierte Projektstruktur und Pfadaufl\xf6sungsmechanismen verwendet, um Konsistenz und Wartbarkeit in Entwicklungs- und Produktionsumgebungen zu gew\xe4hrleisten."}),"\n",(0,r.jsxs)(n.h2,{id:"projektstrukturrichtlinien",children:["Projektstrukturrichtlinien",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#projektstrukturrichtlinien",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"standardverzeichnisstruktur",children:["Standardverzeichnisstruktur",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#standardverzeichnisstruktur",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"root\n│─ dist                  # Verzeichnis f\xfcr kompilierte Ausgaben\n│  ├─ package.json       # Paketkonfiguration nach der Kompilierung\n│  ├─ server             # Server-seitige kompilierte Ausgaben\n│  │  └─ manifest.json   # Kompilierungsmanifest, verwendet zur Generierung von importmap\n│  ├─ node               # Kompilierte Ausgaben f\xfcr Node.js-Server\n│  ├─ client             # Client-seitige kompilierte Ausgaben\n│  │  ├─ versions        # Verzeichnis f\xfcr Versionen\n│  │  │  └─ latest.tgz   # Archiv des dist-Verzeichnisses f\xfcr die Paketverteilung\n│  │  └─ manifest.json   # Kompilierungsmanifest, verwendet zur Generierung von importmap\n│  └─ src                # Mit tsc generierte Dateitypen\n├─ src\n│  ├─ entry.server.ts    # Einstiegsdatei f\xfcr die Server-Anwendung\n│  ├─ entry.client.ts    # Einstiegsdatei f\xfcr die Client-Anwendung\n│  └─ entry.node.ts      # Einstiegsdatei f\xfcr die Node.js-Server-Anwendung\n├─ tsconfig.json         # TypeScript-Konfiguration\n└─ package.json          # Paketkonfiguration\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"Erweiterte Informationen"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gez.name"})," stammt aus dem ",(0,r.jsx)(n.code,{children:"name"}),"-Feld in ",(0,r.jsx)(n.code,{children:"package.json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dist/package.json"})," stammt aus der ",(0,r.jsx)(n.code,{children:"package.json"})," im Stammverzeichnis"]}),"\n",(0,r.jsxs)(n.li,{children:["Das ",(0,r.jsx)(n.code,{children:"dist"}),"-Verzeichnis wird nur archiviert, wenn ",(0,r.jsx)(n.code,{children:"packs.enable"})," auf ",(0,r.jsx)(n.code,{children:"true"})," gesetzt ist"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.h2,{id:"richtlinien-f\\xfcr-einstiegsdateien",children:["Richtlinien f\xfcr Einstiegsdateien",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#richtlinien-f\\xfcr-einstiegsdateien",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Die Client-Einstiegsdatei ist verantwortlich f\xfcr:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Initialisierung der Anwendung"}),": Konfiguration der grundlegenden Einstellungen der Client-Anwendung"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Routing-Management"}),": Handhabung von Client-Routing und Navigation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zustandsmanagement"}),": Speicherung und Aktualisierung des Client-Zustands"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interaktionsverarbeitung"}),": Verwaltung von Benutzerereignissen und Oberfl\xe4cheninteraktionen"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Die Server-Einstiegsdatei ist verantwortlich f\xfcr:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server-Side Rendering (SSR)"}),": Ausf\xfchrung des SSR-Rendering-Prozesses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTML-Generierung"}),": Erstellung der initialen Seitenstruktur"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Datenvorabruf"}),": Verarbeitung des Server-seitigen Datenabrufs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zustandsinjektion"}),": \xdcbergabe des Server-Zustands an den Client"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SEO-Optimierung"}),": Sicherstellung der Suchmaschinenoptimierung der Seite"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Die Node.js-Server-Einstiegsdatei ist verantwortlich f\xfcr:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server-Konfiguration"}),": Festlegung der HTTP-Server-Parameter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Routing-Verarbeitung"}),": Verwaltung der Server-seitigen Routing-Regeln"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Middleware-Integration"}),": Konfiguration der Server-Middleware"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Umgebungsmanagement"}),": Handhabung von Umgebungsvariablen und Konfigurationen"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anfrage-Antwort-Verarbeitung"}),": Verarbeitung von HTTP-Anfragen und -Antworten"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"richtlinien-f\\xfcr-konfigurationsdateien",children:["Richtlinien f\xfcr Konfigurationsdateien",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#richtlinien-f\\xfcr-konfigurationsdateien",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name",\n    "type": "module",\n    "scripts": {\n        "dev": "gez dev",\n        "build": "npm run build:dts && npm run build:ssr",\n        "build:ssr": "gez build",\n        "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src",\n        "preview": "gez preview",\n        "start": "NODE_ENV=production node dist/index.js"\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "allowJs": false,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "importHelpers": false,\n        "declaration": true,\n        "sourceMap": true,\n        "strict": true,\n        "noImplicitAny": false,\n        "noImplicitReturns": false,\n        "noFallthroughCasesInSwitch": true,\n        "noUnusedLocals": false,\n        "noUnusedParameters": false,\n        "moduleResolution": "node",\n        "esModuleInterop": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "forceConsistentCasingInFileNames": true,\n        "noEmit": true\n    },\n    "include": [\n        "src",\n        "**.ts"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}let a=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["de%2Fguide%2Fessentials%2Fstd.md"]={toc:[{text:"Projektstrukturrichtlinien",id:"projektstrukturrichtlinien",depth:2},{text:"Standardverzeichnisstruktur",id:"standardverzeichnisstruktur",depth:3},{text:"Richtlinien f\xfcr Einstiegsdateien",id:"richtlinien-f\xfcr-einstiegsdateien",depth:2},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"Richtlinien f\xfcr Konfigurationsdateien",id:"richtlinien-f\xfcr-konfigurationsdateien",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3}],title:"Standardrichtlinien",headingTitle:"Standardrichtlinien",frontmatter:{titleSuffix:"Gez Framework - Projektstruktur und Richtlinien",description:"Detaillierte Beschreibung der standardisierten Projektstruktur, Einstiegsdateien und Konfigurationsdateien des Gez Frameworks, um Entwicklern beim Aufbau von standardisierten und wartbaren SSR-Anwendungen zu helfen.",head:[["meta",{property:"keywords",content:"Gez, Projektstruktur, Einstiegsdateien, Konfigurationsrichtlinien, SSR-Framework, TypeScript, Projektrichtlinien, Entwicklungsstandards"}]]}}}}]);