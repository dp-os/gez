"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["8475"],{9682:function(n,e,s){s.r(e),s.d(e,{default:()=>l});var i=s(1549),r=s(6603);function c(n){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre",h3:"h3",h4:"h4"},(0,r.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"packconfig",children:["PackConfig",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"PackConfig"})," — это интерфейс конфигурации упаковки пакетов, используемый для упаковки артефактов сборки сервиса в стандартный формат npm .tgz."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Стандартизация"}),": Использует стандартный формат упаковки npm .tgz"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Полнота"}),": Включает все необходимые файлы, такие как исходный код модуля, объявления типов и конфигурационные файлы"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Совместимость"}),": Полностью совместим с экосистемой npm, поддерживает стандартные рабочие процессы управления пакетами"]}),"\n"]}),"\n",(0,i.jsxs)(e.h2,{id:"определение-типа",children:["Определение типа",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#определение-типа",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"interface PackConfig {\n    enable?: boolean;\n    outputs?: string | string[] | boolean;\n    packageJson?: (gez: Gez, pkg: Record<string, any>) => Promise<Record<string, any>>;\n    onBefore?: (gez: Gez, pkg: Record<string, any>) => Promise<void>;\n    onAfter?: (gez: Gez, pkg: Record<string, any>, file: Buffer) => Promise<void>;\n}\n"})}),"\n",(0,i.jsxs)(e.h3,{id:"packconfig-1",children:["PackConfig",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig-1",children:"#"})]}),"\n",(0,i.jsxs)(e.h4,{id:"enable",children:["enable",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#enable",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"Включает или отключает функцию упаковки. При включении артефакты сборки будут упакованы в стандартный формат npm .tgz."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Тип: ",(0,i.jsx)(e.code,{children:"boolean"})]}),"\n",(0,i.jsxs)(e.li,{children:["Значение по умолчанию: ",(0,i.jsx)(e.code,{children:"false"})]}),"\n"]}),"\n",(0,i.jsxs)(e.h4,{id:"outputs",children:["outputs",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#outputs",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"Указывает путь к выходному файлу пакета. Поддерживаются следующие варианты конфигурации:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"string"}),": Один выходной путь, например, 'dist/versions/my-app.tgz'"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"string[]"}),": Несколько выходных путей для одновременного создания нескольких версий"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"boolean"}),": При значении true используется путь по умолчанию 'dist/client/versions/latest.tgz'"]}),"\n"]}),"\n",(0,i.jsxs)(e.h4,{id:"packagejson",children:["packageJson",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"Функция обратного вызова для настройки содержимого package.json. Вызывается перед упаковкой для изменения содержимого package.json."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Параметры:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," — экземпляр Gez"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: any"})," — исходное содержимое package.json"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Возвращаемое значение: ",(0,i.jsx)(e.code,{children:"Promise<any>"})," — измененное содержимое package.json"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Типичные применения:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Изменение имени пакета и версии"}),"\n",(0,i.jsx)(e.li,{children:"Добавление или обновление зависимостей"}),"\n",(0,i.jsx)(e.li,{children:"Добавление пользовательских полей"}),"\n",(0,i.jsx)(e.li,{children:"Настройка информации о публикации"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Пример:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"packageJson: async (gez, pkg) => {\n  // Установка информации о пакете\n  pkg.name = 'my-app';\n  pkg.version = '1.0.0';\n  pkg.description = 'Мое приложение';\n\n  // Добавление зависимостей\n  pkg.dependencies = {\n    'vue': '^3.0.0',\n    'express': '^4.17.1'\n  };\n\n  // Добавление конфигурации публикации\n  pkg.publishConfig = {\n    registry: 'https://registry.example.com'\n  };\n\n  return pkg;\n}\n"})}),"\n",(0,i.jsxs)(e.h4,{id:"onbefore",children:["onBefore",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#onbefore",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"Функция обратного вызова для подготовки перед упаковкой."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Параметры:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," — экземпляр Gez"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: Record<string, any>"})," — содержимое package.json"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Возвращаемое значение: ",(0,i.jsx)(e.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Типичные применения:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Добавление дополнительных файлов (README, LICENSE и т.д.)"}),"\n",(0,i.jsx)(e.li,{children:"Выполнение тестов или проверка сборки"}),"\n",(0,i.jsx)(e.li,{children:"Генерация документации или метаданных"}),"\n",(0,i.jsx)(e.li,{children:"Очистка временных файлов"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Пример:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"onBefore: async (gez, pkg) => {\n  // Добавление документации\n  await fs.writeFile('dist/README.md', '# My App');\n  await fs.writeFile('dist/LICENSE', 'MIT License');\n\n  // Выполнение тестов\n  await runTests();\n\n  // Генерация документации\n  await generateDocs();\n\n  // Очистка временных файлов\n  await cleanupTempFiles();\n}\n"})}),"\n",(0,i.jsxs)(e.h4,{id:"onafter",children:["onAfter",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#onafter",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"Функция обратного вызова для обработки после завершения упаковки. Вызывается после создания файла .tgz для обработки результатов упаковки."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Параметры:","\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"gez: Gez"})," — экземпляр Gez"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"pkg: Record<string, any>"})," — содержимое package.json"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"file: Buffer"})," — содержимое упакованного файла"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["Возвращаемое значение: ",(0,i.jsx)(e.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Типичные применения:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Публикация в npm-репозиторий (публичный или приватный)"}),"\n",(0,i.jsx)(e.li,{children:"Загрузка на сервер статических ресурсов"}),"\n",(0,i.jsx)(e.li,{children:"Управление версиями"}),"\n",(0,i.jsx)(e.li,{children:"Запуск CI/CD-процессов"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Пример:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",children:"onAfter: async (gez, pkg, file) => {\n  // Публикация в приватный npm-репозиторий\n  await publishToRegistry(file, {\n    registry: 'https://registry.example.com'\n  });\n\n  // Загрузка на сервер статических ресурсов\n  await uploadToServer(file, 'https://assets.example.com/packages');\n\n  // Создание тега версии в Git\n  await createGitTag(pkg.version);\n\n  // Запуск процесса развертывания\n  await triggerDeploy(pkg.version);\n}\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"пример-использования",children:["Пример использования",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#пример-использования",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n  modules: {\n    // Настройка модулей для экспорта\n    exports: [\n      'root:src/components/button.vue',\n      'root:src/utils/format.ts',\n      'npm:vue',\n      'npm:vue-router'\n    ]\n  },\n  // Конфигурация упаковки\n  pack: {\n    // Включение функции упаковки\n    enable: true,\n\n    // Одновременный вывод нескольких версий\n    outputs: [\n      'dist/versions/latest.tgz',\n      'dist/versions/1.0.0.tgz'\n    ],\n\n    // Настройка package.json\n    packageJson: async (gez, pkg) => {\n      pkg.version = '1.0.0';\n      return pkg;\n    },\n\n    // Подготовка перед упаковкой\n    onBefore: async (gez, pkg) => {\n      // Добавление необходимых файлов\n      await fs.writeFile('dist/README.md', '# Your App\\n\\nОписание экспорта модулей...');\n      // Выполнение проверки типов\n      await runTypeCheck();\n    },\n\n    // Обработка после упаковки\n    onAfter: async (gez, pkg, file) => {\n      // Публикация в приватный npm-репозиторий\n      await publishToRegistry(file, {\n        registry: 'https://npm.your-registry.com/'\n      });\n      // Или загрузка на сервер статических ресурсов\n      await uploadToServer(file, 'https://static.example.com/packages');\n    }\n  }\n} satisfies GezOptions;\n"})})]})}function a(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}let l=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["ru%2Fapi%2Fcore%2Fpack-config.md"]={toc:[{text:"Определение типа",id:"определение-типа",depth:2},{text:"PackConfig",id:"packconfig-1",depth:3},{text:"enable",id:"enable",depth:4},{text:"outputs",id:"outputs",depth:4},{text:"packageJson",id:"packagejson",depth:4},{text:"onBefore",id:"onbefore",depth:4},{text:"onAfter",id:"onafter",depth:4},{text:"Пример использования",id:"пример-использования",depth:2}],title:"PackConfig",headingTitle:"PackConfig",frontmatter:{titleSuffix:"Справочник API конфигурации сборки Gez",description:"Подробное описание интерфейса конфигурации PackConfig в рамках Gez, включая правила упаковки пакетов, настройки вывода и хуки жизненного цикла, чтобы помочь разработчикам реализовать стандартизированные процессы сборки.",head:[["meta",{property:"keywords",content:"Gez, PackConfig, упаковка пакетов, конфигурация сборки, хуки жизненного цикла, конфигурация упаковки, фреймворк для веб-приложений"}]]}}}}]);