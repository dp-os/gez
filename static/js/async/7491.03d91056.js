"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7491"],{7915:function(e,r,n){n.r(r),n.d(r,{default:()=>l});var s=n(1549),i=n(6603);function d(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",ul:"ul",li:"li",strong:"strong",h3:"h3",div:"div"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"介紹",children:["介紹",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#介紹",children:"#"})]}),"\n",(0,s.jsxs)(r.h2,{id:"專案背景",children:["專案背景",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#專案背景",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez 是一個基於 ECMAScript Modules (ESM) 的現代微前端框架，專注於構建高效能、可擴展的服務端渲染（SSR）應用。作為 Genesis 專案的第三代產品，Gez 在技術演進過程中不斷創新："}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v1.0"}),"：基於 HTTP 請求實現遠端元件按需載入"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v2.0"}),"：基於 Webpack Module Federation 實現應用整合"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v3.0"}),"：基於瀏覽器原生 ESM 重新設計",(0,s.jsx)(r.a,{href:"/guide/essentials/module-link",children:"模組連結"}),"系統"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"技術背景",children:["技術背景",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#技術背景",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"在微前端架構發展過程中，傳統解決方案主要存在以下局限："}),"\n",(0,s.jsxs)(r.h3,{id:"現有方案的挑戰",children:["現有方案的挑戰",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#現有方案的挑戰",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"效能瓶頸"}),"：執行時依賴注入和 JavaScript 沙箱代理帶來顯著的效能開銷"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"隔離機制"}),"：自研沙箱環境難以企及瀏覽器原生的模組隔離能力"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"建置複雜性"}),"：為實現依賴共享而進行的建置工具改造，增加了專案維護成本"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"標準偏離"}),"：特殊的部署策略和執行時處理機制，與現代 Web 開發標準相悖"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"生態限制"}),"：框架耦合和客製 API 導致技術棧選擇受限"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"技術創新",children:["技術創新",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#技術創新",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez 基於現代 Web 標準，提供了全新的解決方案："}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"原生模組系統"}),"：利用瀏覽器原生 ESM 和 Import Maps 實現依賴管理，具有更快的解析和執行速度"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"標準隔離機制"}),"：基於 ECMAScript 模組作用域實現可靠的應用隔離"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"開放技術棧"}),"：支援任意現代前端框架的無縫接入"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"最佳化開發體驗"}),"：提供符合直覺的開發模式和完整的除錯能力"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"極致效能最佳化"}),"：透過原生能力實現零執行時開銷，配合智慧快取策略"]}),"\n"]}),"\n",(0,s.jsxs)(r.div,{className:"rspress-directive tip",children:[(0,s.jsx)(r.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(r.div,{className:"rspress-directive-content",children:(0,s.jsx)(r.p,{children:"Gez 專注於打造高效能、易擴展的微前端基礎設施，尤其適合大規模服務端渲染應用場景。"})})]}),"\n",(0,s.jsxs)(r.h2,{id:"技術規範",children:["技術規範",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#技術規範",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"環境依賴",children:["環境依賴",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#環境依賴",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["請參考",(0,s.jsx)(r.a,{href:"/guide/start/environment",children:"環境要求"}),"文件了解詳細的瀏覽器和 Node.js 環境要求。"]}),"\n",(0,s.jsxs)(r.h3,{id:"核心技術棧",children:["核心技術棧",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#核心技術棧",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"依賴管理"}),"：採用 ",(0,s.jsx)(r.a,{href:"https://caniuse.com/?search=import%20map",target:"_blank",rel:"noopener noreferrer",children:"Import Maps"})," 實現模組映射，使用 ",(0,s.jsx)(r.a,{href:"https://github.com/guybedford/es-module-shims",target:"_blank",rel:"noopener noreferrer",children:"es-module-shims"})," 提供相容支援"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"建置系統"}),"：基於 Rspack 的 ",(0,s.jsx)(r.a,{href:"https://rspack.dev/config/externals#externalstypemodule-import",target:"_blank",rel:"noopener noreferrer",children:"module-import"})," 處理外部依賴"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"開發工具鏈"}),"：支援 ESM 熱更新和 TypeScript 原生執行"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"框架定位",children:["框架定位",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#框架定位",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["Gez 不同於 ",(0,s.jsx)(r.a,{href:"https://nextjs.org",target:"_blank",rel:"noopener noreferrer",children:"Next.js"})," 或 ",(0,s.jsx)(r.a,{href:"https://nuxt.com/",target:"_blank",rel:"noopener noreferrer",children:"Nuxt.js"}),"，而是專注於提供微前端基礎設施："]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"模組連結系統"}),"：實現高效、可靠的模組匯入匯出"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"服務端渲染"}),"：提供靈活的 SSR 實現機制"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"型別系統支援"}),"：整合完整的 TypeScript 型別定義"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"框架中立性"}),"：支援主流前端框架整合"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"架構設計",children:["架構設計",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#架構設計",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"中心化依賴管理",children:["中心化依賴管理",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#中心化依賴管理",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"統一依賴源"}),"：集中化的第三方依賴管理"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"自動化分發"}),"：依賴更新的全域自動同步"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"版本一致性"}),"：精確的依賴版本控制"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"模組化設計",children:["模組化設計",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#模組化設計",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"職責分離"}),"：業務邏輯與基礎設施解耦"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"外掛機制"}),"：支援模組的靈活組合與替換"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"標準介面"}),"：規範化的模組間通訊協定"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"效能最佳化",children:["效能最佳化",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#效能最佳化",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"零開銷原則"}),"：最大化利用瀏覽器原生能力"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"智慧快取"}),"：基於內容雜湊的精確快取策略"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"按需載入"}),"：精細化的程式碼分割與依賴管理"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"專案成熟度",children:["專案成熟度",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#專案成熟度",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez 透過近 5 年的迭代演進（v1.0 至 v3.0），已在企業級環境中得到全面驗證。目前支撐數十個業務專案穩定運行，並持續推動技術棧現代化升級。框架的穩定性、可靠性和效能優勢已在實踐中得到充分檢驗，為大規模應用開發提供了可靠的技術基礎。"})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let l=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["zh-TW%2Fguide%2Fstart%2Fintroduction.md"]={toc:[{text:"專案背景",id:"專案背景",depth:2},{text:"技術背景",id:"技術背景",depth:2},{text:"現有方案的挑戰",id:"現有方案的挑戰",depth:3},{text:"技術創新",id:"技術創新",depth:3},{text:"技術規範",id:"技術規範",depth:2},{text:"環境依賴",id:"環境依賴",depth:3},{text:"核心技術棧",id:"核心技術棧",depth:3},{text:"框架定位",id:"框架定位",depth:2},{text:"架構設計",id:"架構設計",depth:2},{text:"中心化依賴管理",id:"中心化依賴管理",depth:3},{text:"模組化設計",id:"模組化設計",depth:3},{text:"效能最佳化",id:"效能最佳化",depth:3},{text:"專案成熟度",id:"專案成熟度",depth:2}],title:"介紹",headingTitle:"介紹",frontmatter:{titleSuffix:"Gez 框架概述與技術創新",description:"深入了解 Gez 微前端框架的專案背景、技術演進和核心優勢，探索基於 ESM 的現代化服務端渲染解決方案。",head:[["meta",{property:"keywords",content:"Gez, 微前端, ESM, 服務端渲染, SSR, 技術創新, 模組聯邦"}]]}}}}]);