"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3561"],{6898:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var t=r(1549),s=r(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"preacthtm",children:["Preact+HTM",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preacthtm",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"यह ट्यूटोरियल आपको Gez पर आधारित Preact+HTM SSR एप्लिकेशन को शुरू से बनाने में मदद करेगा। हम एक पूर्ण उदाहरण के माध्यम से दिखाएंगे कि Gez फ्रेमवर्क का उपयोग करके सर्वर-साइड रेंडरिंग एप्लिकेशन कैसे बनाया जाता है।"}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-संरचना",children:["प्रोजेक्ट संरचना",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-संरचना",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"सबसे पहले, प्रोजेक्ट की मूल संरचना को समझते हैं:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # प्रोजेक्ट कॉन्फ़िगरेशन फ़ाइल, डिपेंडेंसी और स्क्रिप्ट कमांड को परिभाषित करती है\n├── tsconfig.json        # TypeScript कॉन्फ़िगरेशन फ़ाइल, कंपाइल विकल्प सेट करती है\n└── src                  # सोर्स कोड डायरेक्टरी\n    ├── app.ts           # मुख्य एप्लिकेशन कंपोनेंट, पेज संरचना और इंटरैक्शन लॉजिक को परिभाषित करता है\n    ├── create-app.ts    # एप्लिकेशन इंस्टेंस क्रिएशन फैक्टरी, एप्लिकेशन को इनिशियलाइज़ करने के लिए जिम्मेदार\n    ├── entry.client.ts  # क्लाइंट-साइड एंट्री फ़ाइल, ब्राउज़र-साइड रेंडरिंग को हैंडल करती है\n    ├── entry.node.ts    # Node.js सर्वर एंट्री फ़ाइल, डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार\n    └── entry.server.ts  # सर्वर-साइड एंट्री फ़ाइल, SSR रेंडरिंग लॉजिक को हैंडल करती है\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-कॉन्फ़िगरेशन",children:["प्रोजेक्ट कॉन्फ़िगरेशन",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-कॉन्फ़िगरेशन",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाएं, प्रोजेक्ट डिपेंडेंसी और स्क्रिप्ट को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-preact-htm",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "htm": "^3.1.1",\n    "preact": "^10.26.2",\n    "preact-render-to-string": "^6.5.13",\n    "typescript": "^5.2.2"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाने के बाद, प्रोजेक्ट डिपेंडेंसी को इंस्टॉल करने की आवश्यकता है। आप निम्नलिखित किसी भी कमांड का उपयोग करके इंस्टॉल कर सकते हैं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# या\nyarn install\n# या\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"यह सभी आवश्यक डिपेंडेंसी पैकेज को इंस्टॉल करेगा, जिसमें Preact, HTM, TypeScript और SSR से संबंधित डिपेंडेंसी शामिल हैं।"}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"tsconfig.json"})," फ़ाइल बनाएं, TypeScript कंपाइल विकल्प को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "strict": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "paths": {\n            "ssr-demo-preact-htm/src/*": [\n                "./src/*"\n            ],\n            "ssr-demo-preact-htm/*": [\n                "./*"\n            ]\n        }\n    },\n    "include": [\n        "src"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"सोर्स-कोड-संरचना",children:["सोर्स कोड संरचना",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#सोर्स-कोड-संरचना",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["मुख्य एप्लिकेशन कंपोनेंट ",(0,t.jsx)(n.code,{children:"src/app.ts"})," बनाएं, Preact के क्लास कंपोनेंट और HTM का उपयोग करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file उदाहरण कंपोनेंट\n * @description Gez फ्रेमवर्क की मूल कार्यक्षमता को प्रदर्शित करने के लिए ऑटो-अपडेटिंग समय के साथ एक पेज टाइटल दिखाता है\n */\n\nimport { Component } from 'preact';\nimport { html } from 'htm/preact';\n\nexport default class App extends Component {\n    state = {\n        time: new Date().toISOString()\n    };\n\n    timer: NodeJS.Timeout | null = null;\n\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.setState({\n                time: new Date().toISOString()\n            });\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    render() {\n        const { time } = this.state;\n        return html`\n            <div>\n                <h1><a href=\"https://www.jsesm.com/guide/frameworks/preact-htm.html\" target=\"_blank\">Gez क्विक स्टार्ट</a></h1>\n                <time datetime=${time}>${time}</time>\n            </div>\n        `;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"src/create-app.ts"})," फ़ाइल बनाएं, जो एप्लिकेशन इंस्टेंस बनाने के लिए जिम्मेदार है:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file एप्लिकेशन इंस्टेंस क्रिएशन\n * @description एप्लिकेशन इंस्टेंस को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार\n */\n\nimport type { VNode } from 'preact';\nimport { html } from 'htm/preact';\nimport App from './app';\n\nexport function createApp(): { app: VNode } {\n    const app = html`<${App} />`;\n    return {\n        app\n    };\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["क्लाइंट-साइड एंट्री फ़ाइल ",(0,t.jsx)(n.code,{children:"src/entry.client.ts"})," बनाएं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file क्लाइंट-साइड एंट्री फ़ाइल\n * @description क्लाइंट-साइड इंटरैक्शन लॉजिक और डायनामिक अपडेट को हैंडल करता है\n */\n\nimport { render } from 'preact';\nimport { createApp } from './create-app';\n\n// एप्लिकेशन इंस्टेंस बनाएं\nconst { app } = createApp();\n\n// एप्लिकेशन इंस्टेंस को माउंट करें\nrender(app, document.getElementById('app')!);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"entry.node.ts"})," फ़ाइल बनाएं, डेवलपमेंट एनवायरनमेंट और सर्वर स्टार्टअप को कॉन्फ़िगर करें:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js सर्वर एंट्री फ़ाइल\n * @description डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार, SSR रनटाइम एनवायरनमेंट प्रदान करता है\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * डेवलपमेंट एनवायरनमेंट के लिए एप्लिकेशन क्रिएटर को कॉन्फ़िगर करें\n     * @description Rspack एप्लिकेशन इंस्टेंस बनाएं और कॉन्फ़िगर करें, डेवलपमेंट एनवायरनमेंट के लिए बिल्ड और हॉट रीलोडिंग के लिए\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, कोर फंक्शनलिटी और कॉन्फ़िगरेशन इंटरफेस प्रदान करता है\n     * @returns कॉन्फ़िगर किया गया Rspack एप्लिकेशन इंस्टेंस, HMR और रियल-टाइम प्रीव्यू को सपोर्ट करता है\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // यहां Rspack कंपाइल कॉन्फ़िगरेशन को कस्टमाइज़ करें\n                }\n            })\n        );\n    },\n\n    /**\n     * HTTP सर्वर को कॉन्फ़िगर और स्टार्ट करें\n     * @description HTTP सर्वर इंस्टेंस बनाएं, Gez मिडलवेयर को इंटीग्रेट करें, SSR रिक्वेस्ट को हैंडल करें\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, मिडलवेयर और रेंडरिंग फंक्शनलिटी प्रदान करता है\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Gez मिडलवेयर का उपयोग करके रिक्वेस्ट को हैंडल करें\n            gez.middleware(req, res, async () => {\n                // सर्वर-साइड रेंडरिंग को एक्जीक्यूट करें\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('सर्वर शुरू: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,t.jsx)(n.p,{children:"यह फ़ाइल डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए एंट्री फ़ाइल है, जिसमें दो मुख्य कार्यक्षमताएं शामिल हैं:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"devApp"})," फ़ंक्शन: डेवलपमेंट एनवायरनमेंट के लिए Rspack एप्लिकेशन इंस्टेंस को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, जो हॉट रीलोडिंग और रियल-टाइम प्रीव्यू को सपोर्ट करता है। यहां ",(0,t.jsx)(n.code,{children:"createRspackHtmlApp"})," का उपयोग करके Preact+HTM के लिए विशेष Rspack एप्लिकेशन इंस्टेंस बनाया जाता है।"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server"})," फ़ंक्शन: HTTP सर्वर को बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, जो Gez मिडलवेयर को इंटीग्रेट करके SSR रिक्वेस्ट को हैंडल करता है।"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["सर्वर-साइड रेंडरिंग एंट्री फ़ाइल ",(0,t.jsx)(n.code,{children:"src/entry.server.ts"})," बनाएं:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file सर्वर-साइड रेंडरिंग एंट्री फ़ाइल\n * @description सर्वर-साइड रेंडरिंग प्रोसेस, HTML जनरेशन और रिसोर्स इंजेक्शन के लिए जिम्मेदार\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type { VNode } from 'preact';\nimport { render } from 'preact-render-to-string';\nimport { createApp } from './create-app';\n\nexport default async (rc: RenderContext) => {\n    // एप्लिकेशन इंस्टेंस बनाएं\n    const { app } = createApp();\n\n    // Preact के renderToString का उपयोग करके पेज कंटेंट जनरेट करें\n    const html = render(app);\n\n    // डिपेंडेंसी कलेक्शन को कमिट करें, यह सुनिश्चित करें कि सभी आवश्यक रिसोर्स लोड हो गए हैं\n    await rc.commit();\n\n    // पूर्ण HTML संरचना जनरेट करें\n    rc.html = `<!DOCTYPE html>\n<html lang=\"hi-IN\">\n<head>\n    ${rc.preload()}\n    <title>Gez क्विक स्टार्ट</title>\n    ${rc.css()}\n</head>\n<body>\n    <div id=\"app\">${html}</div>\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"प्रोजेक्ट-को-रन-करें",children:["प्रोजेक्ट को रन करें",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-को-रन-करें",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"उपरोक्त फ़ाइल कॉन्फ़िगरेशन को पूरा करने के बाद, आप निम्नलिखित कमांड का उपयोग करके प्रोजेक्ट को रन कर सकते हैं:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"डेवलपमेंट मोड:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"प्रोजेक्ट बिल्ड करें:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"प्रोडक्शन एनवायरनमेंट में रन करें:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["अब, आपने Gez पर आधारित Preact+HTM SSR एप्लिकेशन को सफलतापूर्वक बना लिया है! ",(0,t.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," पर जाकर परिणाम देखें।"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["hi%2Fguide%2Fframeworks%2Fpreact-htm.md"]={toc:[{text:"प्रोजेक्ट संरचना",id:"प्रोजेक्ट-संरचना",depth:2},{text:"प्रोजेक्ट कॉन्फ़िगरेशन",id:"प्रोजेक्ट-कॉन्फ़िगरेशन",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"सोर्स कोड संरचना",id:"सोर्स-कोड-संरचना",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"प्रोजेक्ट को रन करें",id:"प्रोजेक्ट-को-रन-करें",depth:2}],title:"Preact+HTM",headingTitle:"Preact+HTM",frontmatter:{titleSuffix:"Gez फ्रेमवर्क Preact+HTM SSR एप्लिकेशन उदाहरण",description:"Gez पर आधारित Preact+HTM SSR एप्लिकेशन को शुरू से बनाने का तरीका, जिसमें प्रोजेक्ट इनिशियलाइज़ेशन, Preact कॉन्फ़िगरेशन और एंट्री फ़ाइल सेटअप शामिल हैं।",head:[["meta",{property:"keywords",content:"Gez, Preact, HTM, SSR एप्लिकेशन, TypeScript कॉन्फ़िगरेशन, प्रोजेक्ट इनिशियलाइज़ेशन, सर्वर-साइड रेंडरिंग, क्लाइंट-साइड इंटरैक्शन"}]]}}}}]);