"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["2207"],{7348:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var d=r(1549),s=r(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",pre:"pre",h2:"h2",h3:"h3",h4:"h4",ul:"ul",li:"li",strong:"strong"},(0,s.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"app",children:["App",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#app",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"App"})," 是 Gez 框架的应用抽象，提供了统一的接口来管理应用的生命周期、静态资源和服务端渲染。"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  // 开发环境配置\n  async devApp(gez) {\n    return import('@gez/rspack').then((m) =>\n      m.createRspackHtmlApp(gez, {\n        config(rc) {\n          // 自定义 Rspack 配置\n        }\n      })\n    );\n  }\n}\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"类型定义",children:["类型定义",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#类型定义",children:"#"})]}),"\n",(0,d.jsxs)(n.h3,{id:"app-1",children:["App",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#app-1",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"interface App {\n  middleware: Middleware;\n  render: (options?: RenderContextOptions) => Promise<RenderContext>;\n  build?: () => Promise<boolean>;\n  destroy?: () => Promise<boolean>;\n}\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"middleware",children:["middleware",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#middleware",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"类型"}),": ",(0,d.jsx)(n.code,{children:"Middleware"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"静态资源处理中间件。"}),"\n",(0,d.jsx)(n.p,{children:"开发环境："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"处理源码的静态资源请求"}),"\n",(0,d.jsx)(n.li,{children:"支持实时编译和热更新"}),"\n",(0,d.jsx)(n.li,{children:"使用 no-cache 缓存策略"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"生产环境："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"处理构建后的静态资源"}),"\n",(0,d.jsx)(n.li,{children:"支持不可变文件的长期缓存（.final.xxx）"}),"\n",(0,d.jsx)(n.li,{children:"优化的资源加载策略"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"server.use(gez.middleware);\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"render",children:["render",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#render",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"类型"}),": ",(0,d.jsx)(n.code,{children:"(options?: RenderContextOptions) => Promise<RenderContext>"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"服务端渲染函数。根据运行环境提供不同实现："}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"生产环境（start）：加载构建后的服务端入口文件（entry.server）执行渲染"}),"\n",(0,d.jsx)(n.li,{children:"开发环境（dev）：加载源码中的服务端入口文件执行渲染"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"const rc = await gez.render({\n  params: { url: '/page' }\n});\nres.end(rc.html);\n"})}),"\n",(0,d.jsxs)(n.h4,{id:"build",children:["build",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#build",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"类型"}),": ",(0,d.jsx)(n.code,{children:"() => Promise<boolean>"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"生产环境构建函数。用于资源打包和优化。构建成功返回 true，失败返回 false。"}),"\n",(0,d.jsxs)(n.h4,{id:"destroy",children:["destroy",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#destroy",children:"#"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"类型"}),": ",(0,d.jsx)(n.code,{children:"() => Promise<boolean>"})]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"资源清理函数。用于关闭服务器、断开连接等。清理成功返回 true，失败返回 false。"})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(i,{...e})}):i(e)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["zh%2Fapi%2Fcore%2Fapp.md"]={toc:[{text:"类型定义",id:"类型定义",depth:2},{text:"App",id:"app-1",depth:3},{text:"middleware",id:"middleware",depth:4},{text:"render",id:"render",depth:4},{text:"build",id:"build",depth:4},{text:"destroy",id:"destroy",depth:4}],title:"App",headingTitle:"App",frontmatter:{titleSuffix:"Gez 框架应用抽象接口",description:"详细介绍 Gez 框架的 App 接口，包括应用生命周期管理、静态资源处理和服务端渲染功能，帮助开发者理解和使用应用核心功能。",head:[["meta",{property:"keywords",content:"Gez, App, 应用抽象, 生命周期, 静态资源, 服务端渲染, API"}]]}}}}]);