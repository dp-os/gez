"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5597"],{614:function(e,n,r){r.r(n),r.d(n,{default:()=>s});var a=r(1549),i=r(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,i.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"html",children:["HTML",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"Este tutorial te guiar\xe1 en la creaci\xf3n de una aplicaci\xf3n HTML SSR (Server-Side Rendering) basada en Gez desde cero. A trav\xe9s de un ejemplo completo, mostraremos c\xf3mo utilizar el framework Gez para crear una aplicaci\xf3n con renderizado en el servidor."}),"\n",(0,a.jsxs)(n.h2,{id:"estructura-del-proyecto",children:["Estructura del proyecto",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#estructura-del-proyecto",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"Primero, veamos la estructura b\xe1sica del proyecto:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # Archivo de configuraci\xf3n del proyecto, define dependencias y comandos de script\n├── tsconfig.json        # Archivo de configuraci\xf3n de TypeScript, establece opciones de compilaci\xf3n\n└── src                  # Directorio de c\xf3digo fuente\n    ├── app.ts           # Componente principal de la aplicaci\xf3n, define la estructura de la p\xe1gina y la l\xf3gica de interacci\xf3n\n    ├── create-app.ts    # F\xe1brica de creaci\xf3n de instancias de la aplicaci\xf3n, responsable de inicializar la aplicaci\xf3n\n    ├── entry.client.ts  # Archivo de entrada del cliente, maneja el renderizado en el navegador\n    ├── entry.node.ts    # Archivo de entrada del servidor Node.js, responsable de la configuraci\xf3n del entorno de desarrollo y el inicio del servidor\n    └── entry.server.ts  # Archivo de entrada del servidor, maneja la l\xf3gica de renderizado SSR\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"configuraci\\xf3n-del-proyecto",children:["Configuraci\xf3n del proyecto",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuraci\\xf3n-del-proyecto",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo ",(0,a.jsx)(n.code,{children:"package.json"})," para configurar las dependencias y scripts del proyecto:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Despu\xe9s de crear el archivo ",(0,a.jsx)(n.code,{children:"package.json"}),", necesitas instalar las dependencias del proyecto. Puedes usar cualquiera de los siguientes comandos para instalarlas:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# o\nyarn install\n# o\nnpm install\n"})}),"\n",(0,a.jsx)(n.p,{children:"Esto instalar\xe1 todos los paquetes necesarios, incluyendo TypeScript y las dependencias relacionadas con SSR."}),"\n",(0,a.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo ",(0,a.jsx)(n.code,{children:"tsconfig.json"})," para configurar las opciones de compilaci\xf3n de TypeScript:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"estructura-del-c\\xf3digo-fuente",children:["Estructura del c\xf3digo fuente",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#estructura-del-c\\xf3digo-fuente",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el componente principal de la aplicaci\xf3n ",(0,a.jsx)(n.code,{children:"src/app.ts"}),", que implementa la estructura de la p\xe1gina y la l\xf3gica de interacci\xf3n:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file Componente de ejemplo\n * @description Muestra un t\xedtulo de p\xe1gina con la hora actualizada autom\xe1ticamente, para demostrar las funcionalidades b\xe1sicas de Gez\n */\n\nexport default class App {\n    /**\n     * Hora actual, en formato ISO\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * Crea una instancia de la aplicaci\xf3n\n     * @param {SsrContext} [ssrContext] - Contexto del servidor, contiene un conjunto de metadatos de importaci\xf3n\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // No se necesita inicializaci\xf3n adicional en el constructor\n    }\n\n    /**\n     * Renderiza el contenido de la p\xe1gina\n     * @returns {string} Retorna la estructura HTML de la p\xe1gina\n     */\n    public render(): string {\n        // Asegura la correcta recolecci\xf3n de metadatos de importaci\xf3n en el entorno del servidor\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">Inicio r\xe1pido con Gez</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * Inicializaci\xf3n en el cliente\n     * @throws {Error} Lanza un error si no se encuentra el elemento de visualizaci\xf3n de la hora\n     */\n    public onClient(): void {\n        // Obtiene el elemento de visualizaci\xf3n de la hora\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('No se encontr\xf3 el elemento de visualizaci\xf3n de la hora');\n        }\n\n        // Establece un temporizador para actualizar la hora cada segundo\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * Inicializaci\xf3n en el servidor\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * Interfaz del contexto del servidor\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * Conjunto de metadatos de importaci\xf3n\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo ",(0,a.jsx)(n.code,{children:"src/create-app.ts"}),", responsable de crear instancias de la aplicaci\xf3n:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Creaci\xf3n de instancias de la aplicaci\xf3n\n * @description Responsable de crear y configurar instancias de la aplicaci\xf3n\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo de entrada del cliente ",(0,a.jsx)(n.code,{children:"src/entry.client.ts"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file Archivo de entrada del cliente\n * @description Responsable de la l\xf3gica de interacci\xf3n del cliente y actualizaciones din\xe1micas\n */\n\nimport { createApp } from './create-app';\n\n// Crea una instancia de la aplicaci\xf3n y la inicializa\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo ",(0,a.jsx)(n.code,{children:"entry.node.ts"}),", que configura el entorno de desarrollo y el inicio del servidor:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Archivo de entrada del servidor Node.js\n * @description Responsable de la configuraci\xf3n del entorno de desarrollo y el inicio del servidor, proporcionando un entorno de ejecuci\xf3n SSR\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * Configura el creador de la aplicaci\xf3n para el entorno de desarrollo\n     * @description Crea y configura una instancia de la aplicaci\xf3n Rspack para el entorno de desarrollo, soportando construcci\xf3n y actualizaci\xf3n en caliente\n     * @param gez Instancia del framework Gez, proporciona funcionalidades principales e interfaces de configuraci\xf3n\n     * @returns Retorna una instancia de la aplicaci\xf3n Rspack configurada, soportando HMR y vista previa en tiempo real\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // Personaliza la configuraci\xf3n de compilaci\xf3n de Rspack aqu\xed\n                }\n            })\n        );\n    },\n\n    /**\n     * Configura e inicia el servidor HTTP\n     * @description Crea una instancia del servidor HTTP, integra middleware de Gez y maneja solicitudes SSR\n     * @param gez Instancia del framework Gez, proporciona middleware y funcionalidades de renderizado\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Usa middleware de Gez para manejar solicitudes\n            gez.middleware(req, res, async () => {\n                // Ejecuta el renderizado en el servidor\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('Servidor iniciado: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Este archivo es el punto de entrada para la configuraci\xf3n del entorno de desarrollo y el inicio del servidor, y contiene dos funciones principales:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"devApp"}),": Responsable de crear y configurar una instancia de la aplicaci\xf3n Rspack para el entorno de desarrollo, soportando actualizaci\xf3n en caliente y vista previa en tiempo real."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"server"}),": Responsable de crear y configurar un servidor HTTP, integrando middleware de Gez para manejar solicitudes SSR."]}),"\n"]}),"\n",(0,a.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,a.jsxs)(n.p,{children:["Crea el archivo de entrada para el renderizado en el servidor ",(0,a.jsx)(n.code,{children:"src/entry.server.ts"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file Archivo de entrada para el renderizado en el servidor\n * @description Responsable del flujo de renderizado en el servidor, generaci\xf3n de HTML e inyecci\xf3n de recursos\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// Encapsula la l\xf3gica de generaci\xf3n de contenido de la p\xe1gina\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // Inyecta el contexto de renderizado en el servidor en la instancia de la aplicaci\xf3n\n    app.ssrContext = ssrContext;\n    // Inicializa el servidor\n    app.onServer();\n\n    // Genera el contenido de la p\xe1gina\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // Crea una instancia de la aplicaci\xf3n, retorna un objeto que contiene la instancia de la aplicaci\xf3n\n    const { app } = createApp();\n    // Usa renderToString para generar el contenido de la p\xe1gina\n    const html = renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // Confirma la recolecci\xf3n de dependencias, asegurando que todos los recursos necesarios est\xe9n cargados\n    await rc.commit();\n\n    // Genera la estructura HTML completa\n    rc.html = `<!DOCTYPE html>\n<html lang=\"es\">\n<head>\n    ${rc.preload()}\n    <title>Inicio r\xe1pido con Gez</title>\n    ${rc.css()}\n</head>\n<body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"ejecuci\\xf3n-del-proyecto",children:["Ejecuci\xf3n del proyecto",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ejecuci\\xf3n-del-proyecto",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"Despu\xe9s de configurar los archivos anteriores, puedes usar los siguientes comandos para ejecutar el proyecto:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Modo de desarrollo:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsx)(n.li,{children:"Construir el proyecto:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"3",children:["\n",(0,a.jsx)(n.li,{children:"Ejecutar en producci\xf3n:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\xa1Ahora has creado con \xe9xito una aplicaci\xf3n HTML SSR basada en Gez! Visita ",(0,a.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," para ver el resultado."]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}let s=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["es%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"Estructura del proyecto",id:"estructura-del-proyecto",depth:2},{text:"Configuraci\xf3n del proyecto",id:"configuraci\xf3n-del-proyecto",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"Estructura del c\xf3digo fuente",id:"estructura-del-c\xf3digo-fuente",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"Ejecuci\xf3n del proyecto",id:"ejecuci\xf3n-del-proyecto",depth:2}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"Ejemplo de aplicaci\xf3n HTML SSR con Gez",description:"Aprende a crear una aplicaci\xf3n HTML SSR con Gez desde cero. Este tutorial muestra el uso b\xe1sico del framework, incluyendo la inicializaci\xf3n del proyecto, configuraci\xf3n de HTML y configuraci\xf3n de archivos de entrada.",head:[["meta",{property:"keywords",content:"Gez, HTML, Aplicaci\xf3n SSR, Configuraci\xf3n TypeScript, Inicializaci\xf3n de proyecto, Renderizado en servidor, Interacci\xf3n en cliente"}]]}}}}]);