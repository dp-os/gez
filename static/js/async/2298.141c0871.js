"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["2298"],{4588:function(e,n,s){s.r(n),s.d(n,{default:()=>h});var r=s(1549),i=s(6603);function c(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",ol:"ol",code:"code",pre:"pre",div:"div"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"rspack",children:["Rspack",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rspack",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Gez는 ",(0,r.jsx)(n.a,{href:"https://rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"})," 빌드 시스템을 기반으로 구현되어 Rspack의 고성능 빌드 기능을 최대한 활용합니다. 이 문서에서는 Gez 프레임워크에서 Rspack의 역할과 핵심 기능에 대해 설명합니다."]}),"\n",(0,r.jsxs)(n.h2,{id:"기능",children:["기능",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#기능",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Rspack은 Gez 프레임워크의 핵심 빌드 시스템으로, 다음과 같은 주요 기능을 제공합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"고성능 빌드"}),": Rust로 구현된 빌드 엔진을 기반으로 빠른 컴파일 성능을 제공하여 대규모 프로젝트의 빌드 속도를 크게 향상시킵니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"개발 경험 최적화"}),": 핫 리로드(HMR), 증분 컴파일 등 현대적인 개발 기능을 지원하여 원활한 개발 경험을 제공합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"다중 환경 빌드"}),": 클라이언트(client), 서버(server), Node.js(node) 환경을 지원하는 통합 빌드 설정을 제공하여 다중 플랫폼 개발 프로세스를 단순화합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"리소스 최적화"}),": 코드 분할, Tree Shaking, 리소스 압축 등 리소스 처리 및 최적화 기능을 내장하고 있습니다."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"애플리케이션-빌드",children:["애플리케이션 빌드",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#애플리케이션-빌드",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez의 Rspack 빌드 시스템은 모듈식 설계를 채택하며, 다음과 같은 핵심 모듈로 구성됩니다:"}),"\n",(0,r.jsxs)(n.h3,{id:"gezrspack",children:["@gez/rspack",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"기본 빌드 모듈로, 다음과 같은 핵심 기능을 제공합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"통합 빌드 설정"}),": 표준화된 빌드 설정 관리를 제공하며, 다중 환경 설정을 지원합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"리소스 처리"}),": TypeScript, CSS, 이미지 등 다양한 리소스에 대한 처리 기능을 내장하고 있습니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"빌드 최적화"}),": 코드 분할, Tree Shaking 등 성능 최적화 기능을 제공합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"개발 서버"}),": 고성능 개발 서버를 통합하여 HMR을 지원합니다."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"gezrspack-vue",children:["@gez/rspack-vue",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gezrspack-vue",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Vue 프레임워크 전용 빌드 모듈로, 다음과 같은 기능을 제공합니다:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vue 컴포넌트 컴파일"}),": Vue 2/3 컴포넌트의 효율적인 컴파일을 지원합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SSR 최적화"}),": 서버 사이드 렌더링(SSR) 시나리오에 특화된 최적화를 제공합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"개발 기능 강화"}),": Vue 개발 환경에 특화된 기능을 강화합니다."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"빌드-프로세스",children:["빌드 프로세스",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#빌드-프로세스",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez의 빌드 프로세스는 주로 다음과 같은 단계로 구성됩니다:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"설정 초기화"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"프로젝트 설정 로드"}),"\n",(0,r.jsx)(n.li,{children:"기본 설정과 사용자 설정 병합"}),"\n",(0,r.jsx)(n.li,{children:"환경 변수에 따라 설정 조정"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"리소스 컴파일"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"소스 코드 의존성 분석"}),"\n",(0,r.jsx)(n.li,{children:"TypeScript, CSS 등 다양한 리소스 변환"}),"\n",(0,r.jsx)(n.li,{children:"모듈 임포트/익스포트 처리"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"최적화 처리"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"코드 분할 실행"}),"\n",(0,r.jsx)(n.li,{children:"Tree Shaking 적용"}),"\n",(0,r.jsx)(n.li,{children:"코드 및 리소스 압축"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"출력 생성"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"대상 파일 생성"}),"\n",(0,r.jsx)(n.li,{children:"리소스 매핑 출력"}),"\n",(0,r.jsx)(n.li,{children:"빌드 리포트 생성"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"모범-사례",children:["모범 사례",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#모범-사례",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"개발-환경-최적화",children:["개발 환경 최적화",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#개발-환경-최적화",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"증분 컴파일 설정"}),": ",(0,r.jsx)(n.code,{children:"cache"})," 옵션을 적절히 설정하여 캐시를 활용해 빌드 속도를 높입니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HMR 최적화"}),": 핫 리로드 범위를 적절히 설정하여 불필요한 모듈 업데이트를 방지합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"리소스 처리 최적화"}),": 적절한 로더 설정을 사용하여 중복 처리를 방지합니다."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"프로덕션-환경-최적화",children:["프로덕션 환경 최적화",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#프로덕션-환경-최적화",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"코드 분할 전략"}),": ",(0,r.jsx)(n.code,{children:"splitChunks"}),"를 적절히 설정하여 리소스 로딩을 최적화합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"리소스 압축"}),": 적절한 압축 설정을 활성화하여 빌드 시간과 결과물 크기를 균형 있게 조정합니다."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"캐시 최적화"}),": 콘텐츠 해시 및 장기 캐시 전략을 활용하여 로딩 성능을 향상시킵니다."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"설정-예제",children:["설정 예제",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#설정-예제",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                // 사용자 정의 빌드 설정\n                config({ config }) {\n                    // 여기에 사용자 정의 Rspack 설정을 추가합니다.\n                }\n            })\n        );\n    },\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"TIP"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["더 자세한 API 설명과 설정 옵션은 ",(0,r.jsx)(n.a,{href:"/api/app/rspack.html",children:"Rspack API 문서"}),"를 참조하세요.\n"]})})]})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}let h=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["ko%2Fguide%2Fessentials%2Frspack.md"]={toc:[{text:"기능",id:"기능",depth:2},{text:"애플리케이션 빌드",id:"애플리케이션-빌드",depth:2},{text:"@gez/rspack",id:"gezrspack",depth:3},{text:"@gez/rspack-vue",id:"gezrspack-vue",depth:3},{text:"빌드 프로세스",id:"빌드-프로세스",depth:2},{text:"모범 사례",id:"모범-사례",depth:2},{text:"개발 환경 최적화",id:"개발-환경-최적화",depth:3},{text:"프로덕션 환경 최적화",id:"프로덕션-환경-최적화",depth:3},{text:"설정 예제",id:"설정-예제",depth:2}],title:"Rspack",headingTitle:"Rspack",frontmatter:{titleSuffix:"Gez 프레임워크 고성능 빌드 엔진",description:"Gez 프레임워크의 Rspack 빌드 시스템에 대해 심층적으로 분석합니다. 고성능 컴파일, 다중 환경 빌드, 리소스 최적화 등 핵심 기능을 포함하여 개발자가 효율적이고 신뢰할 수 있는 현대적인 웹 애플리케이션을 구축할 수 있도록 지원합니다.",head:[["meta",{property:"keywords",content:"Gez, Rspack, 빌드 시스템, 고성능 컴파일, 핫 리로드, 다중 환경 빌드, Tree Shaking, 코드 분할, SSR, 리소스 최적화, 개발 효율성, 빌드 도구"}]]}}}}]);