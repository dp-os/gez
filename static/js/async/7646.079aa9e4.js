"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["7646"],{5475:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var t=r(1549),s=r(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"preacthtm",children:["Preact+HTM",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preacthtm",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Это руководство поможет вам с нуля создать SSR-приложение на основе Gez с использованием Preact и HTM. Мы рассмотрим полный пример, демонстрирующий, как использовать фреймворк Gez для создания приложения с серверным рендерингом."}),"\n",(0,t.jsxs)(n.h2,{id:"структура-проекта",children:["Структура проекта",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#структура-проекта",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Для начала давайте рассмотрим базовую структуру проекта:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # Конфигурационный файл проекта, определяющий зависимости и команды\n├── tsconfig.json        # Конфигурационный файл TypeScript, настройки компиляции\n└── src                  # Директория с исходным кодом\n    ├── app.ts           # Главный компонент приложения, определяющий структуру страницы и логику взаимодействия\n    ├── create-app.ts    # Фабрика создания экземпляра приложения, отвечающая за инициализацию приложения\n    ├── entry.client.ts  # Входной файл для клиента, обрабатывающий рендеринг на стороне браузера\n    ├── entry.node.ts    # Входной файл для Node.js сервера, отвечающий за конфигурацию среды разработки и запуск сервера\n    └── entry.server.ts  # Входной файл для сервера, обрабатывающий логику SSR-рендеринга\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"конфигурация-проекта",children:["Конфигурация проекта",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#конфигурация-проекта",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте файл ",(0,t.jsx)(n.code,{children:"package.json"})," для настройки зависимостей и скриптов проекта:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-preact-htm",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "htm": "^3.1.1",\n    "preact": "^10.26.2",\n    "preact-render-to-string": "^6.5.13",\n    "typescript": "^5.2.2"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["После создания файла ",(0,t.jsx)(n.code,{children:"package.json"})," установите зависимости проекта. Вы можете использовать одну из следующих команд для установки:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# или\nyarn install\n# или\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"Это установит все необходимые зависимости, включая Preact, HTM, TypeScript и зависимости для SSR."}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте файл ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," для настройки параметров компиляции TypeScript:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "strict": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "paths": {\n            "ssr-demo-preact-htm/src/*": [\n                "./src/*"\n            ],\n            "ssr-demo-preact-htm/*": [\n                "./*"\n            ]\n        }\n    },\n    "include": [\n        "src"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"структура-исходного-кода",children:["Структура исходного кода",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#структура-исходного-кода",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте главный компонент приложения ",(0,t.jsx)(n.code,{children:"src/app.ts"}),", используя классовый компонент Preact и HTM:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file Пример компонента\n * @description Демонстрирует заголовок страницы с автоматически обновляемым временем, чтобы показать базовые возможности фреймворка Gez\n */\n\nimport { Component } from 'preact';\nimport { html } from 'htm/preact';\n\nexport default class App extends Component {\n    state = {\n        time: new Date().toISOString()\n    };\n\n    timer: NodeJS.Timeout | null = null;\n\n    componentDidMount() {\n        this.timer = setInterval(() => {\n            this.setState({\n                time: new Date().toISOString()\n            });\n        }, 1000);\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    render() {\n        const { time } = this.state;\n        return html`\n            <div>\n                <h1><a href=\"https://www.jsesm.com/guide/frameworks/preact-htm.html\" target=\"_blank\">Быстрый старт с Gez</a></h1>\n                <time datetime=${time}>${time}</time>\n            </div>\n        `;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте файл ",(0,t.jsx)(n.code,{children:"src/create-app.ts"}),", отвечающий за создание экземпляра приложения:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Создание экземпляра приложения\n * @description Отвечает за создание и конфигурацию экземпляра приложения\n */\n\nimport type { VNode } from 'preact';\nimport { html } from 'htm/preact';\nimport App from './app';\n\nexport function createApp(): { app: VNode } {\n    const app = html`<${App} />`;\n    return {\n        app\n    };\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте входной файл для клиента ",(0,t.jsx)(n.code,{children:"src/entry.client.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file Входной файл для клиента\n * @description Отвечает за логику взаимодействия на стороне клиента и динамическое обновление\n */\n\nimport { render } from 'preact';\nimport { createApp } from './create-app';\n\n// Создание экземпляра приложения\nconst { app } = createApp();\n\n// Монтирование экземпляра приложения\nrender(app, document.getElementById('app')!);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте файл ",(0,t.jsx)(n.code,{children:"entry.node.ts"})," для конфигурации среды разработки и запуска сервера:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Входной файл для Node.js сервера\n * @description Отвечает за конфигурацию среды разработки и запуск сервера, предоставляя среду выполнения для SSR\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * Конфигурация создателя приложения для среды разработки\n     * @description Создает и конфигурирует экземпляр приложения Rspack для сборки и горячей перезагрузки в среде разработки\n     * @param gez Экземпляр фреймворка Gez, предоставляющий основные функции и интерфейсы конфигурации\n     * @returns Возвращает сконфигурированный экземпляр приложения Rspack с поддержкой HMR и live preview\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // Здесь можно настроить конфигурацию компиляции Rspack\n                }\n            })\n        );\n    },\n\n    /**\n     * Конфигурация и запуск HTTP-сервера\n     * @description Создает экземпляр HTTP-сервера, интегрирует middleware Gez для обработки SSR-запросов\n     * @param gez Экземпляр фреймворка Gez, предоставляющий middleware и функции рендеринга\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Использование middleware Gez для обработки запросов\n            gez.middleware(req, res, async () => {\n                // Выполнение серверного рендеринга\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('Сервер запущен: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Этот файл является входным для конфигурации среды разработки и запуска сервера. Он содержит две основные функции:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"devApp"}),": отвечает за создание и конфигурацию экземпляра приложения Rspack для среды разработки с поддержкой горячей перезагрузки и live preview. Здесь используется ",(0,t.jsx)(n.code,{children:"createRspackHtmlApp"})," для создания экземпляра приложения Rspack, предназначенного для Preact+HTM."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server"}),": отвечает за создание и конфигурацию HTTP-сервера, интегрируя middleware Gez для обработки SSR-запросов."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Создайте входной файл для серверного рендеринга ",(0,t.jsx)(n.code,{children:"src/entry.server.ts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file Входной файл для серверного рендеринга\n * @description Отвечает за процесс серверного рендеринга, генерацию HTML и инъекцию ресурсов\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type { VNode } from 'preact';\nimport { render } from 'preact-render-to-string';\nimport { createApp } from './create-app';\n\nexport default async (rc: RenderContext) => {\n    // Создание экземпляра приложения\n    const { app } = createApp();\n\n    // Использование renderToString из Preact для генерации содержимого страницы\n    const html = render(app);\n\n    // Фиксация сбора зависимостей, чтобы убедиться, что все необходимые ресурсы загружены\n    await rc.commit();\n\n    // Генерация полной HTML-структуры\n    rc.html = `<!DOCTYPE html>\n<html lang=\"ru\">\n<head>\n    ${rc.preload()}\n    <title>Быстрый старт с Gez</title>\n    ${rc.css()}\n</head>\n<body>\n    <div id=\"app\">${html}</div>\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"запуск-проекта",children:["Запуск проекта",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#запуск-проекта",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"После завершения настройки файлов вы можете использовать следующие команды для запуска проекта:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Режим разработки:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Сборка проекта:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Запуск в production-режиме:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Теперь вы успешно создали SSR-приложение на основе Gez с использованием Preact и HTM! Перейдите по адресу ",(0,t.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"}),", чтобы увидеть результат."]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["ru%2Fguide%2Fframeworks%2Fpreact-htm.md"]={toc:[{text:"Структура проекта",id:"структура-проекта",depth:2},{text:"Конфигурация проекта",id:"конфигурация-проекта",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"Структура исходного кода",id:"структура-исходного-кода",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"Запуск проекта",id:"запуск-проекта",depth:2}],title:"Preact+HTM",headingTitle:"Preact+HTM",frontmatter:{titleSuffix:"Пример SSR-приложения на Gez с использованием Preact+HTM",description:"Пошаговое руководство по созданию SSR-приложения на основе Gez с использованием Preact и HTM. Включает инициализацию проекта, настройку Preact и конфигурацию входных файлов.",head:[["meta",{property:"keywords",content:"Gez, Preact, HTM, SSR-приложение, конфигурация TypeScript, инициализация проекта, серверный рендеринг, клиентское взаимодействие"}]]}}}}]);