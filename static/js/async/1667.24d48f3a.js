"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1667"],{7011:function(e,n,r){r.r(n),r.d(n,{default:()=>c});var s=r(1549),d=r(6603);function a(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",h2:"h2",h3:"h3",pre:"pre",code:"code",h4:"h4"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"rendercontext",children:["RenderContext",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rendercontext",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"RenderContext es la clase principal del framework Gez, responsable de gestionar el ciclo de vida completo del renderizado del lado del servidor (SSR). Proporciona un conjunto completo de API para manejar el contexto de renderizado, la gesti\xf3n de recursos, la sincronizaci\xf3n de estado y otras tareas clave:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Control de renderizado"}),": Gestiona el flujo de renderizado del lado del servidor, soportando escenarios como renderizado de m\xfaltiples entradas y renderizado condicional."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Gesti\xf3n de recursos"}),": Recopila e inyecta inteligentemente recursos est\xe1ticos como JS, CSS, optimizando el rendimiento de carga."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sincronizaci\xf3n de estado"}),": Maneja la serializaci\xf3n del estado del servidor, asegurando una correcta hidrataci\xf3n (hydration) en el cliente."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Control de rutas"}),": Soporta funciones avanzadas como redirecciones del lado del servidor y configuraci\xf3n de c\xf3digos de estado."]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"definiciones-de-tipos",children:["Definiciones de tipos",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#definiciones-de-tipos",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"serverrenderhandle",children:["ServerRenderHandle",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#serverrenderhandle",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Definici\xf3n del tipo de funci\xf3n de manejo de renderizado del lado del servidor."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ServerRenderHandle = (rc: RenderContext) => Promise<void> | void;\n"})}),"\n",(0,s.jsx)(n.p,{children:"La funci\xf3n de manejo de renderizado del lado del servidor es una funci\xf3n as\xedncrona o s\xedncrona que recibe una instancia de RenderContext como par\xe1metro, utilizada para manejar la l\xf3gica de renderizado del lado del servidor."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// 1. Funci\xf3n as\xedncrona\nexport default async (rc: RenderContext) => {\n  const app = createApp();\n  const html = await renderToString(app);\n  rc.html = html;\n};\n\n// 2. Funci\xf3n s\xedncrona\nexport const simple = (rc: RenderContext) => {\n  rc.html = '<h1>Hello World</h1>';\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"renderfiles",children:["RenderFiles",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renderfiles",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Definici\xf3n del tipo de lista de archivos de recursos recopilados durante el proceso de renderizado."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface RenderFiles {\n  js: string[];\n  css: string[];\n  modulepreload: string[];\n  resources: string[];\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"js"}),": Lista de archivos JavaScript"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"css"}),": Lista de archivos de hojas de estilo"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"modulepreload"}),": Lista de m\xf3dulos ESM que necesitan precarga"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"resources"}),": Lista de otros archivos de recursos (im\xe1genes, fuentes, etc.)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Ejemplo de lista de archivos de recursos\nrc.files = {\n  js: [\n    '/assets/entry-client.js',\n    '/assets/vendor.js'\n  ],\n  css: [\n    '/assets/main.css',\n    '/assets/vendor.css'\n  ],\n  modulepreload: [\n    '/assets/Home.js',\n    '/assets/About.js'\n  ],\n  resources: [\n    '/assets/logo.png',\n    '/assets/font.woff2'\n  ]\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"importmapmode",children:["ImportmapMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmapmode",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Define el modo de generaci\xf3n del importmap."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ImportmapMode = 'inline' | 'js';\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inline"}),": Incluye el contenido del importmap directamente en el HTML, adecuado para:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Reducir el n\xfamero de solicitudes HTTP"}),"\n",(0,s.jsx)(n.li,{children:"Cuando el contenido del importmap es peque\xf1o"}),"\n",(0,s.jsx)(n.li,{children:"Cuando se requiere un alto rendimiento en la carga inicial"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"js"}),": Genera el contenido del importmap como un archivo JS independiente, adecuado para:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cuando el contenido del importmap es grande"}),"\n",(0,s.jsx)(n.li,{children:"Cuando se necesita aprovechar el mecanismo de cach\xe9 del navegador"}),"\n",(0,s.jsx)(n.li,{children:"Cuando m\xfaltiples p\xe1ginas comparten el mismo importmap"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Clase de contexto de renderizado, responsable de la gesti\xf3n de recursos y la generaci\xf3n de HTML durante el proceso de renderizado del lado del servidor (SSR)."}),"\n",(0,s.jsxs)(n.h2,{id:"opciones-de-instancia",children:["Opciones de instancia",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#opciones-de-instancia",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Define las opciones de configuraci\xf3n del contexto de renderizado."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface RenderContextOptions {\n  base?: string\n  entryName?: string\n  params?: Record<string, any>\n  importmapMode?: ImportmapMode\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"base",children:["base",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#base",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Ruta base para los recursos est\xe1ticos."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Todos los recursos est\xe1ticos (JS, CSS, im\xe1genes, etc.) se cargar\xe1n basados en esta ruta"}),"\n",(0,s.jsx)(n.li,{children:"Soporta configuraci\xf3n din\xe1mica en tiempo de ejecuci\xf3n, sin necesidad de reconstruir"}),"\n",(0,s.jsx)(n.li,{children:"Com\xfanmente utilizado en sitios multiling\xfces, aplicaciones de microfrontends, etc."}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"entryname",children:["entryName",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryname",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"'default'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Nombre de la funci\xf3n de entrada para el renderizado del lado del servidor. Se utiliza para especificar la funci\xf3n de entrada a usar durante el renderizado del lado del servidor, cuando un m\xf3dulo exporta m\xfaltiples funciones de renderizado."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"export const mobile = async (rc: RenderContext) => {\n  // L\xf3gica de renderizado para m\xf3viles\n};\n\nexport const desktop = async (rc: RenderContext) => {\n  // L\xf3gica de renderizado para escritorio\n};\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"params",children:["params",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#params",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"Record<string, any>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"{}"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Par\xe1metros de renderizado. Se pueden pasar par\xe1metros de cualquier tipo a la funci\xf3n de renderizado, com\xfanmente utilizados para pasar informaci\xf3n de la solicitud (URL, par\xe1metros de consulta, etc.)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const rc = await gez.render({\n  params: {\n    url: req.url,\n    lang: 'zh-CN',\n    theme: 'dark'\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"importmapmode-1",children:["importmapMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmapmode-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"'inline' | 'js'"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"'inline'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Modo de generaci\xf3n del mapa de importaci\xf3n (Import Map):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"inline"}),": Incluye el contenido del importmap directamente en el HTML"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"js"}),": Genera el contenido del importmap como un archivo JS independiente"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"propiedades-de-instancia",children:["Propiedades de instancia",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#propiedades-de-instancia",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"gez",children:["gez",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gez",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"Gez"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solo lectura"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Referencia a la instancia de Gez. Se utiliza para acceder a las funciones principales y la configuraci\xf3n del framework."}),"\n",(0,s.jsxs)(n.h3,{id:"redirect",children:["redirect",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redirect",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string | null"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Direcci\xf3n de redirecci\xf3n. Si se establece, el servidor puede realizar una redirecci\xf3n HTTP basada en este valor, com\xfanmente utilizado en escenarios de verificaci\xf3n de inicio de sesi\xf3n, control de permisos, etc."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// Ejemplo de verificaci\xf3n de inicio de sesi\xf3n\nexport default async (rc: RenderContext) => {\n  if (!isLoggedIn()) {\n    rc.redirect = '/login';\n    rc.status = 302;\n    return;\n  }\n  // Continuar con el renderizado de la p\xe1gina...\n};\n\n// Ejemplo de control de permisos\nexport default async (rc: RenderContext) => {\n  if (!hasPermission()) {\n    rc.redirect = '/403';\n    rc.status = 403;\n    return;\n  }\n  // Continuar con el renderizado de la p\xe1gina...\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"status",children:["status",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#status",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"number | null"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"C\xf3digo de estado HTTP de respuesta. Se puede establecer cualquier c\xf3digo de estado HTTP v\xe1lido, com\xfanmente utilizado en escenarios de manejo de errores, redirecciones, etc."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// Ejemplo de manejo de error 404\nexport default async (rc: RenderContext) => {\n  const page = await findPage(rc.params.url);\n  if (!page) {\n    rc.status = 404;\n    // Renderizar p\xe1gina 404...\n    return;\n  }\n  // Continuar con el renderizado de la p\xe1gina...\n};\n\n// Ejemplo de redirecci\xf3n temporal\nexport default async (rc: RenderContext) => {\n  if (needMaintenance()) {\n    rc.redirect = '/maintenance';\n    rc.status = 307; // Redirecci\xf3n temporal, manteniendo el m\xe9todo de solicitud\n    return;\n  }\n  // Continuar con el renderizado de la p\xe1gina...\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"html",children:["html",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Contenido HTML. Se utiliza para establecer y obtener el contenido HTML final generado, al establecerlo se manejan autom\xe1ticamente los marcadores de posici\xf3n de la ruta base."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// Uso b\xe1sico\nexport default async (rc: RenderContext) => {\n  // Establecer contenido HTML\n  rc.html = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        ${rc.preload()}\n        ${rc.css()}\n      </head>\n      <body>\n        <div id=\"app\">Hello World</div>\n        ${rc.importmap()}\n        ${rc.moduleEntry()}\n        ${rc.modulePreload()}\n      </body>\n    </html>\n  `;\n};\n\n// Ruta base din\xe1mica\nconst rc = await gez.render({\n  base: '/app',  // Establecer ruta base\n  params: { url: req.url }\n});\n\n// Los marcadores de posici\xf3n en el HTML se reemplazar\xe1n autom\xe1ticamente:\n// [[[___GEZ_DYNAMIC_BASE___]]]/your-app-name/css/style.css\n// Se reemplaza por:\n// /app/your-app-name/css/style.css\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"base-1",children:["base",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#base-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solo lectura"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Ruta base para los recursos est\xe1ticos. Todos los recursos est\xe1ticos (JS, CSS, im\xe1genes, etc.) se cargar\xe1n basados en esta ruta, soporta configuraci\xf3n din\xe1mica en tiempo de ejecuci\xf3n."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Uso b\xe1sico\nconst rc = await gez.render({\n  base: '/gez',  // Establecer ruta base\n  params: { url: req.url }\n});\n\n// Ejemplo de sitio multiling\xfce\nconst rc = await gez.render({\n  base: '/cn',  // Sitio en chino\n  params: { lang: 'zh-CN' }\n});\n\n// Ejemplo de aplicaci\xf3n de microfrontends\nconst rc = await gez.render({\n  base: '/app1',  // Subaplicaci\xf3n 1\n  params: { appId: 1 }\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"entryname-1",children:["entryName",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryname-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solo lectura"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"'default'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Nombre de la funci\xf3n de entrada para el renderizado del lado del servidor. Se utiliza para seleccionar la funci\xf3n de renderizado a usar desde entry.server.ts."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// Funci\xf3n de entrada por defecto\nexport default async (rc: RenderContext) => {\n  // L\xf3gica de renderizado por defecto\n};\n\n// M\xfaltiples funciones de entrada\nexport const mobile = async (rc: RenderContext) => {\n  // L\xf3gica de renderizado para m\xf3viles\n};\n\nexport const desktop = async (rc: RenderContext) => {\n  // L\xf3gica de renderizado para escritorio\n};\n\n// Seleccionar funci\xf3n de entrada basada en el tipo de dispositivo\nconst rc = await gez.render({\n  entryName: isMobile ? 'mobile' : 'desktop',\n  params: { url: req.url }\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"params-1",children:["params",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#params-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"Record<string, any>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Solo lectura"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"{}"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Par\xe1metros de renderizado. Se pueden pasar y acceder a par\xe1metros durante el proceso de renderizado del lado del servidor, com\xfanmente utilizados para pasar informaci\xf3n de la solicitud, configuraci\xf3n de la p\xe1gina, etc."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Uso b\xe1sico - Pasar URL y configuraci\xf3n de idioma\nconst rc = await gez.render({\n  params: {\n    url: req.url,\n    lang: 'zh-CN'\n  }\n});\n\n// Configuraci\xf3n de p\xe1gina - Establecer tema y dise\xf1o\nconst rc = await gez.render({\n  params: {\n    theme: 'dark',\n    layout: 'sidebar'\n  }\n});\n\n// Configuraci\xf3n de entorno - Inyectar URL base de la API\nconst rc = await gez.render({\n  params: {\n    apiBaseUrl: process.env.API_BASE_URL,\n    version: '1.0.0'\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"importmetaset",children:["importMetaSet",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmetaset",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"Set<ImportMeta>"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Conjunto de recopilaci\xf3n de dependencias de m\xf3dulos. Durante el proceso de renderizado de componentes, se rastrean y registran autom\xe1ticamente las dependencias de m\xf3dulos, solo se recopilan los recursos realmente utilizados durante el renderizado de la p\xe1gina actual."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Uso b\xe1sico\nconst renderToString = (app: any, context: { importMetaSet: Set<ImportMeta> }) => {\n  // Durante el proceso de renderizado, se recopilan autom\xe1ticamente las dependencias de m\xf3dulos\n  // El framework llamar\xe1 autom\xe1ticamente a context.importMetaSet.add(import.meta) durante el renderizado de componentes\n  // Los desarrolladores no necesitan manejar manualmente la recopilaci\xf3n de dependencias\n  return '<div id=\"app\">Hello World</div>';\n};\n\n// Ejemplo de uso\nconst app = createApp();\nconst html = await renderToString(app, {\n  importMetaSet: rc.importMetaSet\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"files",children:["files",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#files",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"RenderFiles"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Lista de archivos de recursos:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"js: Lista de archivos JavaScript"}),"\n",(0,s.jsx)(n.li,{children:"css: Lista de archivos de hojas de estilo"}),"\n",(0,s.jsx)(n.li,{children:"modulepreload: Lista de m\xf3dulos ESM que necesitan precarga"}),"\n",(0,s.jsx)(n.li,{children:"resources: Lista de otros archivos de recursos (im\xe1genes, fuentes, etc.)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Recopilaci\xf3n de recursos\nawait rc.commit();\n\n// Inyecci\xf3n de recursos\nrc.html = `\n  <!DOCTYPE html>\n  <html>\n  <head>\n    \x3c!-- Precargar recursos --\x3e\n    ${rc.preload()}\n    \x3c!-- Inyectar hojas de estilo --\x3e\n    ${rc.css()}\n  </head>\n  <body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n  </body>\n  </html>\n`;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"importmapmode-2",children:["importmapMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmapmode-2",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tipo"}),": ",(0,s.jsx)(n.code,{children:"'inline' | 'js'"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Valor por defecto"}),": ",(0,s.jsx)(n.code,{children:"'inline'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Modo de generaci\xf3n del mapa de importaci\xf3n:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"inline"}),": Incluye el contenido del importmap directamente en el HTML"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"js"}),": Genera el contenido del importmap como un archivo JS independiente"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"m\\xe9todos-de-instancia",children:["M\xe9todos de instancia",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#m\\xe9todos-de-instancia",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"serialize",children:["serialize()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#serialize",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Par\xe1metros"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"input: any"})," - Datos a serializar"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options?: serialize.SerializeJSOptions"})," - Opciones de serializaci\xf3n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Serializa un objeto JavaScript a una cadena. Se utiliza para serializar datos de estado durante el proceso de renderizado del lado del servidor, asegurando que los datos se puedan incrustar de manera segura en el HTML."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const state = {\n  user: { id: 1, name: 'Alice' },\n  timestamp: new Date()\n};\n\nrc.html = `\n  <script>\n    window.__INITIAL_STATE__ = ${rc.serialize(state)};\n  <\/script>\n`;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"state",children:["state()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#state",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Par\xe1metros"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"varName: string"})," - Nombre de la variable"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data: Record<string, any>"})," - Datos de estado"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Serializa e inyecta datos de estado en el HTML. Utiliza m\xe9todos de serializaci\xf3n seguros para manejar datos, soportando estructuras de datos complejas."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const userInfo = {\n  id: 1,\n  name: 'John',\n  roles: ['admin']\n};\n\nrc.html = `\n  <head>\n    ${rc.state('__USER__', userInfo)}\n  </head>\n`;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"commit",children:["commit()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#commit",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Confirma la recopilaci\xf3n de dependencias y actualiza la lista de recursos. Recopila todos los m\xf3dulos utilizados desde importMetaSet, bas\xe1ndose en el archivo manifest para resolver los recursos espec\xedficos de cada m\xf3dulo."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Renderizar y confirmar dependencias\nconst html = await renderToString(app, {\n  importMetaSet: rc.importMetaSet\n});\n\n// Confirmar recopilaci\xf3n de dependencias\nawait rc.commit();\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"preload",children:["preload()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#preload",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Genera etiquetas de precarga de recursos. Se utiliza para precargar recursos CSS y JavaScript, soporta configuraci\xf3n de prioridades, maneja autom\xe1ticamente la ruta base."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"rc.html = `\n  <!DOCTYPE html>\n  <html>\n  <head>\n    ${rc.preload()}\n    ${rc.css()}  \x3c!-- Inyectar hojas de estilo --\x3e\n  </head>\n  <body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n  </body>\n  </html>\n`;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"css",children:["css()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#css",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Genera etiquetas de hojas de estilo CSS. Inyecta los archivos CSS recopilados, asegurando que las hojas de estilo se carguen en el orden correcto."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"rc.html = `\n  <head>\n    ${rc.css()}  \x3c!-- Inyectar todas las hojas de estilo recopiladas --\x3e\n  </head>\n`;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"importmap",children:["importmap()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmap",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Retorno"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Genera etiquetas de mapa de importaci\xf3n. Genera el mapa de importaci\xf3n en l\xednea o externo seg\xfan la configuraci\xf3n de importmapMode."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"rc.html = `\n  <head>\n    ${rc.importmap()}  \x3c!-- Inyectar mapa de\n"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["es%2Fapi%2Fcore%2Frender-context.md"]={toc:[{text:"Definiciones de tipos",id:"definiciones-de-tipos",depth:2},{text:"ServerRenderHandle",id:"serverrenderhandle",depth:3},{text:"RenderFiles",id:"renderfiles",depth:3},{text:"ImportmapMode",id:"importmapmode",depth:3},{text:"Opciones de instancia",id:"opciones-de-instancia",depth:2},{text:"base",id:"base",depth:4},{text:"entryName",id:"entryname",depth:4},{text:"params",id:"params",depth:4},{text:"importmapMode",id:"importmapmode-1",depth:4},{text:"Propiedades de instancia",id:"propiedades-de-instancia",depth:2},{text:"gez",id:"gez",depth:3},{text:"redirect",id:"redirect",depth:3},{text:"status",id:"status",depth:3},{text:"html",id:"html",depth:3},{text:"base",id:"base-1",depth:3},{text:"entryName",id:"entryname-1",depth:3},{text:"params",id:"params-1",depth:3},{text:"importMetaSet",id:"importmetaset",depth:3},{text:"files",id:"files",depth:3},{text:"importmapMode",id:"importmapmode-2",depth:3},{text:"M\xe9todos de instancia",id:"m\xe9todos-de-instancia",depth:2},{text:"serialize()",id:"serialize",depth:3},{text:"state()",id:"state",depth:3},{text:"commit()",id:"commit",depth:3},{text:"preload()",id:"preload",depth:3},{text:"css()",id:"css",depth:3},{text:"importmap()",id:"importmap",depth:3}],title:"RenderContext",headingTitle:"RenderContext",frontmatter:{titleSuffix:"Referencia de la API de Contexto de Renderizado del Framework Gez",description:"Detalles sobre la clase principal RenderContext del framework Gez, incluyendo control de renderizado, gesti\xf3n de recursos, sincronizaci\xf3n de estado y control de rutas, para ayudar a los desarrolladores a implementar renderizado del lado del servidor (SSR) eficiente.",head:[["meta",{property:"keywords",content:"Gez, RenderContext, SSR, Renderizado del lado del servidor, Contexto de renderizado, Sincronizaci\xf3n de estado, Gesti\xf3n de recursos, Framework de aplicaciones web"}]]}}}}]);