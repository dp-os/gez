"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5145"],{2670:function(e,r,n){n.r(r),n.d(r,{default:()=>l});var s=n(1549),i=n(6603);function h(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",ol:"ol"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"घटक-साझाकरण-से-मूल-मॉड्यूलरिटी-तक-gez-माइक्रो-फ्रंटेंड-फ्रेमवर्क-का-विकास-पथ",children:["घटक साझाकरण से मूल मॉड्यूलरिटी तक: Gez माइक्रो-फ्रंटेंड फ्रेमवर्क का विकास पथ",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#घटक-साझाकरण-से-मूल-मॉड्यूलरिटी-तक-gez-माइक्रो-फ्रंटेंड-फ्रेमवर्क-का-विकास-पथ",children:"#"})]}),"\n",(0,s.jsxs)(r.h2,{id:"परियोजना-पृष्ठभूमि",children:["परियोजना पृष्ठभूमि",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#परियोजना-पृष्ठभूमि",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"पिछले कुछ वर्षों में, माइक्रो-फ्रंटेंड आर्किटेक्चर एक सही रास्ता खोजने की कोशिश कर रहा है। हालांकि, हमने विभिन्न जटिल तकनीकी समाधान देखे हैं, जो एक आदर्श माइक्रो-फ्रंटेंड दुनिया का अनुकरण करने के लिए परतों में लपेटे और कृत्रिम अलगाव का उपयोग करते हैं। इन समाधानों ने भारी प्रदर्शन बोझ लाया है, सरल विकास को जटिल बना दिया है, और मानक प्रक्रियाओं को अस्पष्ट कर दिया है।"}),"\n",(0,s.jsxs)(r.h3,{id:"पारंपरिक-समाधानों-की-सीमाएं",children:["पारंपरिक समाधानों की सीमाएं",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#पारंपरिक-समाधानों-की-सीमाएं",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"माइक्रो-फ्रंटेंड आर्किटेक्चर के अभ्यास में, हमने पारंपरिक समाधानों की कई सीमाओं को गहराई से महसूस किया:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"प्रदर्शन हानि"}),": रनटाइम में निर्भरता इंजेक्शन, JS सैंडबॉक्स प्रॉक्सी, हर ऑपरेशन मूल्यवान प्रदर्शन को खा रहा है"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"नाजुक अलगाव"}),": कृत्रिम रूप से बनाए गए सैंडबॉक्स वातावरण, ब्राउज़र के मूल अलगाव क्षमता तक कभी नहीं पहुंच सकते"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"बिल्ड जटिलता"}),": निर्भरता संबंधों को संभालने के लिए, बिल्ड टूल को संशोधित करना पड़ता है, जिससे सरल परियोजनाएं रखरखाव के लिए मुश्किल हो जाती हैं"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"कस्टमाइजेशन नियम"}),": विशेष तैनाती रणनीतियां, रनटाइम प्रसंस्करण, हर कदम आधुनिक विकास की मानक प्रक्रिया से भटक जाता है"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"पारिस्थितिकी सीमाएं"}),": फ्रेमवर्क युग्मन, कस्टम API, तकनीकी चयन को विशिष्ट पारिस्थितिकी में बांध देता है"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"2019 में हमारे एक एंटरप्राइज़-स्तरीय परियोजना में ये समस्याएं विशेष रूप से स्पष्ट थीं। उस समय, एक बड़े उत्पाद को दस से अधिक स्वतंत्र व्यावसायिक उप-प्रणालियों में विभाजित किया गया था, जिन्हें एक सामान्य आधार घटक और व्यावसायिक घटक सेट साझा करना था। शुरू में अपनाया गया npm पैकेज-आधारित घटक साझाकरण समाधान, अभ्यास में गंभीर रखरखाव दक्षता समस्याएं उजागर करता था: जब साझा घटक अपडेट होता था, तो उस घटक पर निर्भर सभी उप-प्रणालियों को पूर्ण बिल्ड और तैनाती प्रक्रिया से गुजरना पड़ता था।"}),"\n",(0,s.jsxs)(r.h2,{id:"तकनीकी-विकास",children:["तकनीकी विकास",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#तकनीकी-विकास",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"v10-रिमोट-घटकों-की-खोज",children:["v1.0: रिमोट घटकों की खोज",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#v10-रिमोट-घटकों-की-खोज",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"घटक साझाकरण की दक्षता समस्या को हल करने के लिए, Gez v1.0 ने HTTP प्रोटोकॉल पर आधारित RemoteView घटक तंत्र पेश किया। यह समाधान रनटाइम में गतिशील अनुरोध के माध्यम से सेवाओं के बीच कोड की ऑन-डिमांड असेंबली को सक्षम करता है, जिससे बिल्ड निर्भरता श्रृंखला की लंबाई की समस्या सफलतापूर्वक हल हो गई। हालांकि, मानकीकृत रनटाइम संचार तंत्र की कमी के कारण, सेवाओं के बीच स्थिति समकालिकरण और घटना संचार में अभी भी दक्षता अड़चनें थीं।"}),"\n",(0,s.jsxs)(r.h3,{id:"v20-मॉड्यूल-फेडरेशन-प्रयास",children:["v2.0: मॉड्यूल फेडरेशन प्रयास",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#v20-मॉड्यूल-फेडरेशन-प्रयास",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["v2.0 संस्करण में, हमने ",(0,s.jsx)(r.a,{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer",children:"Webpack 5.0"})," के ",(0,s.jsx)(r.a,{href:"https://webpack.js.org/concepts/module-federation/",target:"_blank",rel:"noopener noreferrer",children:"मॉड्यूल फेडरेशन (Module Federation)"})," तकनीक को अपनाया। यह तकनीक एकीकृत मॉड्यूल लोडिंग तंत्र और रनटाइम कंटेनर के माध्यम से, सेवाओं के बीच सहयोग दक्षता को महत्वपूर्ण रूप से बढ़ाती है। लेकिन बड़े पैमाने पर अभ्यास में, मॉड्यूल फेडरेशन के बंद कार्यान्वयन तंत्र ने नई चुनौतियां लाईं: सटीक निर्भरता संस्करण प्रबंधन को प्राप्त करना मुश्किल हो गया, विशेष रूप से कई सेवाओं के साझा निर्भरताओं को एकीकृत करते समय, संस्करण संघर्ष और रनटाइम अपवाद अक्सर सामने आते थे।"]}),"\n",(0,s.jsxs)(r.h2,{id:"esm-नए-युग-को-अपनाना",children:["ESM नए युग को अपनाना",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#esm-नए-युग-को-अपनाना",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"v3.0 संस्करण की योजना बनाते समय, हमने फ्रंटेंड पारिस्थितिकी के विकास प्रवृत्तियों का गहन अवलोकन किया और पाया कि ब्राउज़र की मूल क्षमताओं में प्रगति ने माइक्रो-फ्रंटेंड आर्किटेक्चर के लिए नई संभावनाएं लाई हैं:"}),"\n",(0,s.jsxs)(r.h3,{id:"मानकीकृत-मॉड्यूल-प्रणाली",children:["मानकीकृत मॉड्यूल प्रणाली",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#मानकीकृत-मॉड्यूल-प्रणाली",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",target:"_blank",rel:"noopener noreferrer",children:"ES Modules (ESM)"})," के लिए प्रमुख ब्राउज़रों के समर्थन और ",(0,s.jsx)(r.a,{href:"https://github.com/WICG/import-maps",target:"_blank",rel:"noopener noreferrer",children:"Import Maps"})," मानक के परिपक्व होने के साथ, फ्रंटेंड विकास ने वास्तविक मॉड्यूलरिटी युग में प्रवेश किया है। ",(0,s.jsx)(r.a,{href:"https://caniuse.com/?search=importmap",target:"_blank",rel:"noopener noreferrer",children:"Can I Use"})," के आंकड़ों के अनुसार, वर्तमान में प्रमुख ब्राउज़र (Chrome >= 89, Edge >= 89, Firefox >= 108, Safari >= 16.4) ESM के मूल समर्थन दर 93.5% तक पहुंच गया है, जो हमें निम्नलिखित लाभ प्रदान करता है:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"निर्भरता प्रबंधन मानकीकरण"}),": Import Maps ब्राउज़र स्तर पर मॉड्यूल निर्भरता को हल करने की क्षमता प्रदान करता है, जटिल रनटाइम इंजेक्शन की आवश्यकता नहीं है"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"संसाधन लोडिंग अनुकूलन"}),": ब्राउज़र के मूल मॉड्यूल कैशिंग तंत्र, संसाधन लोडिंग दक्षता को महत्वपूर्ण रूप से बढ़ाता है"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"बिल्ड प्रक्रिया सरलीकरण"}),": ESM-आधारित विकास मोड, विकास और उत्पादन वातावरण की बिल्ड प्रक्रियाओं को अधिक सुसंगत बनाता है"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"साथ ही, संगतता मोड समर्थन (Chrome >= 87, Edge >= 88, Firefox >= 78, Safari >= 14) के माध्यम से, हम ब्राउज़र कवरेज को 96.81% तक और बढ़ा सकते हैं, जो हमें उच्च प्रदर्शन बनाए रखते हुए, पुराने ब्राउज़रों के समर्थन को बलिदान किए बिना करने की अनुमति देता है।"}),"\n",(0,s.jsxs)(r.h3,{id:"प्रदर्शन-और-अलगाव-में-सफलता",children:["प्रदर्शन और अलगाव में सफलता",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रदर्शन-और-अलगाव-में-सफलता",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"मूल मॉड्यूल प्रणाली न केवल मानकीकरण लाती है, बल्कि प्रदर्शन और अलगाव में गुणात्मक सुधार भी लाती है:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"शून्य रनटाइम ओवरहेड"}),": पारंपरिक माइक्रो-फ्रंटेंड समाधानों में JavaScript सैंडबॉक्स प्रॉक्सी और रनटाइम इंजेक्शन को अलविदा कह दिया"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"विश्वसनीय अलगाव तंत्र"}),": ESM का सख्त मॉड्यूल स्कोप स्वाभाविक रूप से सबसे विश्वसनीय अलगाव क्षमता प्रदान करता है"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"सटीक निर्भरता प्रबंधन"}),": स्थैतिक आयात विश्लेषण निर्भरता संबंधों को अधिक स्पष्ट बनाता है, संस्करण नियंत्रण अधिक सटीक हो जाता है"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"बिल्ड-टूल-का-चयन",children:["बिल्ड टूल का चयन",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#बिल्ड-टूल-का-चयन",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"तकनीकी समाधान के कार्यान्वयन प्रक्रिया में, बिल्ड टूल का चयन एक महत्वपूर्ण निर्णय बिंदु है। लगभग एक वर्ष के तकनीकी शोध और अभ्यास के बाद, हमारा चयन निम्नलिखित विकास से गुजरा:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Vite अन्वेषण"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"लाभ: ESM-आधारित विकास सर्वर, अत्यधिक विकास अनुभव प्रदान करता है"}),"\n",(0,s.jsx)(r.li,{children:"चुनौती: विकास और उत्पादन वातावरण की बिल्ड अंतर, कुछ अनिश्चितता लाती है"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsxs)(r.strong,{children:[(0,s.jsx)(r.a,{href:"https://www.rspack.dev/",target:"_blank",rel:"noopener noreferrer",children:"Rspack"})," स्थापना"]})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["प्रदर्शन लाभ: ",(0,s.jsx)(r.a,{href:"https://www.rust-lang.org/",target:"_blank",rel:"noopener noreferrer",children:"Rust"})," पर आधारित उच्च प्रदर्शन संकलन, बिल्ड गति को महत्वपूर्ण रूप से बढ़ाता है"]}),"\n",(0,s.jsx)(r.li,{children:"पारिस्थितिकी समर्थन: Webpack पारिस्थितिकी के साथ उच्च संगतता, माइग्रेशन लागत को कम करता है"}),"\n",(0,s.jsx)(r.li,{children:"ESM समर्थन: Rslib परियोजना के अभ्यास के माध्यम से, ESM बिल्डिंग में इसकी विश्वसनीयता सत्यापित की गई"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"इस निर्णय ने हमें विकास अनुभव बनाए रखते हुए, अधिक स्थिर उत्पादन वातावरण समर्थन प्राप्त करने की अनुमति दी। ESM और Rspack के संयोजन पर आधारित, हमने अंततः एक उच्च प्रदर्शन, कम आक्रामक माइक्रो-फ्रंटेंड समाधान का निर्माण किया।"}),"\n",(0,s.jsxs)(r.h2,{id:"भविष्य-की-संभावनाएं",children:["भविष्य की संभावनाएं",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#भविष्य-की-संभावनाएं",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"भविष्य की विकास योजनाओं में, Gez फ्रेमवर्क निम्नलिखित तीन दिशाओं पर ध्यान केंद्रित करेगा:"}),"\n",(0,s.jsxs)(r.h3,{id:"import-maps-गहन-अनुकूलन",children:["Import Maps गहन अनुकूलन",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#import-maps-गहन-अनुकूलन",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"गतिशील निर्भरता प्रबंधन"}),": रनटाइम निर्भरता संस्करणों का बुद्धिमान शेड्यूलिंग, बहु-एप्लिकेशन निर्भरता संघर्ष को हल करना"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"प्रीलोड रणनीति"}),": रूटिंग विश्लेषण पर आधारित बुद्धिमान प्रीलोडिंग, संसाधन लोडिंग दक्षता बढ़ाना"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"बिल्ड अनुकूलन"}),": इष्टतम Import Maps कॉन्फ़िगरेशन का स्वचालित जनरेशन, डेवलपर्स के मैन्युअल कॉन्फ़िगरेशन लागत को कम करना"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"फ्रेमवर्क-अज्ञेय-रूटिंग-समाधान",children:["फ्रेमवर्क-अज्ञेय रूटिंग समाधान",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#फ्रेमवर्क-अज्ञेय-रूटिंग-समाधान",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"एकीकृत रूटिंग एब्स्ट्रक्शन"}),": फ्रेमवर्क-अज्ञेय रूटिंग इंटरफ़ेस डिज़ाइन, Vue, React जैसे प्रमुख फ्रेमवर्क का समर्थन"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"माइक्रो-एप्लिकेशन रूटिंग"}),": एप्लिकेशनों के बीच रूटिंग लिंकेज, URL और एप्लिकेशन स्थिति की स्थिरता बनाए रखना"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"रूटिंग मिडलवेयर"}),": विस्तार योग्य मिडलवेयर तंत्र, अनुमति नियंत्रण, पृष्ठ संक्रमण जैसी सुविधाओं का समर्थन"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"क्रॉस-फ्रेमवर्क-संचार-सर्वोत्तम-प्रथाएं",children:["क्रॉस-फ्रेमवर्क संचार सर्वोत्तम प्रथाएं",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#क्रॉस-फ्रेमवर्क-संचार-सर्वोत्तम-प्रथाएं",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"उदाहरण एप्लिकेशन"}),": Vue, React, Preact जैसे प्रमुख फ्रेमवर्क को कवर करने वाले पूर्ण क्रॉस-फ्रेमवर्क संचार उदाहरण प्रदान करना"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"स्थिति समकालिकरण"}),": ESM-आधारित हल्के-वजन स्थिति साझाकरण समाधान"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"घटना बस"}),": मानकीकृत घटना संचार तंत्र, एप्लिकेशनों के बीच डिकपल्ड संचार का समर्थन"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"इन अनुकूलन और विस्त"})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["hi%2Fblog%2Fbirth-of-gez.md"]={toc:[{text:"परियोजना पृष्ठभूमि",id:"परियोजना-पृष्ठभूमि",depth:2},{text:"पारंपरिक समाधानों की सीमाएं",id:"पारंपरिक-समाधानों-की-सीमाएं",depth:3},{text:"तकनीकी विकास",id:"तकनीकी-विकास",depth:2},{text:"v1.0: रिमोट घटकों की खोज",id:"v10-रिमोट-घटकों-की-खोज",depth:3},{text:"v2.0: मॉड्यूल फेडरेशन प्रयास",id:"v20-मॉड्यूल-फेडरेशन-प्रयास",depth:3},{text:"ESM नए युग को अपनाना",id:"esm-नए-युग-को-अपनाना",depth:2},{text:"मानकीकृत मॉड्यूल प्रणाली",id:"मानकीकृत-मॉड्यूल-प्रणाली",depth:3},{text:"प्रदर्शन और अलगाव में सफलता",id:"प्रदर्शन-और-अलगाव-में-सफलता",depth:3},{text:"बिल्ड टूल का चयन",id:"बिल्ड-टूल-का-चयन",depth:3},{text:"भविष्य की संभावनाएं",id:"भविष्य-की-संभावनाएं",depth:2},{text:"Import Maps गहन अनुकूलन",id:"import-maps-गहन-अनुकूलन",depth:3},{text:"फ्रेमवर्क-अज्ञेय रूटिंग समाधान",id:"फ्रेमवर्क-अज्ञेय-रूटिंग-समाधान",depth:3},{text:"क्रॉस-फ्रेमवर्क संचार सर्वोत्तम प्रथाएं",id:"क्रॉस-फ्रेमवर्क-संचार-सर्वोत्तम-प्रथाएं",depth:3}],title:"घटक साझाकरण से मूल मॉड्यूलरिटी तक: Gez माइक्रो-फ्रंटेंड फ्रेमवर्क का विकास पथ",headingTitle:"घटक साझाकरण से मूल मॉड्यूलरिटी तक: Gez माइक्रो-फ्रंटेंड फ्रेमवर्क का विकास पथ",frontmatter:{titleSuffix:"माइक्रो-फ्रंटेंड की चुनौतियों से ESM नवाचार तक: Gez फ्रेमवर्क का विकास पथ",description:"Gez फ्रेमवर्क के पारंपरिक माइक्रो-फ्रंटेंड आर्किटेक्चर की चुनौतियों से ESM-आधारित नवाचार तक के विकास पर गहन चर्चा, प्रदर्शन अनुकूलन, निर्भरता प्रबंधन और बिल्ड टूल चयन जैसे क्षेत्रों में तकनीकी अनुभव साझा करना।",head:[["meta",{property:"keywords",content:"Gez, माइक्रो-फ्रंटेंड फ्रेमवर्क, ESM, Import Maps, Rspack, मॉड्यूल फेडरेशन, निर्भरता प्रबंधन, प्रदर्शन अनुकूलन, तकनीकी विकास, सर्वर-साइड रेंडरिंग"}]],sidebar:!1}}}}]);