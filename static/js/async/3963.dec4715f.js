"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3963"],{1102:function(e,n,t){t.r(n),t.d(n,{default:()=>c});var r=t(1549),s=t(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"html",children:["HTML",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"यह ट्यूटोरियल आपको Gez पर आधारित एक HTML SSR एप्लिकेशन को शुरू से बनाने में मदद करेगा। हम एक पूर्ण उदाहरण के माध्यम से दिखाएंगे कि Gez फ्रेमवर्क का उपयोग करके सर्वर-साइड रेंडरिंग एप्लिकेशन कैसे बनाया जाता है।"}),"\n",(0,r.jsxs)(n.h2,{id:"प्रोजेक्ट-संरचना",children:["प्रोजेक्ट संरचना",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-संरचना",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"सबसे पहले, प्रोजेक्ट की मूल संरचना को समझते हैं:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # प्रोजेक्ट कॉन्फ़िग फ़ाइल, डिपेंडेंसी और स्क्रिप्ट कमांड को परिभाषित करती है\n├── tsconfig.json        # TypeScript कॉन्फ़िग फ़ाइल, कंपाइल विकल्प सेट करती है\n└── src                  # सोर्स कोड डायरेक्टरी\n    ├── app.ts           # मुख्य एप्लिकेशन कंपोनेंट, पेज संरचना और इंटरैक्शन लॉजिक को परिभाषित करता है\n    ├── create-app.ts    # एप्लिकेशन इंस्टेंस क्रिएशन फैक्टरी, एप्लिकेशन को इनिशियलाइज़ करने के लिए जिम्मेदार\n    ├── entry.client.ts  # क्लाइंट-साइड एंट्री फ़ाइल, ब्राउज़र-साइड रेंडरिंग को हैंडल करती है\n    ├── entry.node.ts    # Node.js सर्वर एंट्री फ़ाइल, डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार\n    └── entry.server.ts  # सर्वर-साइड एंट्री फ़ाइल, SSR रेंडरिंग लॉजिक को हैंडल करती है\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"प्रोजेक्ट-कॉन्फ़िगरेशन",children:["प्रोजेक्ट कॉन्फ़िगरेशन",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रोजेक्ट-कॉन्फ़िगरेशन",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाएं, प्रोजेक्ट डिपेंडेंसी और स्क्रिप्ट को कॉन्फ़िगर करें:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"package.json"})," फ़ाइल बनाने के बाद, प्रोजेक्ट डिपेंडेंसी को इंस्टॉल करने की आवश्यकता है। आप निम्नलिखित किसी भी कमांड का उपयोग करके इंस्टॉल कर सकते हैं:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# या\nyarn install\n# या\nnpm install\n"})}),"\n",(0,r.jsx)(n.p,{children:"यह सभी आवश्यक डिपेंडेंसी पैकेज को इंस्टॉल करेगा, जिसमें TypeScript और SSR से संबंधित डिपेंडेंसी शामिल हैं।"}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tsconfig.json"})," फ़ाइल बनाएं, TypeScript कंपाइल विकल्प को कॉन्फ़िगर करें:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"सोर्स-कोड-संरचना",children:["सोर्स कोड संरचना",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#सोर्स-कोड-संरचना",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["मुख्य एप्लिकेशन कंपोनेंट ",(0,r.jsx)(n.code,{children:"src/app.ts"})," बनाएं, पेज संरचना और इंटरैक्शन लॉजिक को इम्प्लीमेंट करें:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file उदाहरण कंपोनेंट\n * @description Gez फ्रेमवर्क की मूल कार्यक्षमता को प्रदर्शित करने के लिए ऑटो-अपडेट समय के साथ एक पेज टाइटल दिखाता है\n */\n\nexport default class App {\n    /**\n     * वर्तमान समय, ISO फॉर्मेट में\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * एप्लिकेशन इंस्टेंस बनाएं\n     * @param {SsrContext} [ssrContext] - सर्वर-साइड कॉन्टेक्स्ट, इम्पोर्ट मेटाडेटा कलेक्शन शामिल है\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // कंस्ट्रक्टर में अतिरिक्त इनिशियलाइज़ेशन की आवश्यकता नहीं है\n    }\n\n    /**\n     * पेज कंटेंट रेंडर करें\n     * @returns {string} पेज HTML संरचना लौटाता है\n     */\n    public render(): string {\n        // सर्वर-साइड एनवायरनमेंट में सही ढंग से इम्पोर्ट मेटाडेटा को कलेक्ट करना सुनिश्चित करें\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">Gez क्विक स्टार्ट</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * क्लाइंट-साइड इनिशियलाइज़ेशन\n     * @throws {Error} जब समय डिस्प्ले एलिमेंट नहीं मिलता है तो एरर थ्रो करता है\n     */\n    public onClient(): void {\n        // समय डिस्प्ले एलिमेंट प्राप्त करें\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('समय डिस्प्ले एलिमेंट नहीं मिला');\n        }\n\n        // टाइमर सेट करें, हर सेकंड समय अपडेट करें\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * सर्वर-साइड इनिशियलाइज़ेशन\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * सर्वर-साइड कॉन्टेक्स्ट इंटरफ़ेस\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * इम्पोर्ट मेटाडेटा कलेक्शन\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"src/create-app.ts"})," फ़ाइल बनाएं, एप्लिकेशन इंस्टेंस बनाने के लिए जिम्मेदार:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file एप्लिकेशन इंस्टेंस क्रिएशन\n * @description एप्लिकेशन इंस्टेंस बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["क्लाइंट-साइड एंट्री फ़ाइल ",(0,r.jsx)(n.code,{children:"src/entry.client.ts"})," बनाएं:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file क्लाइंट-साइड एंट्री फ़ाइल\n * @description क्लाइंट-साइड इंटरैक्शन लॉजिक और डायनामिक अपडेट के लिए जिम्मेदार\n */\n\nimport { createApp } from './create-app';\n\n// एप्लिकेशन इंस्टेंस बनाएं और इनिशियलाइज़ करें\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"entry.node.ts"})," फ़ाइल बनाएं, डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप को कॉन्फ़िगर करें:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js सर्वर एंट्री फ़ाइल\n * @description डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए जिम्मेदार, SSR रनटाइम एनवायरनमेंट प्रदान करता है\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * डेवलपमेंट एनवायरनमेंट के लिए एप्लिकेशन क्रिएटर को कॉन्फ़िगर करें\n     * @description Rspack एप्लिकेशन इंस्टेंस बनाएं और कॉन्फ़िगर करें, डेवलपमेंट एनवायरनमेंट के लिए बिल्ड और हॉट रीलोडिंग सपोर्ट करता है\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, कोर फंक्शनलिटी और कॉन्फ़िगरेशन इंटरफ़ेस प्रदान करता है\n     * @returns कॉन्फ़िगर किया गया Rspack एप्लिकेशन इंस्टेंस लौटाता है, HMR और रियल-टाइम प्रीव्यू सपोर्ट करता है\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // यहां Rspack कंपाइल कॉन्फ़िगरेशन को कस्टमाइज़ करें\n                }\n            })\n        );\n    },\n\n    /**\n     * HTTP सर्वर को कॉन्फ़िगर करें और स्टार्ट करें\n     * @description HTTP सर्वर इंस्टेंस बनाएं, Gez मिडलवेयर को इंटीग्रेट करें, SSR रिक्वेस्ट को हैंडल करें\n     * @param gez Gez फ्रेमवर्क इंस्टेंस, मिडलवेयर और रेंडरिंग फंक्शनलिटी प्रदान करता है\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Gez मिडलवेयर का उपयोग करके रिक्वेस्ट को हैंडल करें\n            gez.middleware(req, res, async () => {\n                // सर्वर-साइड रेंडरिंग करें\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('सर्वर शुरू: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(n.p,{children:"यह फ़ाइल डेवलपमेंट एनवायरनमेंट कॉन्फ़िगरेशन और सर्वर स्टार्टअप के लिए एंट्री फ़ाइल है, जिसमें दो मुख्य फंक्शनलिटी शामिल हैं:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"devApp"})," फ़ंक्शन: डेवलपमेंट एनवायरनमेंट के लिए Rspack एप्लिकेशन इंस्टेंस बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, हॉट रीलोडिंग और रियल-टाइम प्रीव्यू फंक्शनलिटी को सपोर्ट करता है।"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server"})," फ़ंक्शन: HTTP सर्वर बनाने और कॉन्फ़िगर करने के लिए जिम्मेदार है, Gez मिडलवेयर को इंटीग्रेट करके SSR रिक्वेस्ट को हैंडल करता है।"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["सर्वर-साइड रेंडरिंग एंट्री फ़ाइल ",(0,r.jsx)(n.code,{children:"src/entry.server.ts"})," बनाएं:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file सर्वर-साइड रेंडरिंग एंट्री फ़ाइल\n * @description सर्वर-साइड रेंडरिंग प्रोसेस, HTML जनरेशन और रिसोर्स इंजेक्शन के लिए जिम्मेदार\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// पेज कंटेंट जनरेशन लॉजिक को एनकैप्सुलेट करें\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // सर्वर-साइड रेंडरिंग कॉन्टेक्स्ट को एप्लिकेशन इंस्टेंस में इंजेक्ट करें\n    app.ssrContext = ssrContext;\n    // सर्वर-साइड को इनिशियलाइज़ करें\n    app.onServer();\n\n    // पेज कंटेंट जनरेट करें\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // एप्लिकेशन इंस्टेंस बन\n"})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["hi%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"प्रोजेक्ट संरचना",id:"प्रोजेक्ट-संरचना",depth:2},{text:"प्रोजेक्ट कॉन्फ़िगरेशन",id:"प्रोजेक्ट-कॉन्फ़िगरेशन",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"सोर्स कोड संरचना",id:"सोर्स-कोड-संरचना",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"Gez फ्रेमवर्क HTML SSR एप्लिकेशन उदाहरण",description:"Gez पर आधारित HTML SSR एप्लिकेशन को शुरू से बनाने का उदाहरण, जिसमें प्रोजेक्ट इनिशियलाइज़ेशन, HTML कॉन्फ़िगरेशन और एंट्री फ़ाइल सेटअप शामिल हैं।",head:[["meta",{property:"keywords",content:"Gez, HTML, SSR एप्लिकेशन, TypeScript कॉन्फ़िगरेशन, प्रोजेक्ट इनिशियलाइज़ेशन, सर्वर-साइड रेंडरिंग, क्लाइंट-साइड इंटरैक्शन"}]]}}}}]);