"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["2043"],{4808:function(e,n,r){r.r(n),r.d(n,{default:()=>l});var s=r(1549),i=r(6603);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",h4:"h4"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"moduleconfig",children:["ModuleConfig",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"ModuleConfig は、Gez フレームワークのモジュール設定機能を提供し、モジュールのインポート/エクスポートルール、エイリアス設定、外部依存関係などを定義するために使用されます。"}),"\n",(0,s.jsxs)(n.h2,{id:"型定義",children:["型定義",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#型定義",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"pathtype",children:["PathType",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#pathtype",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"型定義"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"enum PathType {\n  npm = 'npm:', \n  root = 'root:'\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"モジュールパスタイプの列挙型："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npm"}),": node_modules 内の依存関係を表します"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"root"}),": プロジェクトルートディレクトリ内のファイルを表します"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"moduleconfig-1",children:["ModuleConfig",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"型定義"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ModuleConfig {\n  exports?: string[]\n  imports?: Record<string, string>\n  externals?: Record<string, string>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"モジュール設定インターフェース。サービスのエクスポート、インポート、外部依存関係の設定を定義するために使用されます。"}),"\n",(0,s.jsxs)(n.h4,{id:"exports",children:["exports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exports",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"エクスポート設定リスト。サービス内の特定のコードユニット（コンポーネント、ユーティリティ関数など）を ESM 形式で外部に公開します。"}),"\n",(0,s.jsx)(n.p,{children:"以下の2種類をサポートします："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"root:*"}),": ソースコードファイルをエクスポートします。例：'root:src/components/button.vue'"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"npm:*"}),": サードパーティの依存関係をエクスポートします。例：'npm:vue'"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"imports",children:["imports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#imports",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"インポート設定マップ。リモートモジュールとそのローカルパスを設定します。"}),"\n",(0,s.jsx)(n.p,{children:"インストール方法によって設定が異なります："}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ソースコードインストール（Workspace、Git）：dist ディレクトリを指す必要があります"}),"\n",(0,s.jsx)(n.li,{children:"パッケージインストール（Link、静的サーバー、プライベートミラー、File）：パッケージディレクトリを直接指します"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"externals",children:["externals",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#externals",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"外部依存関係マップ。使用する外部依存関係を設定します。通常はリモートモジュール内の依存関係を使用します。"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"例"}),"："]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n  modules: {\n    // エクスポート設定\n    exports: [\n      'root:src/components/button.vue',  // ソースコードファイルをエクスポート\n      'root:src/utils/format.ts',\n      'npm:vue',  // サードパーティの依存関係をエクスポート\n      'npm:vue-router'\n    ],\n\n    // インポート設定\n    imports: {\n      // ソースコードインストール方式：dist ディレクトリを指す必要があります\n      'ssr-remote': 'root:./node_modules/ssr-remote/dist',\n      // パッケージインストール方式：パッケージディレクトリを直接指します\n      'other-remote': 'root:./node_modules/other-remote'\n    },\n\n    // 外部依存関係設定\n    externals: {\n      'vue': 'ssr-remote/npm/vue',\n      'vue-router': 'ssr-remote/npm/vue-router'\n    }\n  }\n} satisfies GezOptions;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"parsedmoduleconfig",children:["ParsedModuleConfig",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parsedmoduleconfig",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"型定義"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface ParsedModuleConfig {\n  name: string\n  root: string\n  exports: {\n    name: string\n    type: PathType\n    importName: string\n    exportName: string\n    exportPath: string\n    externalName: string\n  }[]\n  imports: {\n    name: string\n    localPath: string\n  }[]\n  externals: Record<string, { match: RegExp; import?: string }>\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"解析されたモジュール設定。元のモジュール設定を標準化された内部形式に変換します："}),"\n",(0,s.jsxs)(n.h4,{id:"name",children:["name",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#name",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"現在のサービスの名前"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"モジュールを識別し、インポートパスを生成するために使用されます"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"root",children:["root",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"現在のサービスのルートディレクトリパス"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"相対パスを解決し、ビルド成果物を保存するために使用されます"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"exports-1",children:["exports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#exports-1",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"エクスポート設定リスト"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": 元のエクスポートパス。例：'npm:vue' または 'root:src/components'"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": パスタイプ（npm または root）"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"importName"}),": インポート名。形式：'${serviceName}/${type}/${path}'"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exportName"}),": エクスポートパス。サービスルートディレクトリからの相対パス"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exportPath"}),": 実際のファイルパス"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"externalName"}),": 外部依存関係名。他のサービスがこのモジュールをインポートする際の識別子として使用されます"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"imports-1",children:["imports",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#imports-1",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"インポート設定リスト"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": 外部サービスの名前"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"localPath"}),": ローカルストレージパス。外部モジュールのビルド成果物を保存するために使用されます"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"externals-1",children:["externals",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#externals-1",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"外部依存関係マップ"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"モジュールのインポートパスを実際のモジュール位置にマッピングします"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"match"}),": インポートステートメントをマッチングするための正規表現"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"import"}),": 実際のモジュールパス"]}),"\n"]})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let l=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["ja%2Fapi%2Fcore%2Fmodule-config.md"]={toc:[{text:"型定義",id:"型定義",depth:2},{text:"PathType",id:"pathtype",depth:3},{text:"ModuleConfig",id:"moduleconfig-1",depth:3},{text:"exports",id:"exports",depth:4},{text:"imports",id:"imports",depth:4},{text:"externals",id:"externals",depth:4},{text:"ParsedModuleConfig",id:"parsedmoduleconfig",depth:3},{text:"name",id:"name",depth:4},{text:"root",id:"root",depth:4},{text:"exports",id:"exports-1",depth:4},{text:"imports",id:"imports-1",depth:4},{text:"externals",id:"externals-1",depth:4}],title:"ModuleConfig",headingTitle:"ModuleConfig",frontmatter:{titleSuffix:"Gez フレームワークモジュール設定 API リファレンス",description:"Gez フレームワークの ModuleConfig 設定インターフェースについて詳しく説明します。モジュールのインポート/エクスポートルール、エイリアス設定、外部依存関係管理などを含め、開発者がフレームワークのモジュールシステムを深く理解するのに役立ちます。",head:[["meta",{property:"keywords",content:"Gez, ModuleConfig, モジュール設定, モジュールインポート/エクスポート, 外部依存関係, エイリアス設定, 依存関係管理, Webアプリケーションフレームワーク"}]]}}}}]);