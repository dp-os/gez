"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["896"],{8253:function(e,n,r){r.r(n),r.d(n,{default:()=>o});var t=r(1549),s=r(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"html",children:["HTML",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Ce tutoriel vous guidera dans la cr\xe9ation d'une application HTML SSR bas\xe9e sur Gez \xe0 partir de z\xe9ro. Nous allons utiliser un exemple complet pour montrer comment utiliser le framework Gez pour cr\xe9er une application avec rendu c\xf4t\xe9 serveur."}),"\n",(0,t.jsxs)(n.h2,{id:"structure-du-projet",children:["Structure du projet",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#structure-du-projet",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Commen\xe7ons par comprendre la structure de base du projet :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # Fichier de configuration du projet, d\xe9finissant les d\xe9pendances et les scripts\n├── tsconfig.json        # Fichier de configuration TypeScript, d\xe9finissant les options de compilation\n└── src                  # R\xe9pertoire des sources\n    ├── app.ts           # Composant principal de l'application, d\xe9finissant la structure de la page et la logique d'interaction\n    ├── create-app.ts    # Factory de cr\xe9ation d'instance d'application, responsable de l'initialisation de l'application\n    ├── entry.client.ts  # Fichier d'entr\xe9e c\xf4t\xe9 client, g\xe9rant le rendu c\xf4t\xe9 navigateur\n    ├── entry.node.ts    # Fichier d'entr\xe9e du serveur Node.js, responsable de la configuration de l'environnement de d\xe9veloppement et du d\xe9marrage du serveur\n    └── entry.server.ts  # Fichier d'entr\xe9e c\xf4t\xe9 serveur, g\xe9rant la logique de rendu SSR\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"configuration-du-projet",children:["Configuration du projet",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuration-du-projet",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,t.jsx)(n.code,{children:"package.json"})," pour configurer les d\xe9pendances et les scripts du projet :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Apr\xe8s avoir cr\xe9\xe9 le fichier ",(0,t.jsx)(n.code,{children:"package.json"}),", vous devez installer les d\xe9pendances du projet. Vous pouvez utiliser l'une des commandes suivantes pour l'installation :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# ou\nyarn install\n# ou\nnpm install\n"})}),"\n",(0,t.jsx)(n.p,{children:"Cela installera tous les paquets n\xe9cessaires, y compris TypeScript et les d\xe9pendances li\xe9es au SSR."}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," pour configurer les options de compilation TypeScript :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"structure-des-sources",children:["Structure des sources",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#structure-des-sources",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le composant principal de l'application ",(0,t.jsx)(n.code,{children:"src/app.ts"}),", impl\xe9mentant la structure de la page et la logique d'interaction :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file Composant d'exemple\n * @description Affiche un titre de page avec une mise \xe0 jour automatique de l'heure, pour d\xe9montrer les fonctionnalit\xe9s de base du framework Gez\n */\n\nexport default class App {\n    /**\n     * Heure actuelle, au format ISO\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * Cr\xe9e une instance de l'application\n     * @param {SsrContext} [ssrContext] - Contexte c\xf4t\xe9 serveur, contenant un ensemble de m\xe9tadonn\xe9es d'importation\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // Aucune initialisation suppl\xe9mentaire n\xe9cessaire dans le constructeur\n    }\n\n    /**\n     * Rend le contenu de la page\n     * @returns {string} Retourne la structure HTML de la page\n     */\n    public render(): string {\n        // Assurez-vous de collecter correctement les m\xe9tadonn\xe9es d'importation dans un environnement c\xf4t\xe9 serveur\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">D\xe9marrage rapide avec Gez</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * Initialisation c\xf4t\xe9 client\n     * @throws {Error} Lance une erreur si l'\xe9l\xe9ment d'affichage de l'heure est introuvable\n     */\n    public onClient(): void {\n        // R\xe9cup\xe8re l'\xe9l\xe9ment d'affichage de l'heure\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('\xc9l\xe9ment d\\'affichage de l\\'heure introuvable');\n        }\n\n        // D\xe9finit un minuteur pour mettre \xe0 jour l'heure chaque seconde\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * Initialisation c\xf4t\xe9 serveur\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * Interface de contexte c\xf4t\xe9 serveur\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * Ensemble de m\xe9tadonn\xe9es d'importation\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,t.jsx)(n.code,{children:"src/create-app.ts"}),", responsable de la cr\xe9ation de l'instance de l'application :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file Cr\xe9ation d'instance d'application\n * @description Responsable de la cr\xe9ation et de la configuration de l'instance de l'application\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier d'entr\xe9e c\xf4t\xe9 client ",(0,t.jsx)(n.code,{children:"src/entry.client.ts"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file Fichier d'entr\xe9e c\xf4t\xe9 client\n * @description Responsable de la logique d'interaction c\xf4t\xe9 client et des mises \xe0 jour dynamiques\n */\n\nimport { createApp } from './create-app';\n\n// Cr\xe9e une instance de l'application et l'initialise\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier ",(0,t.jsx)(n.code,{children:"entry.node.ts"}),", configurant l'environnement de d\xe9veloppement et le d\xe9marrage du serveur :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Fichier d'entr\xe9e du serveur Node.js\n * @description Responsable de la configuration de l'environnement de d\xe9veloppement et du d\xe9marrage du serveur, fournissant un environnement d'ex\xe9cution SSR\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * Configure le cr\xe9ateur d'application pour l'environnement de d\xe9veloppement\n     * @description Cr\xe9e et configure une instance d'application Rspack pour la construction et la mise \xe0 jour en temps r\xe9el dans l'environnement de d\xe9veloppement\n     * @param gez Instance du framework Gez, fournissant des fonctionnalit\xe9s de base et des interfaces de configuration\n     * @returns Retourne une instance d'application Rspack configur\xe9e, prenant en charge HMR et la pr\xe9visualisation en temps r\xe9el\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // Personnalisez ici la configuration de compilation Rspack\n                }\n            })\n        );\n    },\n\n    /**\n     * Configure et d\xe9marre le serveur HTTP\n     * @description Cr\xe9e une instance de serveur HTTP, int\xe8gre le middleware Gez, et traite les requ\xeates SSR\n     * @param gez Instance du framework Gez, fournissant des fonctionnalit\xe9s de middleware et de rendu\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // Utilise le middleware Gez pour traiter les requ\xeates\n            gez.middleware(req, res, async () => {\n                // Ex\xe9cute le rendu c\xf4t\xe9 serveur\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('Serveur d\xe9marr\xe9 : http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Ce fichier est le point d'entr\xe9e pour la configuration de l'environnement de d\xe9veloppement et le d\xe9marrage du serveur, contenant deux fonctionnalit\xe9s principales :"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Fonction ",(0,t.jsx)(n.code,{children:"devApp"})," : Responsable de la cr\xe9ation et de la configuration de l'instance d'application Rspack pour l'environnement de d\xe9veloppement, prenant en charge la mise \xe0 jour en temps r\xe9el et la pr\xe9visualisation."]}),"\n",(0,t.jsxs)(n.li,{children:["Fonction ",(0,t.jsx)(n.code,{children:"server"})," : Responsable de la cr\xe9ation et de la configuration du serveur HTTP, int\xe9grant le middleware Gez pour traiter les requ\xeates SSR."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez le fichier d'entr\xe9e pour le rendu c\xf4t\xe9 serveur ",(0,t.jsx)(n.code,{children:"src/entry.server.ts"})," :"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file Fichier d'entr\xe9e pour le rendu c\xf4t\xe9 serveur\n * @description Responsable du processus de rendu c\xf4t\xe9 serveur, de la g\xe9n\xe9ration HTML et de l'injection des ressources\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// Encapsule la logique de g\xe9n\xe9ration du contenu de la page\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // Injecte le contexte de rendu c\xf4t\xe9 serveur dans l'instance de l'application\n    app.ssrContext = ssrContext;\n    // Initialise le c\xf4t\xe9 serveur\n    app.onServer();\n\n    // G\xe9n\xe8re le contenu de la page\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // Cr\xe9e une instance de l'application, retourne un objet contenant l'instance app\n    const { app } = createApp();\n    // Utilise renderToString pour g\xe9n\xe9rer le contenu de la page\n    const html = renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // Soumet la collecte des d\xe9pendances, assurant que toutes les ressources n\xe9cessaires sont charg\xe9es\n    await rc.commit();\n\n    // G\xe9n\xe8re la structure HTML compl\xe8te\n    rc.html = `<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    ${rc.preload()}\n    <title>D\xe9marrage rapide avec Gez</title>\n    ${rc.css()}\n</head>\n<body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"ex\\xe9cution-du-projet",children:["Ex\xe9cution du projet",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ex\\xe9cution-du-projet",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Apr\xe8s avoir configur\xe9 les fichiers ci-dessus, vous pouvez utiliser les commandes suivantes pour ex\xe9cuter le projet :"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Mode d\xe9veloppement :"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Construction du projet :"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Ex\xe9cution en production :"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Vous avez maintenant cr\xe9\xe9 avec succ\xe8s une application HTML SSR bas\xe9e sur Gez ! Visitez ",(0,t.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," pour voir le r\xe9sultat."]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}let o=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["fr%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"Structure du projet",id:"structure-du-projet",depth:2},{text:"Configuration du projet",id:"configuration-du-projet",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"Structure des sources",id:"structure-des-sources",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"Ex\xe9cution du projet",id:"ex\xe9cution-du-projet",depth:2}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"Exemple d'application HTML SSR avec le framework Gez",description:"Cr\xe9ez une application HTML SSR bas\xe9e sur Gez \xe0 partir de z\xe9ro. Ce tutoriel montre les bases du framework \xe0 travers un exemple complet, incluant l'initialisation du projet, la configuration HTML et la configuration des fichiers d'entr\xe9e.",head:[["meta",{property:"keywords",content:"Gez, HTML, Application SSR, Configuration TypeScript, Initialisation de projet, Rendu c\xf4t\xe9 serveur, Interaction c\xf4t\xe9 client"}]]}}}}]);