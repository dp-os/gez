"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5207"],{7294:function(e,n,r){r.r(n),r.d(n,{default:()=>l});var s=r(1549),d=r(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",h4:"h4",ol:"ol"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"gez",children:["Gez",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gez",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"परिचय",children:["परिचय",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#परिचय",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Gz एक Rspack पर आधारित उच्च-प्रदर्शन वेब एप्लिकेशन फ्रेमवर्क है, जो पूर्ण एप्लिकेशन लाइफसाइकल प्रबंधन, स्टेटिक संसाधन प्रसंस्करण और सर्वर-साइड रेंडरिंग क्षमताएं प्रदान करता है।"}),"\n",(0,s.jsxs)(n.h2,{id:"प्रकार-परिभाषाएं",children:["प्रकार परिभाषाएं",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रकार-परिभाषाएं",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"runtimetarget",children:["RuntimeTarget",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#runtimetarget",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार परिभाषा"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type RuntimeTarget = 'client' | 'server'\n"})}),"\n",(0,s.jsx)(n.p,{children:"एप्लिकेशन रनटाइम वातावरण प्रकार:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"client"}),": ब्राउज़र वातावरण में चलता है, DOM ऑपरेशन और ब्राउज़र API का समर्थन करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"server"}),": Node.js वातावरण में चलता है, फाइल सिस्टम और सर्वर-साइड कार्यक्षमताओं का समर्थन करता है"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"importmap",children:["ImportMap",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmap",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार परिभाषा"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ImportMap = {\n  imports?: SpecifierMap\n  scopes?: ScopesMap\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"ES मॉड्यूल आयात मैपिंग प्रकार।"}),"\n",(0,s.jsxs)(n.h4,{id:"specifiermap",children:["SpecifierMap",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#specifiermap",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार परिभाषा"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type SpecifierMap = Record<string, string>\n"})}),"\n",(0,s.jsx)(n.p,{children:"मॉड्यूल पहचानकर्ता मैपिंग प्रकार, जो मॉड्यूल आयात पथ की मैपिंग संबंधों को परिभाषित करता है।"}),"\n",(0,s.jsxs)(n.h4,{id:"scopesmap",children:["ScopesMap",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#scopesmap",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार परिभाषा"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ScopesMap = Record<string, SpecifierMap>\n"})}),"\n",(0,s.jsx)(n.p,{children:"स्कोप मैपिंग प्रकार, जो विशिष्ट स्कोप के तहत मॉड्यूल आयात मैपिंग संबंधों को परिभाषित करता है।"}),"\n",(0,s.jsxs)(n.h3,{id:"command",children:["COMMAND",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार परिभाषा"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"enum COMMAND {\n    dev = 'dev',\n    build = 'build',\n    preview = 'preview',\n    start = 'start'\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"कमांड प्रकार एनम:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dev"}),": डेवलपमेंट वातावरण कमांड, डेवलपमेंट सर्वर शुरू करता है और हॉट रीलोडिंग का समर्थन करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"build"}),": बिल्ड कमांड, प्रोडक्शन वातावरण के लिए बिल्ड आउटपुट उत्पन्न करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"preview"}),": प्रीव्यू कमांड, स्थानीय प्रीव्यू सर्वर शुरू करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"start"}),": स्टार्ट कमांड, प्रोडक्शन वातावरण सर्वर चलाता है"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"इंस्टेंस-विकल्प",children:["इंस्टेंस विकल्प",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#इंस्टेंस-विकल्प",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Gez फ्रेमवर्क के मुख्य कॉन्फ़िगरेशन विकल्पों को परिभाषित करता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface GezOptions {\n  root?: string\n  isProd?: boolean\n  basePathPlaceholder?: string | false\n  modules?: ModuleConfig\n  packs?: PackConfig\n  devApp?: (gez: Gez) => Promise<App>\n  server?: (gez: Gez) => Promise<void>\n  postBuild?: (gez: Gez) => Promise<void>\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"root",children:["root",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"process.cwd()"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"प्रोजेक्ट रूट डायरेक्टरी पथ। यह पूर्ण पथ या सापेक्ष पथ हो सकता है, सापेक्ष पथ वर्तमान कार्यशील डायरेक्टरी के आधार पर हल किया जाता है।"}),"\n",(0,s.jsxs)(n.h4,{id:"isprod",children:["isProd",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#isprod",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"process.env.NODE_ENV === 'production'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"वातावरण पहचानकर्ता।"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"true"}),": प्रोडक्शन वातावरण"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"false"}),": डेवलपमेंट वातावरण"]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"basepathplaceholder",children:["basePathPlaceholder",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepathplaceholder",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string | false"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"'[[[___GEZ_DYNAMIC_BASE___]]]'"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["बेस पथ प्लेसहोल्डर कॉन्फ़िगरेशन। रनटाइम में संसाधनों के बेस पथ को डायनामिक रूप से बदलने के लिए उपयोग किया जाता है। ",(0,s.jsx)(n.code,{children:"false"})," सेट करने पर इस सुविधा को अक्षम किया जा सकता है।"]}),"\n",(0,s.jsxs)(n.h4,{id:"modules",children:["modules",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#modules",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"ModuleConfig"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"मॉड्यूल कॉन्फ़िगरेशन विकल्प। प्रोजेक्ट के मॉड्यूल रिज़ॉल्यूशन नियमों को कॉन्फ़िगर करने के लिए उपयोग किया जाता है, जिसमें मॉड्यूल एलियास, बाहरी निर्भरताएं आदि शामिल हैं।"}),"\n",(0,s.jsxs)(n.h4,{id:"packs",children:["packs",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packs",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"PackConfig"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"पैकेजिंग कॉन्फ़िगरेशन विकल्प। बिल्ड आउटपुट को मानक npm .tgz फॉर्मेट पैकेज में पैक करने के लिए उपयोग किया जाता है।"}),"\n",(0,s.jsxs)(n.h4,{id:"devapp",children:["devApp",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devapp",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"(gez: Gez) => Promise<App>"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"डेवलपमेंट वातावरण एप्लिकेशन निर्माण फ़ंक्शन। केवल डेवलपमेंट वातावरण में उपयोग किया जाता है, डेवलपमेंट सर्वर के लिए एप्लिकेशन इंस्टेंस बनाने के लिए।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async devApp(gez) {\n    return import('@gez/rspack').then((m) =>\n      m.createRspackHtmlApp(gez, {\n        config(context) {\n          // कस्टम Rspack कॉन्फ़िगरेशन\n        }\n      })\n    )\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"server",children:["server",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#server",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"(gez: Gez) => Promise<void>"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"सर्वर स्टार्ट कॉन्फ़िगरेशन फ़ंक्शन। HTTP सर्वर को कॉन्फ़िगर और शुरू करने के लिए उपयोग किया जाता है, डेवलपमेंट और प्रोडक्शन दोनों वातावरणों में उपयोग किया जा सकता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async server(gez) {\n    const server = http.createServer((req, res) => {\n      gez.middleware(req, res, async () => {\n        const render = await gez.render({\n          params: { url: req.url }\n        });\n        res.end(render.html);\n      });\n    });\n\n    server.listen(3000);\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"postbuild",children:["postBuild",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#postbuild",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"(gez: Gez) => Promise<void>"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"बिल्ड पोस्ट-प्रोसेसिंग फ़ंक्शन। प्रोजेक्ट बिल्ड पूरा होने के बाद निष्पादित किया जाता है, निम्नलिखित के लिए उपयोग किया जा सकता है:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"अतिरिक्त संसाधन प्रसंस्करण"}),"\n",(0,s.jsx)(n.li,{children:"डिप्लॉयमेंट ऑपरेशन"}),"\n",(0,s.jsx)(n.li,{children:"स्टेटिक फाइलें उत्पन्न करना"}),"\n",(0,s.jsx)(n.li,{children:"बिल्ड नोटिफिकेशन भेजना"}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"इंस्टेंस-गुण",children:["इंस्टेंस गुण",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#इंस्टेंस-गुण",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"name",children:["name",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#name",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"वर्तमान मॉड्यूल का नाम, मॉड्यूल कॉन्फ़िगरेशन से प्राप्त होता है।"}),"\n",(0,s.jsxs)(n.h3,{id:"varname",children:["varName",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#varname",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"मॉड्यूल नाम के आधार पर उत्पन्न वैध JavaScript वेरिएबल नाम।"}),"\n",(0,s.jsxs)(n.h3,{id:"root-1",children:["root",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["प्रोजेक्ट रूट डायरेक्टरी का पूर्ण पथ। यदि कॉन्फ़िगर किया गया ",(0,s.jsx)(n.code,{children:"root"})," सापेक्ष पथ है, तो वर्तमान कार्यशील डायरेक्टरी के आधार पर हल किया जाता है।"]}),"\n",(0,s.jsxs)(n.h3,{id:"isprod-1",children:["isProd",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#isprod-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["जांचें कि वर्तमान में प्रोडक्शन वातावरण है या नहीं। कॉन्फ़िगरेशन में ",(0,s.jsx)(n.code,{children:"isProd"})," का उपयोग करता है, यदि कॉन्फ़िगर नहीं किया गया है तो ",(0,s.jsx)(n.code,{children:"process.env.NODE_ENV"})," के आधार पर जांचता है।"]}),"\n",(0,s.jsxs)(n.h3,{id:"basepath",children:["basePath",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepath",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"थ्रो"}),": ",(0,s.jsx)(n.code,{children:"NotReadyError"})," - फ्रेमवर्क इनिशियलाइज़ नहीं होने पर"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["स्लैश से शुरू और समाप्त होने वाला मॉड्यूल बेस पथ प्राप्त करें। रिटर्न फॉर्मेट ",(0,s.jsx)(n.code,{children:"/${name}/"})," है, जहां नाम मॉड्यूल कॉन्फ़िगरेशन से प्राप्त होता है।"]}),"\n",(0,s.jsxs)(n.h3,{id:"basepathplaceholder-1",children:["basePathPlaceholder",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepathplaceholder-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"रनटाइम में डायनामिक रूप से बदलने के लिए उपयोग किया जाने वाला बेस पथ प्लेसहोल्डर प्राप्त करें। कॉन्फ़िगरेशन द्वारा अक्षम किया जा सकता है।"}),"\n",(0,s.jsxs)(n.h3,{id:"middleware",children:["middleware",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#middleware",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"Middleware"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"स्टेटिक संसाधन प्रसंस्करण मिडलवेयर प्राप्त करें। वातावरण के आधार पर अलग-अलग कार्यान्वयन प्रदान करता है:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"डेवलपमेंट वातावरण: सोर्स कोड रियल-टाइम कंपाइलेशन, हॉट रीलोडिंग का समर्थन करता है"}),"\n",(0,s.jsx)(n.li,{children:"प्रोडक्शन वातावरण: स्टेटिक संसाधनों के लिए लॉन्ग-टर्म कैशिंग का समर्थन करता है"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const server = http.createServer((req, res) => {\n  gez.middleware(req, res, async () => {\n    const rc = await gez.render({ url: req.url });\n    res.end(rc.html);\n  });\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"render",children:["render",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#render",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"(options?: RenderContextOptions) => Promise<RenderContext>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"सर्वर-साइड रेंडरिंग फ़ंक्शन प्राप्त करें। वातावरण के आधार पर अलग-अलग कार्यान्वयन प्रदान करता है:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"डेवलपमेंट वातावरण: हॉट रीलोडिंग और रियल-टाइम प्रीव्यू का समर्थन करता है"}),"\n",(0,s.jsx)(n.li,{children:"प्रोडक्शन वातावरण: ऑप्टिमाइज़्ड रेंडरिंग प्रदर्शन प्रदान करता है"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// बेसिक उपयोग\nconst rc = await gez.render({\n  params: { url: req.url }\n});\n\n// एडवांस्ड कॉन्फ़िगरेशन\nconst rc = await gez.render({\n  base: '',                    // बेस पथ\n  importmapMode: 'inline',     // आयात मैपिंग मोड\n  entryName: 'default',        // रेंडरिंग एंट्री\n  params: {\n    url: req.url,\n    state: { user: 'admin' }   // स्टेट डेटा\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"command-1",children:["COMMAND",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"typeof COMMAND"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"कमांड एनम प्रकार परिभाषा प्राप्त करें।"}),"\n",(0,s.jsxs)(n.h3,{id:"moduleconfig",children:["moduleConfig",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"ParsedModuleConfig"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"थ्रो"}),": ",(0,s.jsx)(n.code,{children:"NotReadyError"})," - फ्रेमवर्क इनिशियलाइज़ नहीं होने पर"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"वर्तमान मॉड्यूल की पूर्ण कॉन्फ़िगरेशन जानकारी प्राप्त करें, जिसमें मॉड्यूल रिज़ॉल्यूशन नियम, एलियास कॉन्फ़िगरेशन आदि शामिल हैं।"}),"\n",(0,s.jsxs)(n.h3,{id:"packconfig",children:["packConfig",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"ParsedPackConfig"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"थ्रो"}),": ",(0,s.jsx)(n.code,{children:"NotReadyError"})," - फ्रेमवर्क इनिशियलाइज़ नहीं होने पर"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"वर्तमान मॉड्यूल की पैकेजिंग संबंधित कॉन्फ़िगरेशन प्राप्त करें, जिसमें आउटपुट पथ, package.json प्रसंस्करण आदि शामिल हैं।"}),"\n",(0,s.jsxs)(n.h2,{id:"इंस्टेंस-मेथड्स",children:["इंस्टेंस मेथड्स",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#इंस्टेंस-मेथड्स",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"constructor",children:["constructor()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#constructor",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"पैरामीटर्स"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options?: GezOptions"})," - फ्रेमवर्क कॉन्फ़िगरेशन विकल्प"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"रिटर्न वैल्यू"}),": ",(0,s.jsx)(n.code,{children:"Gez"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gez फ्रेमवर्क इंस्टेंस बनाएं।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const gez = new Gez({\n  root: './src',\n  isProd: process.env.NODE_ENV === 'production'\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"init",children:["init()",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#init",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"पैरामीटर्स"}),": ",(0,s.jsx)(n.code,{children:"command: COMMAND"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"रिटर्न वैल्यू"}),": ",(0,s.jsx)(n.code,{children:"Promise<boolean>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"थ्रो"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Error"}),": डुप्लिकेट इनिशियलाइज़ेशन पर"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NotReadyError"}),": अनइनिशियलाइज़्ड इंस्टेंस एक्सेस करने पर"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gez फ्रेमवर्क इंस्टेंस को इनिशियलाइज़ करें। निम्नलिखित कोर इनिशियलाइज़ेशन प्रक्रिया निष्पादित करता है:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"प्रोजेक्ट कॉन्फ़िगरेशन पार्स करें (package.json, मॉड्यूल कॉन्फ़िगरेशन, पैकेजिंग कॉन्फ़िगरेशन आदि)"}),"\n",(0,s.jsx)(n.li,{children:"एप्लिकेशन इंस्टेंस बनाएं (डेवलपमेंट या प्रोडक्शन वातावरण)"}),"\n",(0,s.jsx)(n.li,{children:"कम"}),"\n"]})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}let l=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["hi%2Fapi%2Fcore%2Fgez.md"]={toc:[{text:"परिचय",id:"परिचय",depth:2},{text:"प्रकार परिभाषाएं",id:"प्रकार-परिभाषाएं",depth:2},{text:"RuntimeTarget",id:"runtimetarget",depth:3},{text:"ImportMap",id:"importmap",depth:3},{text:"SpecifierMap",id:"specifiermap",depth:4},{text:"ScopesMap",id:"scopesmap",depth:4},{text:"COMMAND",id:"command",depth:3},{text:"इंस्टेंस विकल्प",id:"इंस्टेंस-विकल्प",depth:2},{text:"root",id:"root",depth:4},{text:"isProd",id:"isprod",depth:4},{text:"basePathPlaceholder",id:"basepathplaceholder",depth:4},{text:"modules",id:"modules",depth:4},{text:"packs",id:"packs",depth:4},{text:"devApp",id:"devapp",depth:4},{text:"server",id:"server",depth:4},{text:"postBuild",id:"postbuild",depth:4},{text:"इंस्टेंस गुण",id:"इंस्टेंस-गुण",depth:2},{text:"name",id:"name",depth:3},{text:"varName",id:"varname",depth:3},{text:"root",id:"root-1",depth:3},{text:"isProd",id:"isprod-1",depth:3},{text:"basePath",id:"basepath",depth:3},{text:"basePathPlaceholder",id:"basepathplaceholder-1",depth:3},{text:"middleware",id:"middleware",depth:3},{text:"render",id:"render",depth:3},{text:"COMMAND",id:"command-1",depth:3},{text:"moduleConfig",id:"moduleconfig",depth:3},{text:"packConfig",id:"packconfig",depth:3},{text:"इंस्टेंस मेथड्स",id:"इंस्टेंस-मेथड्स",depth:2},{text:"constructor()",id:"constructor",depth:3},{text:"init()",id:"init",depth:3}],title:"Gez",headingTitle:"Gez",frontmatter:{titleSuffix:"फ्रेमवर्क कोर क्लास API संदर्भ",description:"Gez फ्रेमवर्क के कोर क्लास API का विस्तृत विवरण, जिसमें एप्लिकेशन लाइफसाइकल प्रबंधन, स्टेटिक संसाधन प्रसंस्करण और सर्वर-साइड रेंडरिंग क्षमताएं शामिल हैं, जो डेवलपर्स को फ्रेमवर्क की मुख्य कार्यक्षमताओं को गहराई से समझने में मदद करती हैं।",head:[["meta",{property:"keywords",content:"Gez, API, लाइफसाइकल प्रबंधन, स्टेटिक संसाधन, सर्वर-साइड रेंडरिंग, Rspack, वेब एप्लिकेशन फ्रेमवर्क"}]]}}}}]);