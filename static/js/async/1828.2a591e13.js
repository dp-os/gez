"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["1828"],{4230:function(e,n,r){r.r(n),r.d(n,{default:()=>c});var s=r(1549),d=r(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ul:"ul",li:"li",strong:"strong",h2:"h2",h3:"h3",pre:"pre",code:"code",h4:"h4"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"rendercontext",children:["RenderContext",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#rendercontext",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"RenderContext, Gez फ्रेमवर्क में एक कोर क्लास है, जो सर्वर-साइड रेंडरिंग (SSR) के पूर्ण जीवनचक्र को प्रबंधित करता है। यह रेंडरिंग संदर्भ, संसाधन प्रबंधन, स्थिति सिंक्रनाइज़ेशन जैसे महत्वपूर्ण कार्यों को संभालने के लिए एक पूर्ण API प्रदान करता है:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"रेंडरिंग नियंत्रण"}),": सर्वर-साइड रेंडरिंग प्रक्रिया को प्रबंधित करता है, मल्टी-एंट्री रेंडरिंग, कंडीशनल रेंडरिंग जैसे परिदृश्यों का समर्थन करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"संसाधन प्रबंधन"}),": JS, CSS जैसे स्टेटिक संसाधनों को इंटेलिजेंटली एकत्र और इंजेक्ट करता है, लोडिंग प्रदर्शन को अनुकूलित करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"स्थिति सिंक्रनाइज़ेशन"}),": सर्वर स्थिति को सीरियलाइज़ करता है, क्लाइंट-साइड हाइड्रेशन को सुनिश्चित करता है"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"रूटिंग नियंत्रण"}),": सर्वर-साइड रीडायरेक्ट, स्टेटस कोड सेटिंग जैसी उन्नत कार्यक्षमताओं का समर्थन करता है"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"प्रकार-परिभाषाएं",children:["प्रकार परिभाषाएं",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#प्रकार-परिभाषाएं",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"serverrenderhandle",children:["ServerRenderHandle",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#serverrenderhandle",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"सर्वर-साइड रेंडरिंग हैंडलर फ़ंक्शन का प्रकार परिभाषा।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ServerRenderHandle = (rc: RenderContext) => Promise<void> | void;\n"})}),"\n",(0,s.jsx)(n.p,{children:"सर्वर-साइड रेंडरिंग हैंडलर फ़ंक्शन एक एसिंक्रोनस या सिंक्रोनस फ़ंक्शन है, जो RenderContext इंस्टेंस को पैरामीटर के रूप में प्राप्त करता है, और सर्वर-साइड रेंडरिंग लॉजिक को संभालता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// 1. एसिंक्रोनस हैंडलर फ़ंक्शन\nexport default async (rc: RenderContext) => {\n  const app = createApp();\n  const html = await renderToString(app);\n  rc.html = html;\n};\n\n// 2. सिंक्रोनस हैंडलर फ़ंक्शन\nexport const simple = (rc: RenderContext) => {\n  rc.html = '<h1>Hello World</h1>';\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"renderfiles",children:["RenderFiles",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renderfiles",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"रेंडरिंग प्रक्रिया में एकत्रित संसाधन फ़ाइलों की सूची का प्रकार परिभाषा।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface RenderFiles {\n  js: string[];\n  css: string[];\n  modulepreload: string[];\n  resources: string[];\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"js"}),": JavaScript फ़ाइलों की सूची"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"css"}),": स्टाइलशीट फ़ाइलों की सूची"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"modulepreload"}),": प्रीलोड करने के लिए आवश्यक ESM मॉड्यूल की सूची"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"resources"}),": अन्य संसाधन फ़ाइलों की सूची (इमेज, फ़ॉन्ट आदि)"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// संसाधन फ़ाइल सूची उदाहरण\nrc.files = {\n  js: [\n    '/assets/entry-client.js',\n    '/assets/vendor.js'\n  ],\n  css: [\n    '/assets/main.css',\n    '/assets/vendor.css'\n  ],\n  modulepreload: [\n    '/assets/Home.js',\n    '/assets/About.js'\n  ],\n  resources: [\n    '/assets/logo.png',\n    '/assets/font.woff2'\n  ]\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"importmapmode",children:["ImportmapMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmapmode",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"importmap के जनरेट मोड को परिभाषित करता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ImportmapMode = 'inline' | 'js';\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inline"}),": importmap सामग्री को सीधे HTML में इनलाइन करता है, निम्नलिखित परिदृश्यों के लिए उपयुक्त:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"HTTP अनुरोधों की संख्या को कम करने की आवश्यकता हो"}),"\n",(0,s.jsx)(n.li,{children:"importmap सामग्री छोटी हो"}),"\n",(0,s.jsx)(n.li,{children:"फर्स्ट-लोड प्रदर्शन के लिए उच्च आवश्यकता हो"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"js"}),": importmap सामग्री को एक अलग JS फ़ाइल के रूप में जनरेट करता है, निम्नलिखित परिदृश्यों के लिए उपयुक्त:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"importmap सामग्री बड़ी हो"}),"\n",(0,s.jsx)(n.li,{children:"ब्राउज़र कैशिंग मैकेनिज्म का उपयोग करने की आवश्यकता हो"}),"\n",(0,s.jsx)(n.li,{children:"एकाधिक पेज समान importmap साझा करते हों"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"रेंडरिंग संदर्भ क्लास, जो सर्वर-साइड रेंडरिंग (SSR) प्रक्रिया में संसाधन प्रबंधन और HTML जनरेशन के लिए जिम्मेदार है।"}),"\n",(0,s.jsxs)(n.h2,{id:"इंस्टेंस-विकल्प",children:["इंस्टेंस विकल्प",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#इंस्टेंस-विकल्प",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"रेंडरिंग संदर्भ के कॉन्फ़िगरेशन विकल्पों को परिभाषित करता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface RenderContextOptions {\n  base?: string\n  entryName?: string\n  params?: Record<string, any>\n  importmapMode?: ImportmapMode\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"base",children:["base",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#base",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"स्टेटिक संसाधनों का बेस पाथ।"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"सभी स्टेटिक संसाधन (JS, CSS, इमेज आदि) इस पाथ के आधार पर लोड होंगे"}),"\n",(0,s.jsx)(n.li,{children:"रनटाइम पर डायनामिक कॉन्फ़िगरेशन का समर्थन करता है, पुनः बिल्ड की आवश्यकता नहीं"}),"\n",(0,s.jsx)(n.li,{children:"मल्टी-लैंग्वेज साइट्स, माइक्रो-फ्रंटेंड एप्लिकेशन जैसे परिदृश्यों में उपयोगी"}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"entryname",children:["entryName",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryname",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"'default'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"सर्वर-साइड रेंडरिंग एंट्री फ़ंक्शन का नाम। जब एक मॉड्यूल एकाधिक रेंडरिंग फ़ंक्शन एक्सपोर्ट करता है, तो इसका उपयोग सर्वर-साइड रेंडरिंग के लिए उपयोग किए जाने वाले एंट्री फ़ंक्शन को निर्दिष्ट करने के लिए किया जाता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"export const mobile = async (rc: RenderContext) => {\n  // मोबाइल रेंडरिंग लॉजिक\n};\n\nexport const desktop = async (rc: RenderContext) => {\n  // डेस्कटॉप रेंडरिंग लॉजिक\n};\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"params",children:["params",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#params",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"Record<string, any>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"{}"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"रेंडरिंग पैरामीटर। रेंडरिंग फ़ंक्शन को किसी भी प्रकार के पैरामीटर पास किए जा सकते हैं, आमतौर पर अनुरोध जानकारी (URL, क्वेरी पैरामीटर आदि) पास करने के लिए उपयोग किया जाता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const rc = await gez.render({\n  params: {\n    url: req.url,\n    lang: 'hi-IN',\n    theme: 'dark'\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"importmapmode-1",children:["importmapMode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmapmode-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"'inline' | 'js'"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"'inline'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"इम्पोर्ट मैप (Import Map) का जनरेट मोड:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"inline"}),": importmap सामग्री को सीधे HTML में इनलाइन करता है"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"js"}),": importmap सामग्री को एक अलग JS फ़ाइल के रूप में जनरेट करता है"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"इंस्टेंस-गुण",children:["इंस्टेंस गुण",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#इंस्टेंस-गुण",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"gez",children:["gez",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gez",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"Gez"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Gez इंस्टेंस का संदर्भ। फ्रेमवर्क कोर कार्यक्षमताओं और कॉन्फ़िगरेशन जानकारी तक पहुंचने के लिए उपयोग किया जाता है।"}),"\n",(0,s.jsxs)(n.h3,{id:"redirect",children:["redirect",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#redirect",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string | null"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"रीडायरेक्ट एड्रेस। सेट करने पर, सर्वर इस मान के आधार पर HTTP रीडायरेक्ट कर सकता है, आमतौर पर लॉगिन वेरिफिकेशन, परमिशन कंट्रोल जैसे परिदृश्यों में उपयोग किया जाता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// लॉगिन वेरिफिकेशन उदाहरण\nexport default async (rc: RenderContext) => {\n  if (!isLoggedIn()) {\n    rc.redirect = '/login';\n    rc.status = 302;\n    return;\n  }\n  // पेज रेंडरिंग जारी रखें...\n};\n\n// परमिशन कंट्रोल उदाहरण\nexport default async (rc: RenderContext) => {\n  if (!hasPermission()) {\n    rc.redirect = '/403';\n    rc.status = 403;\n    return;\n  }\n  // पेज रेंडरिंग जारी रखें...\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"status",children:["status",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#status",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"number | null"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"HTTP रिस्पांस स्टेटस कोड। किसी भी वैध HTTP स्टेटस कोड को सेट किया जा सकता है, आमतौर पर एरर हैंडलिंग, रीडायरेक्ट जैसे परिदृश्यों में उपयोग किया जाता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// 404 एरर हैंडलिंग उदाहरण\nexport default async (rc: RenderContext) => {\n  const page = await findPage(rc.params.url);\n  if (!page) {\n    rc.status = 404;\n    // 404 पेज रेंडर करें...\n    return;\n  }\n  // पेज रेंडरिंग जारी रखें...\n};\n\n// टेम्पररी रीडायरेक्ट उदाहरण\nexport default async (rc: RenderContext) => {\n  if (needMaintenance()) {\n    rc.redirect = '/maintenance';\n    rc.status = 307; // टेम्पररी रीडायरेक्ट, अनुरोध मेथड को अपरिवर्तित रखें\n    return;\n  }\n  // पेज रेंडरिंग जारी रखें...\n};\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"html",children:["html",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"HTML सामग्री। अंतिम जनरेटेड HTML सामग्री को सेट और प्राप्त करने के लिए उपयोग किया जाता है, सेट करते समय बेस पाथ प्लेसहोल्डर को स्वचालित रूप से हैंडल करता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// बेसिक उपयोग\nexport default async (rc: RenderContext) => {\n  // HTML सामग्री सेट करें\n  rc.html = `\n    <!DOCTYPE html>\n    <html>\n      <head>\n        ${rc.preload()}\n        ${rc.css()}\n      </head>\n      <body>\n        <div id=\"app\">Hello World</div>\n        ${rc.importmap()}\n        ${rc.moduleEntry()}\n        ${rc.modulePreload()}\n      </body>\n    </html>\n  `;\n};\n\n// डायनामिक बेस पाथ\nconst rc = await gez.render({\n  base: '/app',  // बेस पाथ सेट करें\n  params: { url: req.url }\n});\n\n// HTML में प्लेसहोल्डर स्वचालित रूप से रिप्लेस हो जाएंगे:\n// [[[___GEZ_DYNAMIC_BASE___]]]/your-app-name/css/style.css\n// रिप्लेस होगा:\n// /app/your-app-name/css/style.css\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"base-1",children:["base",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#base-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"''"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"स्टेटिक संसाधनों का बेस पाथ। सभी स्टेटिक संसाधन (JS, CSS, इमेज आदि) इस पाथ के आधार पर लोड होंगे, रनटाइम पर डायनामिक कॉन्फ़िगरेशन का समर्थन करता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// बेसिक उपयोग\nconst rc = await gez.render({\n  base: '/gez',  // बेस पाथ सेट करें\n  params: { url: req.url }\n});\n\n// मल्टी-लैंग्वेज साइट्स उदाहरण\nconst rc = await gez.render({\n  base: '/hi',  // हिंदी साइट\n  params: { lang: 'hi-IN' }\n});\n\n// माइक्रो-फ्रंटेंड एप्लिकेशन उदाहरण\nconst rc = await gez.render({\n  base: '/app1',  // सब-एप्लिकेशन1\n  params: { appId: 1 }\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"entryname-1",children:["entryName",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryname-1",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"प्रकार"}),": ",(0,s.jsx)(n.code,{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"केवल पढ़ने योग्य"}),": ",(0,s.jsx)(n.code,{children:"true"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"डिफ़ॉल्ट मान"}),": ",(0,s.jsx)(n.code,{children:"'default'"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"सर्वर-साइड रेंडरिंग एंट्री फ़ंक्शन का नाम। entry.server.ts से उपयोग किए जाने वाले रेंडरिंग फ़ंक्शन का चयन करने के लिए उपयोग किया जाता है।"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"// डिफ़ॉल्ट एंट्री फ़ंक्शन\nexport default async (rc: RenderContext) => {\n  // डिफ़ॉल्ट रेंडरिंग लॉजिक\n};\n\n// एकाधिक एंट्री फ़ंक्शन\nexport const mobile = async (rc: RenderContext) => {\n  // मोबाइल रेंडरिंग लॉजिक\n};\n\nexport const desktop = async (rc: RenderContext) => {\n  // डेस्कटॉप रेंडरिंग लॉजिक\n};\n\n// डिवाइस टाइप के आधार पर एंट्री फ़ंक्शन का चयन\nconst rc = await gez.render({\n  entryName:\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}let c=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["hi%2Fapi%2Fcore%2Frender-context.md"]={toc:[{text:"प्रकार परिभाषाएं",id:"प्रकार-परिभाषाएं",depth:2},{text:"ServerRenderHandle",id:"serverrenderhandle",depth:3},{text:"RenderFiles",id:"renderfiles",depth:3},{text:"ImportmapMode",id:"importmapmode",depth:3},{text:"इंस्टेंस विकल्प",id:"इंस्टेंस-विकल्प",depth:2},{text:"base",id:"base",depth:4},{text:"entryName",id:"entryname",depth:4},{text:"params",id:"params",depth:4},{text:"importmapMode",id:"importmapmode-1",depth:4},{text:"इंस्टेंस गुण",id:"इंस्टेंस-गुण",depth:2},{text:"gez",id:"gez",depth:3},{text:"redirect",id:"redirect",depth:3},{text:"status",id:"status",depth:3},{text:"html",id:"html",depth:3},{text:"base",id:"base-1",depth:3},{text:"entryName",id:"entryname-1",depth:3}],title:"RenderContext",headingTitle:"RenderContext",frontmatter:{titleSuffix:"Gez फ्रेमवर्क रेंडरिंग संदर्भ API संदर्भ",description:"Gez फ्रेमवर्क के RenderContext कोर क्लास का विस्तृत विवरण, जिसमें रेंडरिंग नियंत्रण, संसाधन प्रबंधन, स्थिति सिंक्रनाइज़ेशन और रूटिंग नियंत्रण जैसी कार्यक्षमताएं शामिल हैं, जो डेवलपर्स को कुशल सर्वर-साइड रेंडरिंग (SSR) को लागू करने में मदद करती हैं।",head:[["meta",{property:"keywords",content:"Gez, RenderContext, SSR, सर्वर-साइड रेंडरिंग, रेंडरिंग संदर्भ, स्थिति सिंक्रनाइज़ेशन, संसाधन प्रबंधन, वेब एप्लिकेशन फ्रेमवर्क"}]]}}}}]);