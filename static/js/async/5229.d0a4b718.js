"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["5229"],{7559:function(e,i,n){n.r(i),n.d(i,{default:()=>t});var a=n(1549),r=n(6603);function s(e){let i=Object.assign({h1:"h1",a:"a",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",h2:"h2",pre:"pre",h3:"h3",h4:"h4"},(0,r.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i.h1,{id:"packconfig",children:["PackConfig",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig",children:"#"})]}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"PackConfig"})," \xe8 un'interfaccia di configurazione per il packaging dei pacchetti, utilizzata per impacchettare gli artefatti di build di un servizio in un pacchetto standard npm in formato .tgz."]}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Standardizzazione"}),": Utilizza il formato di packaging .tgz standard di npm"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Completezza"}),": Include tutti i file necessari come il codice sorgente del modulo, le dichiarazioni di tipo e i file di configurazione"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Compatibilit\xe0"}),": Completamente compatibile con l'ecosistema npm, supporta flussi di lavoro standard di gestione dei pacchetti"]}),"\n"]}),"\n",(0,a.jsxs)(i.h2,{id:"definizione-del-tipo",children:["Definizione del tipo",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#definizione-del-tipo",children:"#"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ts",children:"interface PackConfig {\n    enable?: boolean;\n    outputs?: string | string[] | boolean;\n    packageJson?: (gez: Gez, pkg: Record<string, any>) => Promise<Record<string, any>>;\n    onBefore?: (gez: Gez, pkg: Record<string, any>) => Promise<void>;\n    onAfter?: (gez: Gez, pkg: Record<string, any>, file: Buffer) => Promise<void>;\n}\n"})}),"\n",(0,a.jsxs)(i.h3,{id:"packconfig-1",children:["PackConfig",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig-1",children:"#"})]}),"\n",(0,a.jsxs)(i.h4,{id:"enable",children:["enable",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#enable",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Abilita o disabilita la funzionalit\xe0 di packaging. Se abilitata, gli artefatti di build verranno impacchettati in un pacchetto npm standard in formato .tgz."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Tipo: ",(0,a.jsx)(i.code,{children:"boolean"})]}),"\n",(0,a.jsxs)(i.li,{children:["Valore predefinito: ",(0,a.jsx)(i.code,{children:"false"})]}),"\n"]}),"\n",(0,a.jsxs)(i.h4,{id:"outputs",children:["outputs",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#outputs",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Specifica il percorso di output del file del pacchetto. Supporta le seguenti modalit\xe0 di configurazione:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"string"}),": Un singolo percorso di output, ad esempio 'dist/versions/my-app.tgz'"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"string[]"}),": Pi\xf9 percorsi di output, per generare pi\xf9 versioni contemporaneamente"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"boolean"}),": Se true, utilizza il percorso predefinito 'dist/client/versions/latest.tgz'"]}),"\n"]}),"\n",(0,a.jsxs)(i.h4,{id:"packagejson",children:["packageJson",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Funzione di callback per personalizzare il contenuto di package.json. Viene chiamata prima del packaging per personalizzare il contenuto di package.json."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Parametri:","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"gez: Gez"})," - Istanza di Gez"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"pkg: any"})," - Contenuto originale di package.json"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["Valore restituito: ",(0,a.jsx)(i.code,{children:"Promise<any>"})," - Contenuto modificato di package.json"]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Utilizzi comuni:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Modificare il nome e la versione del pacchetto"}),"\n",(0,a.jsx)(i.li,{children:"Aggiungere o aggiornare le dipendenze"}),"\n",(0,a.jsx)(i.li,{children:"Aggiungere campi personalizzati"}),"\n",(0,a.jsx)(i.li,{children:"Configurare informazioni relative alla pubblicazione"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Esempio:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ts",children:"packageJson: async (gez, pkg) => {\n  // Imposta le informazioni del pacchetto\n  pkg.name = 'my-app';\n  pkg.version = '1.0.0';\n  pkg.description = 'La mia applicazione';\n\n  // Aggiunge dipendenze\n  pkg.dependencies = {\n    'vue': '^3.0.0',\n    'express': '^4.17.1'\n  };\n\n  // Aggiunge configurazione di pubblicazione\n  pkg.publishConfig = {\n    registry: 'https://registry.example.com'\n  };\n\n  return pkg;\n}\n"})}),"\n",(0,a.jsxs)(i.h4,{id:"onbefore",children:["onBefore",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#onbefore",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Funzione di callback per le operazioni preliminari al packaging."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Parametri:","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"gez: Gez"})," - Istanza di Gez"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"pkg: Record<string, any>"})," - Contenuto di package.json"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["Valore restituito: ",(0,a.jsx)(i.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Utilizzi comuni:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Aggiungere file aggiuntivi (README, LICENSE, ecc.)"}),"\n",(0,a.jsx)(i.li,{children:"Eseguire test o verifiche di build"}),"\n",(0,a.jsx)(i.li,{children:"Generare documentazione o metadati"}),"\n",(0,a.jsx)(i.li,{children:"Pulire file temporanei"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Esempio:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ts",children:"onBefore: async (gez, pkg) => {\n  // Aggiunge documentazione\n  await fs.writeFile('dist/README.md', '# My App');\n  await fs.writeFile('dist/LICENSE', 'MIT License');\n\n  // Esegue test\n  await runTests();\n\n  // Genera documentazione\n  await generateDocs();\n\n  // Pulisce file temporanei\n  await cleanupTempFiles();\n}\n"})}),"\n",(0,a.jsxs)(i.h4,{id:"onafter",children:["onAfter",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#onafter",children:"#"})]}),"\n",(0,a.jsx)(i.p,{children:"Funzione di callback per le operazioni successive al packaging. Viene chiamata dopo la generazione del file .tgz, per elaborare gli artefatti di packaging."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:["Parametri:","\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"gez: Gez"})," - Istanza di Gez"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"pkg: Record<string, any>"})," - Contenuto di package.json"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"file: Buffer"})," - Contenuto del file impacchettato"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(i.li,{children:["Valore restituito: ",(0,a.jsx)(i.code,{children:"Promise<void>"})]}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Utilizzi comuni:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Pubblicare su un repository npm (pubblico o privato)"}),"\n",(0,a.jsx)(i.li,{children:"Caricare su un server di risorse statiche"}),"\n",(0,a.jsx)(i.li,{children:"Gestire il controllo delle versioni"}),"\n",(0,a.jsx)(i.li,{children:"Attivare flussi CI/CD"}),"\n"]}),"\n",(0,a.jsx)(i.p,{children:"Esempio:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ts",children:"onAfter: async (gez, pkg, file) => {\n  // Pubblica su un repository npm privato\n  await publishToRegistry(file, {\n    registry: 'https://registry.example.com'\n  });\n\n  // Carica su un server di risorse statiche\n  await uploadToServer(file, 'https://assets.example.com/packages');\n\n  // Crea un tag di versione in Git\n  await createGitTag(pkg.version);\n\n  // Attiva il processo di deployment\n  await triggerDeploy(pkg.version);\n}\n"})}),"\n",(0,a.jsxs)(i.h2,{id:"esempio-di-utilizzo",children:["Esempio di utilizzo",(0,a.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#esempio-di-utilizzo",children:"#"})]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n  modules: {\n    // Configura i moduli da esportare\n    exports: [\n      'root:src/components/button.vue',\n      'root:src/utils/format.ts',\n      'npm:vue',\n      'npm:vue-router'\n    ]\n  },\n  // Configurazione del packaging\n  pack: {\n    // Abilita il packaging\n    enable: true,\n\n    // Output di pi\xf9 versioni contemporaneamente\n    outputs: [\n      'dist/versions/latest.tgz',\n      'dist/versions/1.0.0.tgz'\n    ],\n\n    // Personalizza package.json\n    packageJson: async (gez, pkg) => {\n      pkg.version = '1.0.0';\n      return pkg;\n    },\n\n    // Operazioni preliminari al packaging\n    onBefore: async (gez, pkg) => {\n      // Aggiunge file necessari\n      await fs.writeFile('dist/README.md', '# Your App\\n\\nDescrizione delle esportazioni dei moduli...');\n      // Esegue il controllo dei tipi\n      await runTypeCheck();\n    },\n\n    // Operazioni successive al packaging\n    onAfter: async (gez, pkg, file) => {\n      // Pubblica su un repository npm privato\n      await publishToRegistry(file, {\n        registry: 'https://npm.your-registry.com/'\n      });\n      // O carica su un server statico\n      await uploadToServer(file, 'https://static.example.com/packages');\n    }\n  }\n} satisfies GezOptions;\n"})})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,r.ah)(),e.components);return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}let t=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["it%2Fapi%2Fcore%2Fpack-config.md"]={toc:[{text:"Definizione del tipo",id:"definizione-del-tipo",depth:2},{text:"PackConfig",id:"packconfig-1",depth:3},{text:"enable",id:"enable",depth:4},{text:"outputs",id:"outputs",depth:4},{text:"packageJson",id:"packagejson",depth:4},{text:"onBefore",id:"onbefore",depth:4},{text:"onAfter",id:"onafter",depth:4},{text:"Esempio di utilizzo",id:"esempio-di-utilizzo",depth:2}],title:"PackConfig",headingTitle:"PackConfig",frontmatter:{titleSuffix:"Riferimento API per la configurazione del packaging del framework Gez",description:"Descrizione dettagliata dell'interfaccia di configurazione PackConfig del framework Gez, incluse le regole di packaging dei pacchetti, la configurazione dell'output e gli hook del ciclo di vita, per aiutare gli sviluppatori a implementare flussi di build standardizzati.",head:[["meta",{property:"keywords",content:"Gez, PackConfig, packaging di pacchetti, configurazione di build, hook del ciclo di vita, configurazione del packaging, framework per applicazioni web"}]]}}}}]);