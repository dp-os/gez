"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["4290"],{7677:function(e,n,a){a.r(n),a.d(n,{default:()=>t});var i=a(1549),r=a(6603);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",strong:"strong",h3:"h3",pre:"pre"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"renderizado-en-el-cliente",children:["Renderizado en el cliente",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renderizado-en-el-cliente",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["El renderizado en el cliente (Client-Side Rendering, CSR) es una t\xe9cnica de renderizado de p\xe1ginas que se ejecuta en el navegador. En Gez, cuando tu aplicaci\xf3n no puede desplegar una instancia de servidor Node.js, puedes optar por generar un archivo est\xe1tico ",(0,i.jsx)(n.code,{children:"index.html"})," durante la fase de construcci\xf3n, logrando un renderizado puramente en el cliente."]}),"\n",(0,i.jsxs)(n.h2,{id:"casos-de-uso",children:["Casos de uso",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#casos-de-uso",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"Se recomienda utilizar el renderizado en el cliente en los siguientes escenarios:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Entornos de alojamiento est\xe1tico"}),": Servicios de alojamiento como GitHub Pages, CDN, etc., que no admiten renderizado en el servidor."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Aplicaciones simples"}),": Aplicaciones peque\xf1as donde la velocidad de carga inicial y el SEO no son cr\xedticos."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Entorno de desarrollo"}),": Para una vista previa r\xe1pida y depuraci\xf3n de la aplicaci\xf3n durante la fase de desarrollo."]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"configuraci\\xf3n",children:["Configuraci\xf3n",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuraci\\xf3n",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"configuraci\\xf3n-de-la-plantilla-html",children:["Configuraci\xf3n de la plantilla HTML",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuraci\\xf3n-de-la-plantilla-html",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"En el modo de renderizado en el cliente, necesitas configurar una plantilla HTML gen\xe9rica. Esta plantilla servir\xe1 como contenedor de la aplicaci\xf3n, incluyendo las referencias necesarias a recursos y el punto de montaje."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"import type { RenderContext } from '@gez/core';\n\nexport default async (rc: RenderContext) => {\n    // Enviar la recolecci\xf3n de dependencias\n    await rc.commit();\n    \n    // Configurar la plantilla HTML\n    rc.html = `\n<!DOCTYPE html>\n<html>\n<head>\n    ${rc.preload()}           // Precargar recursos\n    <title>Gez</title>\n    ${rc.css()}               // Inyectar estilos\n</head>\n<body>\n    <div id=\"app\"></div>\n    ${rc.importmap()}         // Mapa de importaci\xf3n\n    ${rc.moduleEntry()}       // M\xf3dulo de entrada\n    ${rc.modulePreload()}     // Precarga de m\xf3dulos\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"generaci\\xf3n-de-html-est\\xe1tico",children:["Generaci\xf3n de HTML est\xe1tico",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generaci\\xf3n-de-html-est\\xe1tico",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["Para utilizar el renderizado en el cliente en un entorno de producci\xf3n, es necesario generar un archivo HTML est\xe1tico durante la fase de construcci\xf3n. Gez proporciona una funci\xf3n de enlace ",(0,i.jsx)(n.code,{children:"postBuild"})," para implementar esta funcionalidad:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"import type { GezOptions } from '@gez/core';\n\nexport default {\n    async postBuild(gez) {\n        // Generar archivo HTML est\xe1tico\n        const rc = await gez.render();\n        // Escribir archivo HTML\n        gez.writeSync(\n            gez.resolvePath('dist/client', 'index.html'),\n            rc.html\n        );\n    }\n} satisfies GezOptions;\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}let t=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["es%2Fguide%2Fessentials%2Fcsr.md"]={toc:[{text:"Casos de uso",id:"casos-de-uso",depth:2},{text:"Configuraci\xf3n",id:"configuraci\xf3n",depth:2},{text:"Configuraci\xf3n de la plantilla HTML",id:"configuraci\xf3n-de-la-plantilla-html",depth:3},{text:"Generaci\xf3n de HTML est\xe1tico",id:"generaci\xf3n-de-html-est\xe1tico",depth:3}],title:"Renderizado en el cliente",headingTitle:"Renderizado en el cliente",frontmatter:{titleSuffix:"Gu\xeda de implementaci\xf3n de renderizado en el cliente del framework Gez",description:"Explicaci\xf3n detallada del mecanismo de renderizado en el cliente del framework Gez, incluyendo construcci\xf3n est\xe1tica, estrategias de despliegue y mejores pr\xe1cticas, para ayudar a los desarrolladores a lograr un renderizado frontend eficiente en entornos sin servidor.",head:[["meta",{property:"keywords",content:"Gez, Renderizado en el cliente, CSR, Construcci\xf3n est\xe1tica, Renderizado frontend, Despliegue sin servidor, Optimizaci\xf3n de rendimiento"}]]}}}}]);