"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3588"],{1003:function(e,n,s){s.r(n),s.d(n,{default:()=>t});var r=s(1549),i=s(6603);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",h4:"h4",ol:"ol",div:"div"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"gez",children:["Gez",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#gez",children:"#"})]}),"\n",(0,r.jsxs)(n.h2,{id:"introduction",children:["Introduction",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#introduction",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez is a high-performance web application framework based on Rspack, providing comprehensive application lifecycle management, static asset handling, and server-side rendering capabilities."}),"\n",(0,r.jsxs)(n.h2,{id:"type-definitions",children:["Type Definitions",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#type-definitions",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"runtimetarget",children:["RuntimeTarget",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#runtimetarget",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type RuntimeTarget = 'client' | 'server'\n"})}),"\n",(0,r.jsx)(n.p,{children:"Application runtime environment types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"client"}),": Runs in the browser environment, supporting DOM operations and browser APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server"}),": Runs in the Node.js environment, supporting file system and server-side functionalities"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"importmap",children:["ImportMap",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#importmap",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type ImportMap = {\n  imports?: SpecifierMap\n  scopes?: ScopesMap\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"ES module import mapping type."}),"\n",(0,r.jsxs)(n.h4,{id:"specifiermap",children:["SpecifierMap",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#specifiermap",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type SpecifierMap = Record<string, string>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Module specifier mapping type, used to define the mapping relationships of module import paths."}),"\n",(0,r.jsxs)(n.h4,{id:"scopesmap",children:["ScopesMap",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#scopesmap",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type ScopesMap = Record<string, SpecifierMap>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Scope mapping type, used to define module import mappings within specific scopes."}),"\n",(0,r.jsxs)(n.h3,{id:"command",children:["COMMAND",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type Definition"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum COMMAND {\n    dev = 'dev',\n    build = 'build',\n    preview = 'preview',\n    start = 'start'\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Command type enumeration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dev"}),": Development environment command, starts the development server with hot reloading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"build"}),": Build command, generates production build artifacts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preview"}),": Preview command, starts a local preview server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"start"}),": Start command, runs the production server"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"instance-options",children:["Instance Options",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#instance-options",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Defines the core configuration options for the Gez framework."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface GezOptions {\n  root?: string\n  isProd?: boolean\n  basePathPlaceholder?: string | false\n  modules?: ModuleConfig\n  packs?: PackConfig\n  devApp?: (gez: Gez) => Promise<App>\n  server?: (gez: Gez) => Promise<void>\n  postBuild?: (gez: Gez) => Promise<void>\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"root",children:["root",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": ",(0,r.jsx)(n.code,{children:"process.cwd()"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Project root directory path. Can be an absolute or relative path, with relative paths resolved based on the current working directory."}),"\n",(0,r.jsxs)(n.h4,{id:"isprod",children:["isProd",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#isprod",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": ",(0,r.jsx)(n.code,{children:"process.env.NODE_ENV === 'production'"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Environment flag."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"true"}),": Production environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"false"}),": Development environment"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"basepathplaceholder",children:["basePathPlaceholder",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepathplaceholder",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string | false"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default"}),": ",(0,r.jsx)(n.code,{children:"'[[[___GEZ_DYNAMIC_BASE___]]]'"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Base path placeholder configuration. Used for runtime dynamic replacement of resource base paths. Set to ",(0,r.jsx)(n.code,{children:"false"})," to disable this feature."]}),"\n",(0,r.jsxs)(n.h4,{id:"modules",children:["modules",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#modules",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"ModuleConfig"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Module configuration options. Used to configure the project's module resolution rules, including module aliases and external dependencies."}),"\n",(0,r.jsxs)(n.h4,{id:"packs",children:["packs",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packs",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"PackConfig"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Pack configuration options. Used to package build artifacts into standard npm .tgz format packages."}),"\n",(0,r.jsxs)(n.h4,{id:"devapp",children:["devApp",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#devapp",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"(gez: Gez) => Promise<App>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Development environment application creation function. Used only in the development environment to create the application instance for the development server."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async devApp(gez) {\n    return import('@gez/rspack').then((m) =>\n      m.createRspackHtmlApp(gez, {\n        config(context) {\n          // Custom Rspack configuration\n        }\n      })\n    )\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"server",children:["server",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#server",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"(gez: Gez) => Promise<void>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Server startup configuration function. Used to configure and start the HTTP server, available in both development and production environments."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async server(gez) {\n    const server = http.createServer((req, res) => {\n      gez.middleware(req, res, async () => {\n        const render = await gez.render({\n          params: { url: req.url }\n        });\n        res.end(render.html);\n      });\n    });\n\n    server.listen(3000);\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"postbuild",children:["postBuild",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#postbuild",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"(gez: Gez) => Promise<void>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Post-build processing function. Executed after the project build is completed, useful for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Performing additional resource processing"}),"\n",(0,r.jsx)(n.li,{children:"Deployment operations"}),"\n",(0,r.jsx)(n.li,{children:"Generating static files"}),"\n",(0,r.jsx)(n.li,{children:"Sending build notifications"}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"instance-properties",children:["Instance Properties",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#instance-properties",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"name",children:["name",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#name",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The name of the current module, derived from the module configuration."}),"\n",(0,r.jsxs)(n.h3,{id:"varname",children:["varName",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#varname",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A valid JavaScript variable name generated based on the module name."}),"\n",(0,r.jsxs)(n.h3,{id:"root-1",children:["root",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#root-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The absolute path of the project root directory. If the configured ",(0,r.jsx)(n.code,{children:"root"})," is a relative path, it is resolved based on the current working directory."]}),"\n",(0,r.jsxs)(n.h3,{id:"isprod-1",children:["isProd",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#isprod-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"boolean"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Determines whether the current environment is production. Prioritizes the ",(0,r.jsx)(n.code,{children:"isProd"})," configuration option; if not configured, it checks ",(0,r.jsx)(n.code,{children:"process.env.NODE_ENV"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"basepath",children:["basePath",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepath",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": ",(0,r.jsx)(n.code,{children:"NotReadyError"})," - When the framework is not initialized"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Gets the module base path with leading and trailing slashes. Returns the format ",(0,r.jsx)(n.code,{children:"/${name}/"}),", where name is from the module configuration."]}),"\n",(0,r.jsxs)(n.h3,{id:"basepathplaceholder-1",children:["basePathPlaceholder",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basepathplaceholder-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"string"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the base path placeholder for runtime dynamic replacement. Can be disabled via configuration."}),"\n",(0,r.jsxs)(n.h3,{id:"middleware",children:["middleware",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#middleware",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"Middleware"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the static asset handling middleware. Provides different implementations based on the environment:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Development environment: Supports real-time source compilation and hot reloading"}),"\n",(0,r.jsx)(n.li,{children:"Production environment: Supports long-term caching of static assets"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const server = http.createServer((req, res) => {\n  gez.middleware(req, res, async () => {\n    const rc = await gez.render({ url: req.url });\n    res.end(rc.html);\n  });\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"render",children:["render",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#render",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"(options?: RenderContextOptions) => Promise<RenderContext>"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the server-side rendering function. Provides different implementations based on the environment:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Development environment: Supports hot reloading and real-time preview"}),"\n",(0,r.jsx)(n.li,{children:"Production environment: Provides optimized rendering performance"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Basic usage\nconst rc = await gez.render({\n  params: { url: req.url }\n});\n\n// Advanced configuration\nconst rc = await gez.render({\n  base: '',                    // Base path\n  importmapMode: 'inline',     // Import map mode\n  entryName: 'default',        // Rendering entry\n  params: {\n    url: req.url,\n    state: { user: 'admin' }   // State data\n  }\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"command-1",children:["COMMAND",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#command-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"typeof COMMAND"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the command enumeration type definition."}),"\n",(0,r.jsxs)(n.h3,{id:"moduleconfig",children:["moduleConfig",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#moduleconfig",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"ParsedModuleConfig"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": ",(0,r.jsx)(n.code,{children:"NotReadyError"})," - When the framework is not initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the complete configuration information of the current module, including module resolution rules and alias configurations."}),"\n",(0,r.jsxs)(n.h3,{id:"packconfig",children:["packConfig",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packconfig",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type"}),": ",(0,r.jsx)(n.code,{children:"ParsedPackConfig"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Read-only"}),": ",(0,r.jsx)(n.code,{children:"true"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": ",(0,r.jsx)(n.code,{children:"NotReadyError"})," - When the framework is not initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Gets the packaging-related configuration of the current module, including output paths and package.json processing."}),"\n",(0,r.jsxs)(n.h2,{id:"instance-methods",children:["Instance Methods",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#instance-methods",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"constructor",children:["constructor()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#constructor",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options?: GezOptions"})," - Framework configuration options"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Gez"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creates a Gez framework instance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const gez = new Gez({\n  root: './src',\n  isProd: process.env.NODE_ENV === 'production'\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"init",children:["init()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#init",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),": ",(0,r.jsx)(n.code,{children:"command: COMMAND"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<boolean>"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Error"}),": When re-initializing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NotReadyError"}),": When accessing an uninitialized instance"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Initializes the Gez framework instance. Executes the following core initialization processes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Parses project configuration (package.json, module configuration, pack configuration, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Creates the application instance (development or production environment)"}),"\n",(0,r.jsx)(n.li,{children:"Executes corresponding lifecycle methods based on the command"}),"\n"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"Note"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Throws an error when re-initializing"}),"\n",(0,r.jsxs)(n.li,{children:["Throws ",(0,r.jsx)(n.code,{children:"NotReadyError"})," when accessing an uninitialized instance"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const gez = new Gez({\n  root: './src',\n  isProd: process.env.NODE_ENV === 'production'\n});\n\nawait gez.init(COMMAND.dev);\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"destroy",children:["destroy()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#destroy",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<boolean>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Destroys the Gez framework instance, performing resource cleanup and connection closure. Mainly used for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Shutting down the development server"}),"\n",(0,r.jsx)(n.li,{children:"Cleaning up temporary files and caches"}),"\n",(0,r.jsx)(n.li,{children:"Releasing system resources"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"process.once('SIGTERM', async () => {\n  await gez.destroy();\n  process.exit(0);\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"build",children:["build()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#build",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<boolean>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Executes the application build process, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Compiling source code"}),"\n",(0,r.jsx)(n.li,{children:"Generating production build artifacts"}),"\n",(0,r.jsx)(n.li,{children:"Optimizing and minifying code"}),"\n",(0,r.jsx)(n.li,{children:"Generating asset manifests"}),"\n"]}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"Note"}),(0,r.jsx)(n.div,{className:"rspress-directive-content",children:(0,r.jsxs)(n.p,{children:["Throws ",(0,r.jsx)(n.code,{children:"NotReadyError"})," when called on an uninitialized framework instance\n"]})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async postBuild(gez) {\n    await gez.build();\n    // Generate static HTML after build\n    const render = await gez.render({\n      params: { url: '/' }\n    });\n    gez.writeSync(\n      gez.resolvePath('dist/client', 'index.html'),\n      render.html\n    );\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"server-1",children:["server()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#server-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<void>"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": ",(0,r.jsx)(n.code,{children:"NotReadyError"})," - When the framework is not initialized"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Starts the HTTP server and configures the server instance. Called during the following lifecycles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Development environment (dev): Starts the development server with hot reloading"}),"\n",(0,r.jsx)(n.li,{children:"Production environment (start): Starts the production server with production-grade performance"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async server(gez) {\n    const server = http.createServer((req, res) => {\n      // Handle static assets\n      gez.middleware(req, res, async () => {\n        // Server-side rendering\n        const render = await gez.render({\n          params: { url: req.url }\n        });\n        res.end(render.html);\n      });\n    });\n\n    server.listen(3000, () => {\n      console.log('Server running at http://localhost:3000');\n    });\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"postbuild-1",children:["postBuild()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#postbuild-1",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<boolean>"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Executes post-build processing logic, useful for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generating static HTML files"}),"\n",(0,r.jsx)(n.li,{children:"Processing build artifacts"}),"\n",(0,r.jsx)(n.li,{children:"Executing deployment tasks"}),"\n",(0,r.jsx)(n.li,{children:"Sending build notifications"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="entry.node.ts"',children:"export default {\n  async postBuild(gez) {\n    // Generate static HTML for multiple pages\n    const pages = ['/', '/about', '/404'];\n\n    for (const url of pages) {\n      const render = await gez.render({\n        params: { url }\n      });\n\n      await gez.write(\n        gez.resolvePath('dist/client', url.substring(1), 'index.html'),\n        render.html\n      );\n    }\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"resolvepath",children:["resolvePath",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#resolvepath",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Resolves project paths, converting relative paths to absolute paths."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"projectPath: ProjectPath"})," - Project path type"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"...args: string[]"})," - Path segments"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"string"})," - Resolved absolute path"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Resolve static asset path\nconst htmlPath = gez.resolvePath('dist/client', 'index.html');\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"writesync",children:["writeSync()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#writesync",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Synchronously writes file content."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filepath"}),": ",(0,r.jsx)(n.code,{children:"string"})," - Absolute path of the file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"}),": ",(0,r.jsx)(n.code,{children:"any"})," - Data to write, can be a string, Buffer, or object"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"boolean"})," - Whether the write was successful"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"\nasync postBuild(gez) {\n  const htmlPath = gez.resolvePath('dist/client', 'index.html');\n  const success = await gez.write(htmlPath, '<html>...</html>');\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"readjsonsync",children:["readJsonSync()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#readjsonsync",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Synchronously reads and parses a JSON file."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"}),": ",(0,r.jsx)(n.code,{children:"string"})," - Absolute path of the JSON file"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"any"})," - Parsed JSON object"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": Throws an exception when the file does not exist or the JSON format is invalid"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n  const manifest = gez.readJsonSync(gez.resolvePath('dist/client', 'manifest.json'));\n  // Use the manifest object\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"readjson",children:["readJson()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#readjson",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Asynchronously reads and parses a JSON file."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filename"}),": ",(0,r.jsx)(n.code,{children:"string"})," - Absolute path of the JSON file"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<any>"})," - Parsed JSON object"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": Throws an exception when the file does not exist or the JSON format is invalid"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n  const manifest = await gez.readJson(gez.resolvePath('dist/client', 'manifest.json'));\n  // Use the manifest object\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"getmanifestlist",children:["getManifestList()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getmanifestlist",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gets the build manifest list."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"target"}),": ",(0,r.jsx)(n.code,{children:"RuntimeTarget"})," - Target environment type","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'client'"}),": Client environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'server'"}),": Server environment"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<readonly ManifestJson[]>"})," - Read-only build manifest list"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": Throws ",(0,r.jsx)(n.code,{children:"NotReadyError"})," when the framework instance is not initialized"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This method is used to get the build manifest list for the specified target environment, including the following functionalities:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cache Management"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses internal caching to avoid repeated loading"}),"\n",(0,r.jsx)(n.li,{children:"Returns immutable manifest lists"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Environment Adaptation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Supports both client and server environments"}),"\n",(0,r.jsx)(n.li,{children:"Returns corresponding manifest information based on the target environment"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Module Mapping"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Includes module export information"}),"\n",(0,r.jsx)(n.li,{children:"Records resource dependencies"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n  // Get client build manifest\n  const manifests = await gez.getManifestList('client');\n\n  // Find build information for a specific module\n  const appModule = manifests.find(m => m.name === 'my-app');\n  if (appModule) {\n    console.log('App exports:', appModule.exports);\n    console.log('App chunks:', appModule.chunks);\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"getimportmap",children:["getImportMap()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getimportmap",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gets the import map object."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"target"}),": ",(0,r.jsx)(n.code,{children:"RuntimeTarget"})," - Target environment type","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'client'"}),": Generates import maps for the browser environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'server'"}),": Generates import maps for the server environment"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),": ",(0,r.jsx)(n.code,{children:"Promise<Readonly<ImportMap>>"})," - Read-only import map object"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": Throws ",(0,r.jsx)(n.code,{children:"NotReadyError"})," when the framework instance is not initialized"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This method is used to generate ES module import maps (Import Map), with the following characteristics:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Module Resolution"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generates module mappings based on build manifests"}),"\n",(0,r.jsx)(n.li,{children:"Supports both client and server environments"}),"\n",(0,r.jsx)(n.li,{children:"Automatically handles module path resolution"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cache Optimization"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses internal caching"}),"\n",(0,r.jsx)(n.li,{children:"Returns immutable mapping objects"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Path Handling"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatically handles module paths"}),"\n",(0,r.jsx)(n.li,{children:"Supports dynamic base paths"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n  // Get client import map\n  const importmap = await gez.getImportMap('client');\n\n  // Custom HTML template\n  const html = `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <script type=\"importmap\">\n        ${JSON.stringify(importmap)}\n      <\/script>\n    </head>\n    <body>\n      \x3c!-- Page content --\x3e\n    </body>\n    </html>\n  `;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"getimportmapclientinfo",children:["getImportMapClientInfo()",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getimportmapclientinfo",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gets client import map information."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"mode"}),": ",(0,r.jsx)(n.code,{children:"ImportmapMode"})," - Import map mode","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'inline'"}),": Inline mode, returns HTML script tag"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'js'"}),": JS file mode, returns information with file path"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["JS file mode:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n  src: string;      // URL of the JS file\n  filepath: string;  // Local path of the JS file\n  code: string;      // HTML script tag content\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Inline mode:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n  src: null;\n  filepath: null;\n  code: string;      // HTML script tag content\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throws"}),": Throws ",(0,r.jsx)(n.code,{children:"NotReadyError"})," when the framework instance is not initialized"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This method is used to generate import map code for the client environment, supporting two modes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Inline Mode (inline)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Inlines the import map directly into the HTML"}),"\n",(0,r.jsx)(n.li,{children:"Reduces additional network requests"}),"\n",(0,r.jsx)(n.li,{children:"Suitable for scenarios with smaller import maps"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"JS File Mode (js)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Generates a standalone JS file"}),"\n",(0,r.jsx)(n.li,{children:"Supports browser caching"}),"\n",(0,r.jsx)(n.li,{children:"Suitable for scenarios with larger import maps"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Core functionalities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Automatically handles dynamic base paths"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Supports runtime replacement of module paths"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Optimizes caching strategies"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Ensures module loading order"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n  const server = express();\n  server.use(gez.middleware);\n\n  server.get('*', async (req, res) => {\n    // Use JS file mode\n    const result = await gez.render({\n      importmapMode: 'js',\n      params: { url: req.url }\n    });\n    res.send(result.html);\n  });\n\n  // Or use inline mode\n  server.get('/inline', async (req, res) => {\n    const result = await gez.render({\n      importmapMode: 'inline',\n      params\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}let t=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["en%2Fapi%2Fcore%2Fgez.md"]={toc:[{text:"Introduction",id:"introduction",depth:2},{text:"Type Definitions",id:"type-definitions",depth:2},{text:"RuntimeTarget",id:"runtimetarget",depth:3},{text:"ImportMap",id:"importmap",depth:3},{text:"SpecifierMap",id:"specifiermap",depth:4},{text:"ScopesMap",id:"scopesmap",depth:4},{text:"COMMAND",id:"command",depth:3},{text:"Instance Options",id:"instance-options",depth:2},{text:"root",id:"root",depth:4},{text:"isProd",id:"isprod",depth:4},{text:"basePathPlaceholder",id:"basepathplaceholder",depth:4},{text:"modules",id:"modules",depth:4},{text:"packs",id:"packs",depth:4},{text:"devApp",id:"devapp",depth:4},{text:"server",id:"server",depth:4},{text:"postBuild",id:"postbuild",depth:4},{text:"Instance Properties",id:"instance-properties",depth:2},{text:"name",id:"name",depth:3},{text:"varName",id:"varname",depth:3},{text:"root",id:"root-1",depth:3},{text:"isProd",id:"isprod-1",depth:3},{text:"basePath",id:"basepath",depth:3},{text:"basePathPlaceholder",id:"basepathplaceholder-1",depth:3},{text:"middleware",id:"middleware",depth:3},{text:"render",id:"render",depth:3},{text:"COMMAND",id:"command-1",depth:3},{text:"moduleConfig",id:"moduleconfig",depth:3},{text:"packConfig",id:"packconfig",depth:3},{text:"Instance Methods",id:"instance-methods",depth:2},{text:"constructor()",id:"constructor",depth:3},{text:"init()",id:"init",depth:3},{text:"destroy()",id:"destroy",depth:3},{text:"build()",id:"build",depth:3},{text:"server()",id:"server-1",depth:3},{text:"postBuild()",id:"postbuild-1",depth:3},{text:"resolvePath",id:"resolvepath",depth:3},{text:"writeSync()",id:"writesync",depth:3},{text:"readJsonSync()",id:"readjsonsync",depth:3},{text:"readJson()",id:"readjson",depth:3},{text:"getManifestList()",id:"getmanifestlist",depth:3},{text:"getImportMap()",id:"getimportmap",depth:3},{text:"getImportMapClientInfo()",id:"getimportmapclientinfo",depth:3}],title:"Gez",headingTitle:"Gez",frontmatter:{titleSuffix:"Framework Core Class API Reference",description:"Detailed documentation of the Gez framework's core class API, including application lifecycle management, static asset handling, and server-side rendering capabilities, helping developers gain a deep understanding of the framework's core functionalities.",head:[["meta",{property:"keywords",content:"Gez, API, Lifecycle Management, Static Assets, Server-Side Rendering, Rspack, Web Application Framework"}]]}}}}]);