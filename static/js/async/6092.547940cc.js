"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["6092"],{1330:function(e,n,i){i.r(n),i.d(n,{default:()=>c});var t=i(1549),r=i(6603);function s(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",div:"div",ul:"ul",li:"li",strong:"strong"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"standard-specifications",children:["Standard Specifications",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#standard-specifications",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"Gez is a modern SSR framework that adopts standardized project structures and path resolution mechanisms to ensure consistency and maintainability across development and production environments."}),"\n",(0,t.jsxs)(n.h2,{id:"project-structure-specifications",children:["Project Structure Specifications",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#project-structure-specifications",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"standard-directory-structure",children:["Standard Directory Structure",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#standard-directory-structure",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-txt",children:"root\n│─ dist                  # Compilation output directory\n│  ├─ package.json       # Compiled package configuration\n│  ├─ server             # Server-side compilation output\n│  │  └─ manifest.json   # Compilation manifest output, used for generating importmap\n│  ├─ node               # Node server program compilation output\n│  ├─ client             # Client-side compilation output\n│  │  ├─ versions        # Version storage directory\n│  │  │  └─ latest.tgz   # Archive of the dist directory for package distribution\n│  │  └─ manifest.json   # Compilation manifest output, used for generating importmap\n│  └─ src                # Files generated using tsc\n├─ src\n│  ├─ entry.server.ts    # Server application entry\n│  ├─ entry.client.ts    # Client application entry\n│  └─ entry.node.ts      # Node server application entry\n├─ tsconfig.json         # TypeScript configuration\n└─ package.json          # Package configuration\n"})}),"\n",(0,t.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,t.jsx)(n.div,{className:"rspress-directive-title",children:"Extended Knowledge"}),(0,t.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gez.name"})," is derived from the ",(0,t.jsx)(n.code,{children:"name"})," field in ",(0,t.jsx)(n.code,{children:"package.json"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dist/package.json"})," is derived from the root directory's ",(0,t.jsx)(n.code,{children:"package.json"})]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"dist"})," directory is archived only when ",(0,t.jsx)(n.code,{children:"packs.enable"})," is set to ",(0,t.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.h2,{id:"entry-file-specifications",children:["Entry File Specifications",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entry-file-specifications",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"The client entry file is responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Application Initialization"}),": Configuring basic settings for the client application"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Routing Management"}),": Handling client-side routing and navigation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Management"}),": Implementing client-side state storage and updates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Interaction Handling"}),": Managing user events and interface interactions"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"The server entry file is responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server-Side Rendering"}),": Executing the SSR rendering process"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"HTML Generation"}),": Building the initial page structure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Prefetching"}),": Handling server-side data fetching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Injection"}),": Passing server-side state to the client"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SEO Optimization"}),": Ensuring search engine optimization for pages"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"The Node.js server entry file is responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Server Configuration"}),": Setting HTTP server parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Routing Handling"}),": Managing server-side routing rules"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Middleware Integration"}),": Configuring server middleware"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Management"}),": Handling environment variables and configurations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Request Response"}),": Processing HTTP requests and responses"]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"configuration-file-specifications",children:["Configuration File Specifications",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#configuration-file-specifications",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name",\n    "type": "module",\n    "scripts": {\n        "dev": "gez dev",\n        "build": "npm run build:dts && npm run build:ssr",\n        "build:ssr": "gez build",\n        "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src",\n        "preview": "gez preview",\n        "start": "NODE_ENV=production node dist/index.js"\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "allowJs": false,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "importHelpers": false,\n        "declaration": true,\n        "sourceMap": true,\n        "strict": true,\n        "noImplicitAny": false,\n        "noImplicitReturns": false,\n        "noFallthroughCasesInSwitch": true,\n        "noUnusedLocals": false,\n        "noUnusedParameters": false,\n        "moduleResolution": "node",\n        "esModuleInterop": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "forceConsistentCasingInFileNames": true,\n        "noEmit": true\n    },\n    "include": [\n        "src",\n        "**.ts"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["en%2Fguide%2Fessentials%2Fstd.md"]={toc:[{text:"Project Structure Specifications",id:"project-structure-specifications",depth:2},{text:"Standard Directory Structure",id:"standard-directory-structure",depth:3},{text:"Entry File Specifications",id:"entry-file-specifications",depth:2},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"Configuration File Specifications",id:"configuration-file-specifications",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3}],title:"Standard Specifications",headingTitle:"Standard Specifications",frontmatter:{titleSuffix:"Gez Framework Project Structure and Specification Guide",description:"Detailed introduction to the standard project structure, entry file specifications, and configuration file specifications of the Gez framework, helping developers build standardized and maintainable SSR applications.",head:[["meta",{property:"keywords",content:"Gez, Project Structure, Entry Files, Configuration Specifications, SSR Framework, TypeScript, Project Standards, Development Standards"}]]}}}}]);