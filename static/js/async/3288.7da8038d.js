"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3288"],{7282:function(e,n,t){t.r(n),t.d(n,{default:()=>c});var r=t(1549),s=t(6603);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3",ol:"ol",li:"li"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"html",children:["HTML",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#html",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"本教學將幫助你從零開始搭建一個基於 Gez 的 HTML SSR 應用。我們將透過一個完整的範例來展示如何使用 Gez 框架建立伺服器端渲染應用。"}),"\n",(0,r.jsxs)(n.h2,{id:"專案結構",children:["專案結構",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#專案結構",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"首先，讓我們了解專案的基本結構："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:".\n├── package.json         # 專案配置文件，定義依賴和腳本指令\n├── tsconfig.json        # TypeScript 配置文件，設定編譯選項\n└── src                  # 原始碼目錄\n    ├── app.ts           # 主應用元件，定義頁面結構和互動邏輯\n    ├── create-app.ts    # 應用實例建立工廠，負責初始化應用\n    ├── entry.client.ts  # 客戶端入口檔案，處理瀏覽器端渲染\n    ├── entry.node.ts    # Node.js 伺服器入口檔案，負責開發環境配置和伺服器啟動\n    └── entry.server.ts  # 伺服器端入口檔案，處理 SSR 渲染邏輯\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"專案配置",children:["專案配置",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#專案配置",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立 ",(0,r.jsx)(n.code,{children:"package.json"})," 檔案，配置專案依賴和腳本："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n  "name": "ssr-demo-html",\n  "version": "1.0.0",\n  "type": "module",\n  "private": true,\n  "scripts": {\n    "dev": "gez dev",\n    "build": "npm run build:dts && npm run build:ssr",\n    "build:ssr": "gez build",\n    "preview": "gez preview",\n    "start": "NODE_ENV=production node dist/index.js",\n    "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src"\n  },\n  "dependencies": {\n    "@gez/core": "*"\n  },\n  "devDependencies": {\n    "@gez/rspack": "*",\n    "@types/node": "22.8.6",\n    "typescript": "^5.7.3"\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["建立完 ",(0,r.jsx)(n.code,{children:"package.json"})," 檔案後，需要安裝專案依賴。你可以使用以下任一指令來安裝："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pnpm install\n# 或\nyarn install\n# 或\nnpm install\n"})}),"\n",(0,r.jsx)(n.p,{children:"這將安裝所有必需的依賴套件，包括 TypeScript 和 SSR 相關的依賴。"}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立 ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," 檔案，配置 TypeScript 編譯選項："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "module": "ESNext",\n        "moduleResolution": "node",\n        "isolatedModules": true,\n        "resolveJsonModule": true,\n        \n        "target": "ESNext",\n        "lib": ["ESNext", "DOM"],\n        \n        "strict": true,\n        "skipLibCheck": true,\n        "types": ["@types/node"],\n        \n        "experimentalDecorators": true,\n        "allowSyntheticDefaultImports": true,\n        \n        "baseUrl": ".",\n        "paths": {\n            "ssr-demo-html/src/*": ["./src/*"],\n            "ssr-demo-html/*": ["./*"]\n        }\n    },\n    "include": ["src"],\n    "exclude": ["dist", "node_modules"]\n}\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"原始碼結構",children:["原始碼結構",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#原始碼結構",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"appts",children:["app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立主應用元件 ",(0,r.jsx)(n.code,{children:"src/app.ts"}),"，實作頁面結構和互動邏輯："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/app.ts"',children:"/**\n * @file 範例元件\n * @description 展示一個帶有自動更新時間的頁面標題，用於演示 Gez 框架的基本功能\n */\n\nexport default class App {\n    /**\n     * 當前時間，使用 ISO 格式\n     * @type {string}\n     */\n    public time = '';\n\n    /**\n     * 建立應用實例\n     * @param {SsrContext} [ssrContext] - 伺服器端上下文，包含匯入元資料集合\n     */\n    public constructor(public ssrContext?: SsrContext) {\n        // 建構函式中不需要額外初始化\n    }\n\n    /**\n     * 渲染頁面內容\n     * @returns {string} 返回頁面 HTML 結構\n     */\n    public render(): string {\n        // 確保在伺服器端環境下正確收集匯入元資料\n        if (this.ssrContext) {\n            this.ssrContext.importMetaSet.add(import.meta);\n        }\n\n        return `\n        <div id=\"app\">\n            <h1><a href=\"https://www.jsesm.com/guide/frameworks/html.html\" target=\"_blank\">Gez 快速開始</a></h1>\n            <time datetime=\"${this.time}\">${this.time}</time>\n        </div>\n        `;\n    }\n\n    /**\n     * 客戶端初始化\n     * @throws {Error} 當找不到時間顯示元素時拋出錯誤\n     */\n    public onClient(): void {\n        // 取得時間顯示元素\n        const time = document.querySelector('#app time');\n        if (!time) {\n            throw new Error('找不到時間顯示元素');\n        }\n\n        // 設定定時器，每秒更新一次時間\n        setInterval(() => {\n            this.time = new Date().toISOString();\n            time.setAttribute('datetime', this.time);\n            time.textContent = this.time;\n        }, 1000);\n    }\n\n    /**\n     * 伺服器端初始化\n     */\n    public onServer(): void {\n        this.time = new Date().toISOString();\n    }\n}\n\n/**\n * 伺服器端上下文介面\n * @interface\n */\nexport interface SsrContext {\n    /**\n     * 匯入元資料集合\n     * @type {Set<ImportMeta>}\n     */\n    importMetaSet: Set<ImportMeta>;\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"create-appts",children:["create-app.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-appts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立 ",(0,r.jsx)(n.code,{children:"src/create-app.ts"})," 檔案，負責建立應用實例："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/create-app.ts"',children:"/**\n * @file 應用實例建立\n * @description 負責建立和配置應用實例\n */\n\nimport App from './app';\n\nexport function createApp() {\n    const app = new App();\n    return {\n        app\n    };\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立客戶端入口檔案 ",(0,r.jsx)(n.code,{children:"src/entry.client.ts"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.client.ts"',children:"/**\n * @file 客戶端入口檔案\n * @description 負責客戶端互動邏輯和動態更新\n */\n\nimport { createApp } from './create-app';\n\n// 建立應用實例並初始化\nconst { app } = createApp();\napp.onClient();\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立 ",(0,r.jsx)(n.code,{children:"entry.node.ts"})," 檔案，配置開發環境和伺服器啟動："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"/**\n * @file Node.js 伺服器入口檔案\n * @description 負責開發環境配置和伺服器啟動，提供 SSR 執行時環境\n */\n\nimport http from 'node:http';\nimport type { GezOptions } from '@gez/core';\n\nexport default {\n    /**\n     * 配置開發環境的應用建立器\n     * @description 建立並配置 Rspack 應用實例，用於開發環境的建置和熱更新\n     * @param gez Gez 框架實例，提供核心功能和配置介面\n     * @returns 返回配置好的 Rspack 應用實例，支援 HMR 和即時預覽\n     */\n    async devApp(gez) {\n        return import('@gez/rspack').then((m) =>\n            m.createRspackHtmlApp(gez, {\n                config(context) {\n                    // 在此處自訂 Rspack 編譯配置\n                }\n            })\n        );\n    },\n\n    /**\n     * 配置並啟動 HTTP 伺服器\n     * @description 建立 HTTP 伺服器實例，整合 Gez 中介軟體，處理 SSR 請求\n     * @param gez Gez 框架實例，提供中介軟體和渲染功能\n     */\n    async server(gez) {\n        const server = http.createServer((req, res) => {\n            // 使用 Gez 中介軟體處理請求\n            gez.middleware(req, res, async () => {\n                // 執行伺服器端渲染\n                const rc = await gez.render({\n                    params: { url: req.url }\n                });\n                res.end(rc.html);\n            });\n        });\n\n        server.listen(3000, () => {\n            console.log('服務啟動: http://localhost:3000');\n        });\n    }\n} satisfies GezOptions;\n"})}),"\n",(0,r.jsx)(n.p,{children:"這個檔案是開發環境配置和伺服器啟動的入口檔案，主要包含兩個核心功能："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"devApp"})," 函式：負責建立和配置開發環境的 Rspack 應用實例，支援熱更新和即時預覽功能。"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server"})," 函式：負責建立和配置 HTTP 伺服器，整合 Gez 中介軟體處理 SSR 請求。"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["建立伺服器端渲染入口檔案 ",(0,r.jsx)(n.code,{children:"src/entry.server.ts"}),"："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"/**\n * @file 伺服器端渲染入口檔案\n * @description 負責伺服器端渲染流程、HTML 生成和資源注入\n */\n\nimport type { RenderContext } from '@gez/core';\nimport type App from './app';\nimport type { SsrContext } from './app';\nimport { createApp } from './create-app';\n\n// 封裝頁面內容生成邏輯\nconst renderToString = (app: App, ssrContext: SsrContext): string => {\n    // 將伺服器端渲染上下文注入到應用實例中\n    app.ssrContext = ssrContext;\n    // 初始化伺服器端\n    app.onServer();\n\n    // 生成頁面內容\n    return app.render();\n};\n\nexport default async (rc: RenderContext) => {\n    // 建立應用實例，返回包含 app 實例的物件\n    const { app } = createApp();\n    // 使用 renderToString 生成頁面內容\n    const html = renderToString(app, {\n        importMetaSet: rc.importMetaSet\n    });\n\n    // 提交依賴收集，確保所有必要資源都被載入\n    await rc.commit();\n\n    // 生成完整的 HTML 結構\n    rc.html = `<!DOCTYPE html>\n<html lang=\"zh-TW\">\n<head>\n    ${rc.preload()}\n    <title>Gez 快速開始</title>\n    ${rc.css()}\n</head>\n<body>\n    ${html}\n    ${rc.importmap()}\n    ${rc.moduleEntry()}\n    ${rc.modulePreload()}\n</body>\n</html>\n`;\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"執行專案",children:["執行專案",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#執行專案",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"完成上述檔案配置後，你可以使用以下指令來執行專案："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"開發模式："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"建置專案："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run build\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"生產環境執行："}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run start\n"})}),"\n",(0,r.jsxs)(n.p,{children:["現在，你已經成功建立了一個基於 Gez 的 HTML SSR 應用！訪問 ",(0,r.jsx)(n.a,{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:3000"})," 即可看到效果。"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let c=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["zh-TW%2Fguide%2Fframeworks%2Fhtml.md"]={toc:[{text:"專案結構",id:"專案結構",depth:2},{text:"專案配置",id:"專案配置",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3},{text:"原始碼結構",id:"原始碼結構",depth:2},{text:"app.ts",id:"appts",depth:3},{text:"create-app.ts",id:"create-appts",depth:3},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"執行專案",id:"執行專案",depth:2}],title:"HTML",headingTitle:"HTML",frontmatter:{titleSuffix:"Gez 框架 HTML SSR 應用範例",description:"從零開始搭建基於 Gez 的 HTML SSR 應用，透過實例展示框架的基本用法，包括專案初始化、HTML 配置和入口檔案設定。",head:[["meta",{property:"keywords",content:"Gez, HTML, SSR應用, TypeScript配置, 專案初始化, 伺服器端渲染, 客戶端互動"}]]}}}}]);