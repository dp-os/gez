"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["4255"],{8867:function(e,n,i){i.r(n),i.d(n,{default:()=>l});var r=i(1549),s=i(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",ol:"ol",li:"li",strong:"strong",ul:"ul",h2:"h2",code:"code",pre:"pre",h3:"h3",h4:"h4"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"renderkontext",children:["Renderkontext",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#renderkontext",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext ist eine Kernklasse im Gez Framework, die haupts\xe4chlich f\xfcr die Ressourcenverwaltung und HTML-Generierung w\xe4hrend des Server-Side Renderings (SSR) verantwortlich ist. Es verf\xfcgt \xfcber die folgenden Kernmerkmale:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ESM-basiertes Modulsystem"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verwendet den modernen ECMAScript Modules-Standard"}),"\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt native Modulimporte und -exporte"}),"\n",(0,r.jsx)(n.li,{children:"Erm\xf6glicht bessere Code-Splitting und bedarfsgerechtes Laden"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Intelligente Abh\xe4ngigkeitssammlung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dynamische Sammlung von Abh\xe4ngigkeiten basierend auf dem tats\xe4chlichen Rendering-Pfad"}),"\n",(0,r.jsx)(n.li,{children:"Vermeidet unn\xf6tiges Laden von Ressourcen"}),"\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt asynchrone Komponenten und dynamische Importe"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pr\xe4zise Ressourceneinbindung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strikte Kontrolle der Ressourcenlade-Reihenfolge"}),"\n",(0,r.jsx)(n.li,{children:"Optimiert die Ladeleistung der ersten Seite"}),"\n",(0,r.jsx)(n.li,{children:"Gew\xe4hrleistet die Zuverl\xe4ssigkeit der Client-seitigen Aktivierung (Hydration)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Flexible Konfigurationsmechanismen"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt dynamische Basis-Pfad-Konfiguration"}),"\n",(0,r.jsx)(n.li,{children:"Bietet verschiedene Import-Mapping-Modi"}),"\n",(0,r.jsx)(n.li,{children:"Passt sich verschiedenen Bereitstellungsszenarien an"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"verwendung",children:["Verwendung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#verwendung",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["Im Gez Framework m\xfcssen Entwickler normalerweise keine RenderContext-Instanz direkt erstellen, sondern erhalten eine Instanz \xfcber die Methode ",(0,r.jsx)(n.code,{children:"gez.render()"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"async server(gez) {\n    const server = http.createServer((req, res) => {\n        // Statische Dateiverarbeitung\n        gez.middleware(req, res, async () => {\n            // RenderContext-Instanz \xfcber gez.render() erhalten\n            const rc = await gez.render({\n                params: {\n                    url: req.url\n                }\n            });\n            // HTML-Inhalt senden\n            res.end(rc.html);\n        });\n    });\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"hauptfunktionen",children:["Hauptfunktionen",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#hauptfunktionen",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"abh\\xe4ngigkeitssammlung",children:["Abh\xe4ngigkeitssammlung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#abh\\xe4ngigkeitssammlung",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext implementiert einen intelligenten Mechanismus zur Abh\xe4ngigkeitssammlung, der basierend auf den tats\xe4chlich gerenderten Komponenten dynamisch Abh\xe4ngigkeiten sammelt, anstatt einfach alle m\xf6glichen Ressourcen vorab zu laden:"}),"\n",(0,r.jsxs)(n.h4,{id:"bedarfsgerechte-sammlung",children:["Bedarfsgerechte Sammlung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#bedarfsgerechte-sammlung",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automatische Verfolgung und Aufzeichnung von Modulabh\xe4ngigkeiten w\xe4hrend des Rendering-Prozesses"}),"\n",(0,r.jsx)(n.li,{children:"Sammelt nur CSS-, JavaScript- und andere Ressourcen, die tats\xe4chlich f\xfcr die aktuelle Seite verwendet werden"}),"\n",(0,r.jsxs)(n.li,{children:["Verwendet ",(0,r.jsx)(n.code,{children:"importMetaSet"}),", um die Modulabh\xe4ngigkeiten jeder Komponente genau zu erfassen"]}),"\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt die Abh\xe4ngigkeitssammlung f\xfcr asynchrone Komponenten und dynamische Importe"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"automatisierte-verarbeitung",children:["Automatisierte Verarbeitung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#automatisierte-verarbeitung",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Entwickler m\xfcssen den Abh\xe4ngigkeitssammelprozess nicht manuell verwalten"}),"\n",(0,r.jsx)(n.li,{children:"Das Framework sammelt automatisch Abh\xe4ngigkeitsinformationen w\xe4hrend des Rendering-Prozesses"}),"\n",(0,r.jsxs)(n.li,{children:["Verarbeitet alle gesammelten Ressourcen \xfcber die Methode ",(0,r.jsx)(n.code,{children:"commit()"})]}),"\n",(0,r.jsx)(n.li,{children:"Behandelt automatisch zirkul\xe4re und doppelte Abh\xe4ngigkeiten"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"leistungsoptimierung",children:["Leistungsoptimierung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#leistungsoptimierung",children:"#"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vermeidet das Laden ungenutzter Module und reduziert deutlich die Ladezeit der ersten Seite"}),"\n",(0,r.jsx)(n.li,{children:"Kontrolliert pr\xe4zise die Ressourcenlade-Reihenfolge, um die Rendering-Leistung zu optimieren"}),"\n",(0,r.jsx)(n.li,{children:"Generiert automatisch optimale Import-Mappings (Import Map)"}),"\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt Ressourcen-Preloading und bedarfsgerechte Lade-Strategien"}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"ressourceneinbindung",children:["Ressourceneinbindung",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ressourceneinbindung",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext bietet mehrere Methoden zur Einbindung verschiedener Ressourcentypen, die alle sorgf\xe4ltig entworfen wurden, um die Ladeleistung zu optimieren:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preload()"}),": L\xe4dt CSS- und JS-Ressourcen vor, unterst\xfctzt Priorit\xe4tskonfiguration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"css()"}),": Bindet Stylesheets f\xfcr die erste Seite ein, unterst\xfctzt die Extraktion von kritischem CSS"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"importmap()"}),": Bindet Modul-Import-Mappings ein, unterst\xfctzt dynamische Pfadaufl\xf6sung"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"moduleEntry()"}),": Bindet Client-seitige Einstiegsmodule ein, unterst\xfctzt Mehrfacheinstiegskonfiguration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"modulePreload()"}),": L\xe4dt Modulabh\xe4ngigkeiten vor, unterst\xfctzt bedarfsgerechte Lade-Strategien"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"ressourceneinbindungsreihenfolge",children:["Ressourceneinbindungsreihenfolge",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ressourceneinbindungsreihenfolge",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext kontrolliert strikt die Reihenfolge der Ressourceneinbindung, die auf der Funktionsweise des Browsers und Leistungsoptimierungen basiert:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"head-Bereich:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"preload()"}),": L\xe4dt CSS- und JS-Ressourcen vor, damit der Browser diese Ressourcen fr\xfchzeitig entdeckt und zu laden beginnt"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"css()"}),": Bindet Stylesheets f\xfcr die erste Seite ein, um sicherzustellen, dass die Seitenstile beim Rendering des Inhalts vorhanden sind"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"body-Bereich:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"importmap()"}),": Bindet Modul-Import-Mappings ein, definiert Pfadaufl\xf6sungsregeln f\xfcr ESM-Module"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"moduleEntry()"}),": Bindet Client-seitige Einstiegsmodule ein, muss nach importmap ausgef\xfchrt werden"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"modulePreload()"}),": L\xe4dt Modulabh\xe4ngigkeiten vor, muss nach importmap ausgef\xfchrt werden"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"vollst\\xe4ndiger-rendering-prozess",children:["Vollst\xe4ndiger Rendering-Prozess",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vollst\\xe4ndiger-rendering-prozess",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Ein typischer RenderContext-Verwendungsprozess sieht wie folgt aus:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"export default async (rc: RenderContext) => {\n    // 1. Seiteninhalt rendern und Abh\xe4ngigkeiten sammeln\n    const app = createApp();\n    const html = await renderToString(app, {\n       importMetaSet: rc.importMetaSet\n    });\n\n    // 2. Abh\xe4ngigkeitssammlung abschlie\xdfen\n    await rc.commit();\n    \n    // 3. Vollst\xe4ndiges HTML generieren\n    rc.html = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n            ${rc.preload()}\n            ${rc.css()}\n        </head>\n        <body>\n            ${html}\n            ${rc.importmap()}\n            ${rc.moduleEntry()}\n            ${rc.modulePreload()}\n        </body>\n        </html>\n    `;\n};\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"erweiterte-funktionen",children:["Erweiterte Funktionen",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#erweiterte-funktionen",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"basis-pfad-konfiguration",children:["Basis-Pfad-Konfiguration",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#basis-pfad-konfiguration",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext bietet einen flexiblen Mechanismus zur dynamischen Konfiguration des Basis-Pfads, der es erm\xf6glicht, den Basis-Pfad f\xfcr statische Ressourcen zur Laufzeit dynamisch festzulegen:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    base: '/gez',  // Basis-Pfad festlegen\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dieser Mechanismus ist besonders n\xfctzlich in den folgenden Szenarien:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mehrsprachige Seitenbereitstellung"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"hauptdomain.com      → Standardsprache\nhauptdomain.com/cn/  → Chinesische Seite\nhauptdomain.com/en/  → Englische Seite\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Micro-Frontend-Anwendungen"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt die flexible Bereitstellung von Sub-Anwendungen unter verschiedenen Pfaden"}),"\n",(0,r.jsx)(n.li,{children:"Erleichtert die Integration in verschiedene Hauptanwendungen"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"import-mapping-modi",children:["Import-Mapping-Modi",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#import-mapping-modi",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"RenderContext bietet zwei Import-Mapping-Modi (Import Map):"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Inline-Modus"})," (Standard)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bindet Import-Mappings direkt in das HTML ein"}),"\n",(0,r.jsx)(n.li,{children:"Geeignet f\xfcr kleine Anwendungen, reduziert zus\xe4tzliche Netzwerkanfragen"}),"\n",(0,r.jsx)(n.li,{children:"Sofort verf\xfcgbar beim Laden der Seite"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"JS-Modus"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"L\xe4dt Import-Mappings \xfcber eine externe JavaScript-Datei"}),"\n",(0,r.jsx)(n.li,{children:"Geeignet f\xfcr gro\xdfe Anwendungen, kann den Browser-Cache-Mechanismus nutzen"}),"\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt die dynamische Aktualisierung von Mapping-Inhalten"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Der gew\xfcnschte Modus kann \xfcber die Konfiguration ausgew\xe4hlt werden:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    importmapMode: 'js',  // 'inline' | 'js'\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"einstiegsfunktionskonfiguration",children:["Einstiegsfunktionskonfiguration",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#einstiegsfunktionskonfiguration",children:"#"})]}),"\n",(0,r.jsxs)(n.p,{children:["RenderContext unterst\xfctzt die Konfiguration von ",(0,r.jsx)(n.code,{children:"entryName"}),", um die Einstiegsfunktion f\xfcr das Server-Side Rendering festzulegen:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.node.ts"',children:"const rc = await gez.render({\n    entryName: 'mobile',  // Einstiegsfunktion f\xfcr Mobilger\xe4te festlegen\n    params: {\n        url: req.url\n    }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dieser Mechanismus ist besonders n\xfctzlich in den folgenden Szenarien:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mehrfach-Template-Rendering"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",meta:'title="src/entry.server.ts"',children:"// Einstiegsfunktion f\xfcr Mobilger\xe4te\nexport const mobile = async (rc: RenderContext) => {\n    // Mobilger\xe4te-spezifische Rendering-Logik\n};\n\n// Einstiegsfunktion f\xfcr Desktop-Ger\xe4te\nexport const desktop = async (rc: RenderContext) => {\n    // Desktop-spezifische Rendering-Logik\n};\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"A/B-Tests"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt die Verwendung verschiedener Rendering-Logiken f\xfcr dieselbe Seite"}),"\n",(0,r.jsx)(n.li,{children:"Erleichtert Benutzererfahrungsexperimente"}),"\n",(0,r.jsx)(n.li,{children:"Flexibles Umschalten zwischen verschiedenen Rendering-Strategien"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Spezielle Rendering-Anforderungen"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unterst\xfctzt benutzerdefinierte Rendering-Prozesse f\xfcr bestimmte Seiten"}),"\n",(0,r.jsx)(n.li,{children:"Passt sich den Leistungsoptimierungsanforderungen verschiedener Szenarien an"}),"\n",(0,r.jsx)(n.li,{children:"Erm\xf6glicht eine feinere Kontrolle \xfcber das Rendering"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"best-practices",children:["Best Practices",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#best-practices",children:"#"})]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"RenderContext-Instanz erhalten"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Immer \xfcber die Methode ",(0,r.jsx)(n.code,{children:"gez.render()"})," eine Instanz erhalten"]}),"\n",(0,r.jsx)(n.li,{children:"Bei Bedarf geeignete Parameter \xfcbergeben"}),"\n",(0,r.jsx)(n.li,{children:"Vermeiden Sie die manuelle Erstellung von Instanzen"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Abh\xe4ngigkeitssammlung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Sicherstellen, dass alle Module korrekt ",(0,r.jsx)(n.code,{children:"importMetaSet.add(import.meta)"})," aufrufen"]}),"\n",(0,r.jsxs)(n.li,{children:["Sofort nach dem Rendering die Methode ",(0,r.jsx)(n.code,{children:"commit()"})," aufrufen"]}),"\n",(0,r.jsx)(n.li,{children:"Asynchrone Komponenten und dynamische Importe sinnvoll nutzen, um die Ladeleistung der ersten Seite zu optimieren"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ressourceneinbindung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strikte Einhaltung der Ressourceneinbindungsreihenfolge"}),"\n",(0,r.jsx)(n.li,{children:"Keine CSS-Einbindung im body-Bereich"}),"\n",(0,r.jsx)(n.li,{children:"Sicherstellen, dass importmap vor moduleEntry ausgef\xfchrt wird"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Leistungsoptimierung"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Preloading f\xfcr kritische Ressourcen verwenden"}),"\n",(0,r.jsx)(n.li,{children:"modulePreload sinnvoll nutzen, um das Modulladen zu optimieren"}),"\n",(0,r.jsx)(n.li,{children:"Vermeiden Sie unn\xf6tiges Laden von Ressourcen"}),"\n",(0,r.jsx)(n.li,{children:"Browser-Cache-Mechanismen zur Optimierung der Ladeleistung nutzen"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let l=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["de%2Fguide%2Fessentials%2Frender-context.md"]={toc:[{text:"Verwendung",id:"verwendung",depth:2},{text:"Hauptfunktionen",id:"hauptfunktionen",depth:2},{text:"Abh\xe4ngigkeitssammlung",id:"abh\xe4ngigkeitssammlung",depth:3},{text:"Bedarfsgerechte Sammlung",id:"bedarfsgerechte-sammlung",depth:4},{text:"Automatisierte Verarbeitung",id:"automatisierte-verarbeitung",depth:4},{text:"Leistungsoptimierung",id:"leistungsoptimierung",depth:4},{text:"Ressourceneinbindung",id:"ressourceneinbindung",depth:3},{text:"Ressourceneinbindungsreihenfolge",id:"ressourceneinbindungsreihenfolge",depth:3},{text:"Vollst\xe4ndiger Rendering-Prozess",id:"vollst\xe4ndiger-rendering-prozess",depth:2},{text:"Erweiterte Funktionen",id:"erweiterte-funktionen",depth:2},{text:"Basis-Pfad-Konfiguration",id:"basis-pfad-konfiguration",depth:3},{text:"Import-Mapping-Modi",id:"import-mapping-modi",depth:3},{text:"Einstiegsfunktionskonfiguration",id:"einstiegsfunktionskonfiguration",depth:3},{text:"Best Practices",id:"best-practices",depth:2}],title:"Renderkontext",headingTitle:"Renderkontext",frontmatter:{titleSuffix:"Gez Framework Server-Side Rendering Kernmechanismus",description:"Detaillierte Erl\xe4uterung des RenderContext-Mechanismus im Gez Framework, einschlie\xdflich Ressourcenverwaltung, HTML-Generierung und ESM-Modulsystem, um Entwicklern das Verst\xe4ndnis und die Nutzung der Server-Side Rendering-Funktionalit\xe4t zu erleichtern.",head:[["meta",{property:"keywords",content:"Gez, Renderkontext, RenderContext, SSR, Server-Side Rendering, ESM, Ressourcenverwaltung"}]]}}}}]);