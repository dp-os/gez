"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["9103"],{3616:function(e,r,n){n.r(r),n.d(r,{default:()=>l});var s=n(1549),i=n(6603);function d(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",ul:"ul",li:"li",strong:"strong",h3:"h3",div:"div"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"소개",children:["소개",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#소개",children:"#"})]}),"\n",(0,s.jsxs)(r.h2,{id:"프로젝트-배경",children:["프로젝트 배경",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#프로젝트-배경",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez는 ECMAScript Modules (ESM) 기반의 현대적인 마이크로 프론트엔드 프레임워크로, 고성능 및 확장 가능한 서버 사이드 렌더링(SSR) 애플리케이션 구축에 중점을 둡니다. Genesis 프로젝트의 3세대 제품인 Gez는 기술 진화 과정에서 지속적으로 혁신을 이루어 왔습니다:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v1.0"}),": HTTP 요청 기반의 원격 컴포넌트 온디맨드 로딩 구현"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v2.0"}),": Webpack Module Federation 기반의 애플리케이션 통합 구현"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"v3.0"}),": 브라우저 네이티브 ESM 기반으로 ",(0,s.jsx)(r.a,{href:"/guide/essentials/module-link",children:"모듈 링크"})," 시스템 재설계"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"기술-배경",children:["기술 배경",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#기술-배경",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"마이크로 프론트엔드 아키텍처 발전 과정에서 기존 솔루션은 주로 다음과 같은 한계를 가지고 있었습니다:"}),"\n",(0,s.jsxs)(r.h3,{id:"기존-솔루션의-과제",children:["기존 솔루션의 과제",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#기존-솔루션의-과제",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"성능 병목"}),": 런타임 의존성 주입 및 JavaScript 샌드박스 프록시로 인한 상당한 성능 오버헤드"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"격리 메커니즘"}),": 자체 개발한 샌드박스 환경은 브라우저 네이티브 모듈 격리 능력에 미치지 못함"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"빌드 복잡성"}),": 의존성 공유를 위한 빌드 도구 개조로 인한 프로젝트 유지보수 비용 증가"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"표준 이탈"}),": 특수한 배포 전략 및 런타임 처리 메커니즘으로 인한 현대 웹 개발 표준과의 괴리"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"생태계 제한"}),": 프레임워크 결합 및 맞춤형 API로 인한 기술 스택 선택의 제한"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"기술-혁신",children:["기술 혁신",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#기술-혁신",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez는 현대 웹 표준을 기반으로 새로운 솔루션을 제공합니다:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"네이티브 모듈 시스템"}),": 브라우저 네이티브 ESM 및 Import Maps를 활용한 의존성 관리로 더 빠른 파싱 및 실행 속도 제공"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"표준 격리 메커니즘"}),": ECMAScript 모듈 스코프 기반의 신뢰할 수 있는 애플리케이션 격리"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"개방형 기술 스택"}),": 모든 현대 프론트엔드 프레임워크의 원활한 통합 지원"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"개발자 경험 최적화"}),": 직관적인 개발 모드 및 완전한 디버깅 기능 제공"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"극致的 성능 최적화"}),": 네이티브 기능을 활용한 제로 런타임 오버헤드 및 스마트 캐싱 전략"]}),"\n"]}),"\n",(0,s.jsxs)(r.div,{className:"rspress-directive tip",children:[(0,s.jsx)(r.div,{className:"rspress-directive-title",children:"TIP"}),(0,s.jsx)(r.div,{className:"rspress-directive-content",children:(0,s.jsx)(r.p,{children:"Gez는 고성능 및 확장 가능한 마이크로 프론트엔드 인프라 구축에 중점을 두며, 특히 대규모 서버 사이드 렌더링 애플리케이션 시나리오에 적합합니다."})})]}),"\n",(0,s.jsxs)(r.h2,{id:"기술-사양",children:["기술 사양",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#기술-사양",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"환경-의존성",children:["환경 의존성",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#환경-의존성",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["자세한 브라우저 및 Node.js 환경 요구 사항은 ",(0,s.jsx)(r.a,{href:"/guide/start/environment",children:"환경 요구 사항"})," 문서를 참조하십시오."]}),"\n",(0,s.jsxs)(r.h3,{id:"핵심-기술-스택",children:["핵심 기술 스택",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#핵심-기술-스택",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"의존성 관리"}),": ",(0,s.jsx)(r.a,{href:"https://caniuse.com/?search=import%20map",target:"_blank",rel:"noopener noreferrer",children:"Import Maps"}),"를 사용한 모듈 매핑 및 ",(0,s.jsx)(r.a,{href:"https://github.com/guybedford/es-module-shims",target:"_blank",rel:"noopener noreferrer",children:"es-module-shims"}),"를 통한 호환성 지원"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"빌드 시스템"}),": Rspack 기반의 ",(0,s.jsx)(r.a,{href:"https://rspack.dev/config/externals#externalstypemodule-import",target:"_blank",rel:"noopener noreferrer",children:"module-import"}),"를 사용한 외부 의존성 처리"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"개발 도구 체인"}),": ESM 핫 리로드 및 TypeScript 네이티브 실행 지원"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"프레임워크-포지셔닝",children:["프레임워크 포지셔닝",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#프레임워크-포지셔닝",children:"#"})]}),"\n",(0,s.jsxs)(r.p,{children:["Gez는 ",(0,s.jsx)(r.a,{href:"https://nextjs.org",target:"_blank",rel:"noopener noreferrer",children:"Next.js"})," 또는 ",(0,s.jsx)(r.a,{href:"https://nuxt.com/",target:"_blank",rel:"noopener noreferrer",children:"Nuxt.js"}),"와 달리 마이크로 프론트엔드 인프라 제공에 중점을 둡니다:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"모듈 링크 시스템"}),": 효율적이고 신뢰할 수 있는 모듈 임포트 및 익스포트 구현"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"서버 사이드 렌더링"}),": 유연한 SSR 구현 메커니즘 제공"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"타입 시스템 지원"}),": 완전한 TypeScript 타입 정의 통합"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"프레임워크 중립성"}),": 주요 프론트엔드 프레임워크 통합 지원"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"아키텍처-설계",children:["아키텍처 설계",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#아키텍처-설계",children:"#"})]}),"\n",(0,s.jsxs)(r.h3,{id:"중앙-집중식-의존성-관리",children:["중앙 집중식 의존성 관리",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#중앙-집중식-의존성-관리",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"통합 의존성 소스"}),": 중앙 집중화된 서드파티 의존성 관리"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"자동화된 배포"}),": 의존성 업데이트의 전역 자동 동기화"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"버전 일관성"}),": 정확한 의존성 버전 제어"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"모듈화-설계",children:["모듈화 설계",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#모듈화-설계",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"책임 분리"}),": 비즈니스 로직과 인프라의 분리"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"플러그인 메커니즘"}),": 모듈의 유연한 조합 및 교체 지원"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"표준 인터페이스"}),": 표준화된 모듈 간 통신 프로토콜"]}),"\n"]}),"\n",(0,s.jsxs)(r.h3,{id:"성능-최적화",children:["성능 최적화",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#성능-최적화",children:"#"})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"제로 오버헤드 원칙"}),": 브라우저 네이티브 기능의 최대 활용"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"스마트 캐싱"}),": 콘텐츠 해시 기반의 정확한 캐싱 전략"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"온디맨드 로딩"}),": 세분화된 코드 분할 및 의존성 관리"]}),"\n"]}),"\n",(0,s.jsxs)(r.h2,{id:"프로젝트-성숙도",children:["프로젝트 성숙도",(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#프로젝트-성숙도",children:"#"})]}),"\n",(0,s.jsx)(r.p,{children:"Gez는 약 5년간의 반복적 진화(v1.0 ~ v3.0)를 통해 기업 환경에서 포괄적으로 검증되었습니다. 현재 수십 개의 비즈니스 프로젝트를 안정적으로 지원하며, 기술 스택의 현대화 업그레이드를 지속적으로 추진하고 있습니다. 프레임워크의 안정성, 신뢰성 및 성능 이점은 실무에서 충분히 검증되었으며, 대규모 애플리케이션 개발을 위한 신뢰할 수 있는 기술 기반을 제공합니다."})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),e.components);return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let l=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["ko%2Fguide%2Fstart%2Fintroduction.md"]={toc:[{text:"프로젝트 배경",id:"프로젝트-배경",depth:2},{text:"기술 배경",id:"기술-배경",depth:2},{text:"기존 솔루션의 과제",id:"기존-솔루션의-과제",depth:3},{text:"기술 혁신",id:"기술-혁신",depth:3},{text:"기술 사양",id:"기술-사양",depth:2},{text:"환경 의존성",id:"환경-의존성",depth:3},{text:"핵심 기술 스택",id:"핵심-기술-스택",depth:3},{text:"프레임워크 포지셔닝",id:"프레임워크-포지셔닝",depth:2},{text:"아키텍처 설계",id:"아키텍처-설계",depth:2},{text:"중앙 집중식 의존성 관리",id:"중앙-집중식-의존성-관리",depth:3},{text:"모듈화 설계",id:"모듈화-설계",depth:3},{text:"성능 최적화",id:"성능-최적화",depth:3},{text:"프로젝트 성숙도",id:"프로젝트-성숙도",depth:2}],title:"소개",headingTitle:"소개",frontmatter:{titleSuffix:"Gez 프레임워크 개요 및 기술 혁신",description:"Gez 마이크로 프론트엔드 프레임워크의 프로젝트 배경, 기술 진화 및 핵심 장점을 심층적으로 이해하고, ESM 기반의 현대적인 서버 사이드 렌더링(SSR) 솔루션을 탐구합니다.",head:[["meta",{property:"keywords",content:"Gez, 마이크로 프론트엔드, ESM, 서버 사이드 렌더링, SSR, 기술 혁신, 모듈 연합"}]]}}}}]);