"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([["3374"],{34:function(e,n,s){s.r(n),s.d(n,{default:()=>c});var r=s(1549),i=s(6603);function t(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",div:"div",ul:"ul",li:"li",strong:"strong"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"стандартные-нормы",children:["Стандартные нормы",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#стандартные-нормы",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Gez — это современный SSR-фреймворк, использующий стандартизированную структуру проекта и механизмы разрешения путей для обеспечения согласованности и поддерживаемости проекта в средах разработки и производства."}),"\n",(0,r.jsxs)(n.h2,{id:"нормы-структуры-проекта",children:["Нормы структуры проекта",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#нормы-структуры-проекта",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"стандартная-структура-каталогов",children:["Стандартная структура каталогов",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#стандартная-структура-каталогов",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-txt",children:"root\n│─ dist                  # Каталог для скомпилированных файлов\n│  ├─ package.json       # Конфигурация пакета после компиляции\n│  ├─ server             # Скомпилированные файлы сервера\n│  │  └─ manifest.json   # Выходной файл манифеста компиляции, используется для создания importmap\n│  ├─ node               # Скомпилированные файлы Node-сервера\n│  ├─ client             # Скомпилированные файлы клиента\n│  │  ├─ versions        # Каталог для хранения версий\n│  │  │  └─ latest.tgz   # Архив каталога dist для распространения пакета\n│  │  └─ manifest.json   # Выходной файл манифеста компиляции, используется для создания importmap\n│  └─ src                # Файлы, сгенерированные с помощью tsc\n├─ src\n│  ├─ entry.server.ts    # Входной файл серверного приложения\n│  ├─ entry.client.ts    # Входной файл клиентского приложения\n│  └─ entry.node.ts      # Входной файл Node-серверного приложения\n├─ tsconfig.json         # Конфигурация TypeScript\n└─ package.json          # Конфигурация пакета\n"})}),"\n",(0,r.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,r.jsx)(n.div,{className:"rspress-directive-title",children:"Дополнительная информация"}),(0,r.jsxs)(n.div,{className:"rspress-directive-content",children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"gez.name"})," берется из поля ",(0,r.jsx)(n.code,{children:"name"})," в ",(0,r.jsx)(n.code,{children:"package.json"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dist/package.json"})," берется из ",(0,r.jsx)(n.code,{children:"package.json"})," в корневом каталоге"]}),"\n",(0,r.jsxs)(n.li,{children:["Архивация каталога ",(0,r.jsx)(n.code,{children:"dist"})," происходит только при установке ",(0,r.jsx)(n.code,{children:"packs.enable"})," в ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.h2,{id:"нормы-входных-файлов",children:["Нормы входных файлов",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#нормы-входных-файлов",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"entryclientts",children:["entry.client.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryclientts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Клиентский входной файл отвечает за:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Инициализацию приложения"}),": настройка базовых параметров клиентского приложения"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Управление маршрутизацией"}),": обработка клиентских маршрутов и навигации"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Управление состоянием"}),": реализация хранения и обновления состояния клиента"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Обработку взаимодействий"}),": управление пользовательскими событиями и взаимодействиями с интерфейсом"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entryserverts",children:["entry.server.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entryserverts",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Серверный входной файл отвечает за:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Серверный рендеринг"}),": выполнение процесса SSR-рендеринга"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Генерацию HTML"}),": построение начальной структуры страницы"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Предварительное получение данных"}),": обработка получения данных на сервере"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Инъекцию состояния"}),": передача состояния сервера клиенту"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Оптимизацию SEO"}),": обеспечение оптимизации для поисковых систем"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"entrynodets",children:["entry.node.ts",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#entrynodets",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"Входной файл Node.js-сервера отвечает за:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Конфигурацию сервера"}),": настройка параметров HTTP-сервера"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Обработку маршрутов"}),": управление правилами маршрутизации на сервере"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Интеграцию промежуточного ПО"}),": настройка промежуточного ПО сервера"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Управление окружением"}),": обработка переменных окружения и конфигураций"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Обработку запросов и ответов"}),": обработка HTTP-запросов и ответов"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"нормы-конфигурационных-файлов",children:["Нормы конфигурационных файлов",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#нормы-конфигурационных-файлов",children:"#"})]}),"\n",(0,r.jsxs)(n.h3,{id:"packagejson",children:["package.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="package.json"',children:'{\n    "name": "your-app-name",\n    "type": "module",\n    "scripts": {\n        "dev": "gez dev",\n        "build": "npm run build:dts && npm run build:ssr",\n        "build:ssr": "gez build",\n        "build:dts": "tsc --declaration --emitDeclarationOnly --outDir dist/src",\n        "preview": "gez preview",\n        "start": "NODE_ENV=production node dist/index.js"\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"tsconfigjson",children:["tsconfig.json",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tsconfigjson",children:"#"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",meta:'title="tsconfig.json"',children:'{\n    "compilerOptions": {\n        "isolatedModules": true,\n        "allowJs": false,\n        "experimentalDecorators": true,\n        "resolveJsonModule": true,\n        "types": [\n            "@types/node"\n        ],\n        "target": "ESNext",\n        "module": "ESNext",\n        "importHelpers": false,\n        "declaration": true,\n        "sourceMap": true,\n        "strict": true,\n        "noImplicitAny": false,\n        "noImplicitReturns": false,\n        "noFallthroughCasesInSwitch": true,\n        "noUnusedLocals": false,\n        "noUnusedParameters": false,\n        "moduleResolution": "node",\n        "esModuleInterop": true,\n        "skipLibCheck": true,\n        "allowSyntheticDefaultImports": true,\n        "forceConsistentCasingInFileNames": true,\n        "noEmit": true\n    },\n    "include": [\n        "src",\n        "**.ts"\n    ],\n    "exclude": [\n        "dist"\n    ]\n}\n'})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}let c=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["ru%2Fguide%2Fessentials%2Fstd.md"]={toc:[{text:"Нормы структуры проекта",id:"нормы-структуры-проекта",depth:2},{text:"Стандартная структура каталогов",id:"стандартная-структура-каталогов",depth:3},{text:"Нормы входных файлов",id:"нормы-входных-файлов",depth:2},{text:"entry.client.ts",id:"entryclientts",depth:3},{text:"entry.server.ts",id:"entryserverts",depth:3},{text:"entry.node.ts",id:"entrynodets",depth:3},{text:"Нормы конфигурационных файлов",id:"нормы-конфигурационных-файлов",depth:2},{text:"package.json",id:"packagejson",depth:3},{text:"tsconfig.json",id:"tsconfigjson",depth:3}],title:"Стандартные нормы",headingTitle:"Стандартные нормы",frontmatter:{titleSuffix:"Руководство по структуре и стандартам проекта Gez",description:"Подробное описание стандартной структуры проекта, спецификаций входных файлов и конфигурационных файлов фреймворка Gez, помогающее разработчикам создавать стандартизированные и поддерживаемые SSR-приложения.",head:[["meta",{property:"keywords",content:"Gez, структура проекта, входные файлы, конфигурационные стандарты, SSR-фреймворк, TypeScript, стандарты проекта, стандарты разработки"}]]}}}}]);